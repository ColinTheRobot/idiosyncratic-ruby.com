<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Idiosyncratic Ruby</title>
  <subtitle>A 31 Parts Story about Ruby Specialities. A New Post Every Day in May 2015!</subtitle>
  <id>http://idiosyncratic-ruby.com/index/</id>
  <link href="http://idiosyncratic-ruby.com/index/"/>
  <link href="https://feeds.feedburner.com/IdiosyncraticRuby" rel="self"/>
  <updated>2016-05-01T02:00:00+02:00</updated>
  <author>
    <name>Jan Lelis</name>
  </author>
  <entry>
    <title>No More Errors</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/32-no-more-errors.html"/>
    <id>http://idiosyncratic-ruby.com/32-no-more-errors.html</id>
    <published>2016-05-01T02:00:00+02:00</published>
    <updated>2016-05-01T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;If you don't like errors in your code, you will have to fix them. This handy list of Ruby's errors will hopefully help you do so! (And welcome back for the second season of &lt;strong&gt;Idiosyncratic Ruby&lt;/strong&gt;!)&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="built-in-exceptions"&gt;Built-in Exceptions&lt;/h2&gt;

&lt;table class="table-24-38-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Exception&lt;/th&gt;
      &lt;th&gt;Thrown by core Ruby when&lt;/th&gt;
      &lt;th&gt;Remarks&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/NoMemoryError.html"&gt;NoMemoryError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;The Ruby interpreter could not allocate the required memory&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;"Idiosyncratic" * 100_000_000_000&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/ScriptError.html"&gt;ScriptError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;Not thrown directly&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/LoadError.html"&gt;ScriptError → LoadError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;A source file could not be &lt;a href="http://ruby-doc.org/core-2.3.0/Kernel.html#method-i-load"&gt;loaded&lt;/a&gt;, &lt;a href="http://ruby-doc.org/core-2.3.0/Kernel.html#method-i-require"&gt;required&lt;/a&gt;, or &lt;a href="http://ruby-doc.org/core-2.3.0/Kernel.html#method-i-require_relative"&gt;required relatively&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;It is meant for source code the current program is running and therfore should not be used for other kinds of files&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/NotImplementedError.html"&gt;ScriptError → NotImplementedError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;A feature of Ruby does not work on this platform/OS, for example, &lt;a href="http://ruby-doc.org/core-2.3.0/Process.html#method-c-fork"&gt;fork&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Although it is often used as "I have not implemented it (yet)", its original purpose is low-level platform support errors&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/SyntaxError.html"&gt;ScriptError → SyntaxError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Invalid Ruby syntax was found&lt;/td&gt;
      &lt;td&gt;Do not raise when parsing some other file format fails. It is meant for source code that the current program is running.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/SecurityError.html"&gt;SecurityError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Mostly raised when attempting a forbidden &lt;a href="http://ruby-doc.com/docs/ProgrammingRuby/html/taint.html"&gt;$SAFE level 1&lt;/a&gt; operation&lt;/td&gt;
      &lt;td&gt;Use as base class for critical security issues, which should intentionally not be rescued by default&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/SignalException.html"&gt;SignalException&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;A signal is received&lt;/td&gt;
      &lt;td&gt;The common way to catch a signal is the &lt;a href="http://ruby-doc.org/core-2.3.0/Signal.html#method-c-trap"&gt;trap&lt;/a&gt; method&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Interrupt.html"&gt;SignalException → Interrupt&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;An interupt signal (SIGINT) is received&lt;/td&gt;
      &lt;td&gt;The common way to catch a signal is the &lt;a href="http://ruby-doc.org/core-2.3.0/Signal.html#method-c-trap"&gt;trap&lt;/a&gt; method&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/StandardError.html"&gt;StandardError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;Base class for normal exceptions. See next table.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/SystemExit.html"&gt;SystemExit&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Thrown by &lt;a href="http://ruby-doc.org/core-2.3.0/Kernel.html#method-i-exit"&gt;Kernel#exit&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Not thrown by &lt;a href="http://ruby-doc.org/core-2.3.0/Kernel.html#method-i-exit-21"&gt;Kernel#exit!&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/SystemStackError.html"&gt;SystemStackError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Raised for stack overflows, for example, in case of infinite recursion&lt;/td&gt;
      &lt;td&gt;Cannot always be caught by the interpreter&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/fatal.html"&gt;fatal&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;When a &lt;a href="https://github.com/ruby/ruby/blob/v2_3_0/thread.c#L4752-L4753"&gt;deadlock&lt;/a&gt; is discovered or &lt;a href="https://github.com/ruby/ruby/blob/v2_3_0/eval.c#L1651"&gt;this special vm exception&lt;/a&gt; is triggered&lt;/td&gt;
      &lt;td&gt;Never rescuable. You can use this hack to get a reference to the error object: &lt;code&gt;ObjectSpace.each_object(Class){|c| break c if c.ancestors.include?(Exception) &amp;amp;&amp;amp; c.name == 'fatal' }&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id="standarderror"&gt;StandardError&lt;/h3&gt;

&lt;p&gt;These will be caught by the &lt;code&gt;rescue&lt;/code&gt; statement without defining an explicit error class.&lt;/p&gt;

&lt;table class="table-24-38-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Exception&lt;/th&gt;
      &lt;th&gt;Thrown by core Ruby when&lt;/th&gt;
      &lt;th&gt;Remarks&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/ArgumentError.html"&gt;ArgumentError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Raised when a method is not given the proper arguments, for example, a wrong argument count&lt;/td&gt;
      &lt;td&gt;Best class to inherit from for custom errors describing that the method usage was wrong&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/UncaughtThrowError.html"&gt;ArgumentError → UncaughtThrowError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;When &lt;a href="http://ruby-doc.org/core-2.3.0/Kernel.html#method-i-throw"&gt;throw&lt;/a&gt; is used without the proper &lt;a href="http://ruby-doc.org/core-2.3.0/Kernel.html#method-i-catch"&gt;catch&lt;/a&gt; around&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/EncodingError.html"&gt;EncodingError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Sometimes raised directly in &lt;a href="https://github.com/ruby/ruby/blob/v2_3_0/encoding.c#L182-L189"&gt;unicode edge cases&lt;/a&gt; or when &lt;a href="https://github.com/ruby/ruby/blob/v2_3_0/symbol.c#L433"&gt;symbols are broken&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Encoding/CompatibilityError.html"&gt;Encoding:: CompatibilityError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Raised when trying to combine strings of two incompatible encodings&lt;/td&gt;
      &lt;td&gt;Example: &lt;code&gt;"Idiosyn" +"crätic".encode("UTF-16LE")&lt;/code&gt; under UTF-8 leads to &lt;code&gt;Encoding::CompatibilityError: incompatible character encodings: UTF-8 and UTF-16LE&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Encoding/ConverterNotFoundError.html"&gt;Encoding:: ConverterNotFoundError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Raised when no encoding converter is available&lt;/td&gt;
      &lt;td&gt;Example: &lt;code&gt;"Idiosyncrätic".encode("ABC")&lt;/code&gt; under UTF-8 leads to &lt;code&gt;Encoding::ConverterNotFoundError: code converter not found (UTF-8 to ABC)&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Encoding/InvalidByteSequenceError.html"&gt;Encoding:: InvalidByteSequenceError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;String contains byte sequences not valid in the current encoding&lt;/td&gt;
      &lt;td&gt;Example: &lt;code&gt;"Idiosyncr\u{D800}tic".encode("ASCII")&lt;/code&gt; under UTF-8 leads to &lt;code&gt;Encoding::InvalidByteSequenceError: "\xED" followed by "\xA0" on UTF-8&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Encoding/UndefinedConversionError.html"&gt;Encoding:: UndefinedConversionError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Raised when an encoding converter is available, but it cannot convert a specific codepoint&lt;/td&gt;
      &lt;td&gt;Example: &lt;code&gt;"\u{00A0}".encode("EUC-JP")&lt;/code&gt; under UTF-8 leads to &lt;code&gt;Encoding::UndefinedConversionError: U+00A0 from UTF-8 to EUC-JP&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Fiber.html"&gt;FiberError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Raised when an invalid operation is attempted on a &lt;a href="http://ruby-doc.org/core-2.3.0/Fiber.html"&gt;Fiber&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Such as: Attempting to call/resume a dead Fiber, yield from the root fiber, calling a Fiber across threads&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/IOError.html"&gt;IOError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Raised when an &lt;a href="ruby-doc.org/core-2.3.0/IO.html"&gt;IO&lt;/a&gt; operation fails, like opening a file&lt;/td&gt;
      &lt;td&gt;Pay attention that there are some failures will raise a &lt;code&gt;SystemCallError&lt;/code&gt;, which is not a sub-class of &lt;code&gt;IOError&lt;/code&gt;!&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/EOFError.html"&gt;IOError → EOFError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Raised by many &lt;a href="ruby-doc.org/core-2.3.0/IO.html"&gt;IO&lt;/a&gt; operations when reaching the end of file&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/IndexError.html"&gt;IndexError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Raised when an element or deducted value cannot be retrieved, for example, when using &lt;a href="http://ruby-doc.org/core-2.3.0/Array.html#method-i-fetch"&gt;Array#fetch&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Thrown by many core classes like Array, Regex, String, Struct or some standard libraries like &lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/strscan/rdoc/StringScanner.html"&gt;strscan&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/KeyError.html"&gt;IndexError → KeyError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Raised when an element cannot be retrieved (by a key), for example, when using &lt;a href="ruby-doc.org/core-2.3.0/Hash.html#method-i-fetch"&gt;Hash#fetch&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Mainly used by hashes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/StopIteration.html"&gt;IndexError → StopIteration&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Raised when an &lt;a href="ruby-doc.org/core-2.3.0/Enumerator.html"&gt;external iterator&lt;/a&gt; has &lt;a href="http://ruby-doc.org/core-2.3.0/StopIteration.html"&gt;reached its end&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;You can use the &lt;a href="http://ruby-doc.org/core-2.3.0/Kernel.html#method-i-loop"&gt;Kernel#loop&lt;/a&gt; method to automatically catch &lt;code&gt;StopIteration&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/ClosedQueueError.html"&gt;IndexError → StopIteration → ClosedQueueError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Raised when trying to modify a &lt;a href="http://ruby-doc.org/core-2.3.0/Queue.html#method-i-close"&gt;closed Queue&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/LocalJumpError.html"&gt;LocalJumpError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Thrown when an invalid control flow operation is attempted, like calling &lt;code&gt;yield&lt;/code&gt; from a method that was not passed a block to&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;LocalJumpError&lt;/code&gt;s contains a &lt;code&gt;reason&lt;/code&gt; and an &lt;code&gt;exit_value&lt;/code&gt; property from the last valid context&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Math/DomainError.html"&gt;Math::DomainError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;An invalid mathematical operation was attempted, for example, trying to calculate the &lt;a href="https://en.wikipedia.org/wiki/Inverse_trigonometric_functions"&gt;arctan&lt;/a&gt; of a value greater than 1&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/NameError.html"&gt;NameError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Raised when referencing things that do not exist, like unknown constants&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/NoMethodError.html"&gt;NameError → NoMethodError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Raised if trying to call a method that does not exist, and no &lt;a href="http://ruby-doc.org/core-2.3.0/BasicObject.html#method-i-method_missing"&gt;&lt;code&gt;method_missing&lt;/code&gt;&lt;/a&gt; is defined&lt;/td&gt;
      &lt;td&gt;Trying to call non-existant private methods of &lt;code&gt;self&lt;/code&gt; (like &lt;code&gt;Kernel#puts&lt;/code&gt;) will result in &lt;code&gt;NameError&lt;/code&gt; instead of &lt;code&gt;NoMethodError&lt;/code&gt;, because it could also have been a local variable&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/RangeError.html"&gt;RangeError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;A numerical number is off, most often it is too small or big&lt;/td&gt;
      &lt;td&gt;For example, &lt;code&gt;[].pack("C100000000000000000000")&lt;/code&gt; does not work, because &lt;a href="http://idiosyncratic-ruby.com/4-what-the-pack.html#c--an-unsigned-integer-per-byte"&gt;pack&lt;/a&gt; requires the number to fit into &lt;code&gt;long&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/FloatDomainError.html"&gt;RangeError → FloatDomainError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Raised when trying to convert a special Float value (&lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;Float::INFINITY&lt;/code&gt;) to another number format that does not support special values&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/RegexpError.html"&gt;RegexpError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Raised when trying to dynamically create an invalid regex&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/RuntimeError.html"&gt;RuntimeError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Unspecific occurrences&lt;/td&gt;
      &lt;td&gt;Default error class that will be used when raising a string: &lt;code&gt;raise "something"&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/SystemCallError.html"&gt;SystemCallError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;Lower level system call errors. See next table.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/ThreadError.html"&gt;ThreadError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Raised for invalid &lt;a href="http://ruby-doc.org/core-2.3.0/Thread.html"&gt;Thread&lt;/a&gt; operations&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/TypeError.html"&gt;TypeError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Violations against Ruby's type system&lt;/td&gt;
      &lt;td&gt;For example, &lt;code&gt;"" + nil&lt;/code&gt; will lead to "TypeError: no implicit conversion of nil into String"&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/ZeroDivisionError.html"&gt;ZeroDivisionError&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;An integer, complex, or rational number was tried to divide by another integer, complex, or rational number&lt;/td&gt;
      &lt;td&gt;Floats and BigDecimal return Infinity, negative Infinity, or &lt;code&gt;NaN&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id="systemcallerror"&gt;SystemCallError&lt;/h3&gt;

&lt;p&gt;These errors are thrown by the operating system under certain circumstances. The exact list depends on your platform and can be found in &lt;a href="http://www.gnu.org/software/libc/manual/html_node/Error-Codes.html"&gt;a file called &lt;code&gt;errno.h&lt;/code&gt;&lt;/a&gt;. You get such errors when working with processes, &lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/socket/rdoc/Socket.html#method-i-connect-label-Unix-based+Exceptions"&gt;sockets&lt;/a&gt;, files, and other functionality that relies on low level system operations.&lt;/p&gt;

&lt;p&gt;What follows is the list of errors that are known by Ruby. The error numbers and messages were generated on a recent ubuntu Linux machine. All system call errors are namespaced under &lt;code&gt;Errno::&lt;/code&gt; and can be dynamically created using &lt;code&gt;SystemCallError.new(number)&lt;/code&gt;.&lt;/p&gt;

&lt;table class="table-30-8-36-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Exception&lt;/th&gt;
      &lt;th&gt;No&lt;/th&gt;
      &lt;th&gt;Message&lt;/th&gt;
      &lt;th&gt;Example One-Liner¹&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::E2BIG&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;Argument list too long&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EACCES&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;Permission denied&lt;/td&gt;
      &lt;td&gt;As non-root: &lt;code&gt;File.read('/root')&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EADDRINUSE&lt;/td&gt;
      &lt;td&gt;98&lt;/td&gt;
      &lt;td&gt;Address already in use&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;require "socket"; 2.times{ TCPServer.new("", 3003) }&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EADDRNOTAVAIL&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;Cannot assign requested address&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EADV&lt;/td&gt;
      &lt;td&gt;68&lt;/td&gt;
      &lt;td&gt;Advertise error&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EAFNOSUPPORT&lt;/td&gt;
      &lt;td&gt;97&lt;/td&gt;
      &lt;td&gt;Address family not supported by protocol&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EAGAIN&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;Resource temporarily unavailable&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/IO/EAGAINWaitReadable.html"&gt;Errno::EAGAIN → IO::EAGAINWaitReadable&lt;/a&gt;²&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;STDIN.read_nonblock(1)&lt;/code&gt; (if blocking)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/IO/EAGAINWaitWritable.html"&gt;Errno::EAGAIN → IO::EAGAINWaitWritable&lt;/a&gt;²&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EALREADY&lt;/td&gt;
      &lt;td&gt;114&lt;/td&gt;
      &lt;td&gt;Operation already in progress&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EBADE&lt;/td&gt;
      &lt;td&gt;52&lt;/td&gt;
      &lt;td&gt;Invalid exchange&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EBADF&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;Bad file descriptor&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;IO.new(-1)&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EBADFD&lt;/td&gt;
      &lt;td&gt;77&lt;/td&gt;
      &lt;td&gt;File descriptor in bad state&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EBADMSG&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;Bad message&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EBADR&lt;/td&gt;
      &lt;td&gt;53&lt;/td&gt;
      &lt;td&gt;Invalid request descriptor&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EBADRQC&lt;/td&gt;
      &lt;td&gt;56&lt;/td&gt;
      &lt;td&gt;Invalid request code&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EBADSLT&lt;/td&gt;
      &lt;td&gt;57&lt;/td&gt;
      &lt;td&gt;Invalid slot&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EBFONT&lt;/td&gt;
      &lt;td&gt;59&lt;/td&gt;
      &lt;td&gt;Bad font file format&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EBUSY&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;Device or resource busy&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ECANCELED&lt;/td&gt;
      &lt;td&gt;125&lt;/td&gt;
      &lt;td&gt;Operation canceled&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ECHILD&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;No child processes&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;Process.wait&lt;/code&gt; (with no child processes)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ECHRNG&lt;/td&gt;
      &lt;td&gt;44&lt;/td&gt;
      &lt;td&gt;Channel number out of range&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ECOMM&lt;/td&gt;
      &lt;td&gt;70&lt;/td&gt;
      &lt;td&gt;Communication error on send&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ECONNABORTED&lt;/td&gt;
      &lt;td&gt;103&lt;/td&gt;
      &lt;td&gt;Software caused connection abort&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ECONNREFUSED&lt;/td&gt;
      &lt;td&gt;111&lt;/td&gt;
      &lt;td&gt;Connection refused&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;require "socket"; TCPSocket.new("", rand(987654321))&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ECONNRESET&lt;/td&gt;
      &lt;td&gt;104&lt;/td&gt;
      &lt;td&gt;Connection reset by peer&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EDEADLK&lt;/td&gt;
      &lt;td&gt;35&lt;/td&gt;
      &lt;td&gt;Resource deadlock avoided&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EDEADLOCK&lt;/td&gt;
      &lt;td&gt;35&lt;/td&gt;
      &lt;td&gt;Resource deadlock avoided&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EDESTADDRREQ&lt;/td&gt;
      &lt;td&gt;89&lt;/td&gt;
      &lt;td&gt;Destination address required&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EDOM&lt;/td&gt;
      &lt;td&gt;33&lt;/td&gt;
      &lt;td&gt;Numerical argument out of domain&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EDOTDOT&lt;/td&gt;
      &lt;td&gt;73&lt;/td&gt;
      &lt;td&gt;RFS specific error&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EDQUOT&lt;/td&gt;
      &lt;td&gt;122&lt;/td&gt;
      &lt;td&gt;Disk quota exceeded&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EEXIST&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;File exists&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;Dir.mkdir("/")&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EFAULT&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;Bad address&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EFBIG&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;File too large&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EHOSTDOWN&lt;/td&gt;
      &lt;td&gt;112&lt;/td&gt;
      &lt;td&gt;Host is down&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EHOSTUNREACH&lt;/td&gt;
      &lt;td&gt;113&lt;/td&gt;
      &lt;td&gt;No route to host&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EHWPOISON&lt;/td&gt;
      &lt;td&gt;133&lt;/td&gt;
      &lt;td&gt;Memory page has hardware error&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EIDRM&lt;/td&gt;
      &lt;td&gt;43&lt;/td&gt;
      &lt;td&gt;Identifier removed&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EILSEQ&lt;/td&gt;
      &lt;td&gt;84&lt;/td&gt;
      &lt;td&gt;Invalid or incomplete multibyte or wide character&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EINPROGRESS&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;Operation now in progress&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/IO/EINPROGRESSWaitReadable.html"&gt;Errno::EINPROGRESS → IO::EINPROGRESSWaitReadable&lt;/a&gt;²&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/IO/EINPROGRESSWaitWritable.html"&gt;Errno::EINPROGRESS → IO::EINPROGRESSWaitWritable&lt;/a&gt;²&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EINTR&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;Interrupted system call&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EINVAL&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;Invalid argument&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;Process.clock_gettime(42)&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EIO&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;Input/output error&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EISCONN&lt;/td&gt;
      &lt;td&gt;106&lt;/td&gt;
      &lt;td&gt;Transport endpoint is already connected&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EISDIR&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;Is a directory&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;File.read("/")&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EISNAM&lt;/td&gt;
      &lt;td&gt;120&lt;/td&gt;
      &lt;td&gt;Is a named type file&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EKEYEXPIRED&lt;/td&gt;
      &lt;td&gt;127&lt;/td&gt;
      &lt;td&gt;Key has expired&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EKEYREJECTED&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;Key was rejected by service&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EKEYREVOKED&lt;/td&gt;
      &lt;td&gt;128&lt;/td&gt;
      &lt;td&gt;Key has been revoked&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EL2HLT&lt;/td&gt;
      &lt;td&gt;51&lt;/td&gt;
      &lt;td&gt;Level 2 halted&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EL2NSYNC&lt;/td&gt;
      &lt;td&gt;45&lt;/td&gt;
      &lt;td&gt;Level 2 not synchronized&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EL3HLT&lt;/td&gt;
      &lt;td&gt;46&lt;/td&gt;
      &lt;td&gt;Level 3 halted&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EL3RST&lt;/td&gt;
      &lt;td&gt;47&lt;/td&gt;
      &lt;td&gt;Level 3 reset&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ELIBACC&lt;/td&gt;
      &lt;td&gt;79&lt;/td&gt;
      &lt;td&gt;Can not access a needed shared library&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ELIBBAD&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;Accessing a corrupted shared library&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ELIBEXEC&lt;/td&gt;
      &lt;td&gt;83&lt;/td&gt;
      &lt;td&gt;Cannot exec a shared library directly&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ELIBMAX&lt;/td&gt;
      &lt;td&gt;82&lt;/td&gt;
      &lt;td&gt;Attempting to link in too many shared libraries&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ELIBSCN&lt;/td&gt;
      &lt;td&gt;81&lt;/td&gt;
      &lt;td&gt;.lib section in a.out corrupted&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ELNRNG&lt;/td&gt;
      &lt;td&gt;48&lt;/td&gt;
      &lt;td&gt;Link number out of range&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ELOOP&lt;/td&gt;
      &lt;td&gt;40&lt;/td&gt;
      &lt;td&gt;Too many levels of symbolic links&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EMEDIUMTYPE&lt;/td&gt;
      &lt;td&gt;124&lt;/td&gt;
      &lt;td&gt;Wrong medium type&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EMFILE&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td&gt;Too many open files&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EMLINK&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;Too many links&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EMSGSIZE&lt;/td&gt;
      &lt;td&gt;90&lt;/td&gt;
      &lt;td&gt;Message too long&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EMULTIHOP&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;Multihop attempted&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENAMETOOLONG&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;File name too long&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;File.read("Ruby"*1000)&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENAVAIL&lt;/td&gt;
      &lt;td&gt;119&lt;/td&gt;
      &lt;td&gt;No XENIX semaphores available&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENETDOWN&lt;/td&gt;
      &lt;td&gt;100&lt;/td&gt;
      &lt;td&gt;Network is down&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENETRESET&lt;/td&gt;
      &lt;td&gt;102&lt;/td&gt;
      &lt;td&gt;Network dropped connection on reset&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENETUNREACH&lt;/td&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;Network is unreachable&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENFILE&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;Too many open files in system&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOANO&lt;/td&gt;
      &lt;td&gt;55&lt;/td&gt;
      &lt;td&gt;No anode&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOBUFS&lt;/td&gt;
      &lt;td&gt;105&lt;/td&gt;
      &lt;td&gt;No buffer space available&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOCSI&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;No CSI structure available&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENODATA&lt;/td&gt;
      &lt;td&gt;61&lt;/td&gt;
      &lt;td&gt;No data available&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENODEV&lt;/td&gt;
      &lt;td&gt;19&lt;/td&gt;
      &lt;td&gt;No such device&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOENT&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;No such file or directory&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;File.read("does not exist")&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOEXEC&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;Exec format error&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOKEY&lt;/td&gt;
      &lt;td&gt;126&lt;/td&gt;
      &lt;td&gt;Required key not available&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOLCK&lt;/td&gt;
      &lt;td&gt;37&lt;/td&gt;
      &lt;td&gt;No locks available&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOLINK&lt;/td&gt;
      &lt;td&gt;67&lt;/td&gt;
      &lt;td&gt;Link has been severed&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOMEDIUM&lt;/td&gt;
      &lt;td&gt;123&lt;/td&gt;
      &lt;td&gt;No medium found&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOMEM&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;Cannot allocate memory&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOMSG&lt;/td&gt;
      &lt;td&gt;42&lt;/td&gt;
      &lt;td&gt;No message of desired type&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENONET&lt;/td&gt;
      &lt;td&gt;64&lt;/td&gt;
      &lt;td&gt;Machine is not on the network&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOPKG&lt;/td&gt;
      &lt;td&gt;65&lt;/td&gt;
      &lt;td&gt;Package not installed&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOPROTOOPT&lt;/td&gt;
      &lt;td&gt;92&lt;/td&gt;
      &lt;td&gt;Protocol not available&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOSPC&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;No space left on device&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOSR&lt;/td&gt;
      &lt;td&gt;63&lt;/td&gt;
      &lt;td&gt;Out of streams resources&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOSTR&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;Device not a stream&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOSYS&lt;/td&gt;
      &lt;td&gt;38&lt;/td&gt;
      &lt;td&gt;Function not implemented&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOTBLK&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;Block device required&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOTCONN&lt;/td&gt;
      &lt;td&gt;107&lt;/td&gt;
      &lt;td&gt;Transport endpoint is not connected&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOTDIR&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;Not a directory&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOTEMPTY&lt;/td&gt;
      &lt;td&gt;39&lt;/td&gt;
      &lt;td&gt;Directory not empty&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOTNAM&lt;/td&gt;
      &lt;td&gt;118&lt;/td&gt;
      &lt;td&gt;Not a XENIX named type file&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOTRECOVERABLE&lt;/td&gt;
      &lt;td&gt;131&lt;/td&gt;
      &lt;td&gt;State not recoverable&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOTSOCK&lt;/td&gt;
      &lt;td&gt;88&lt;/td&gt;
      &lt;td&gt;Socket operation on non-socket&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOTSUP&lt;/td&gt;
      &lt;td&gt;95&lt;/td&gt;
      &lt;td&gt;Operation not supported&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOTTY&lt;/td&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td&gt;Inappropriate ioctl for device&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENOTUNIQ&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;Name not unique on network&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ENXIO&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;No such device or address&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EOPNOTSUPP&lt;/td&gt;
      &lt;td&gt;95&lt;/td&gt;
      &lt;td&gt;Operation not supported&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EOVERFLOW&lt;/td&gt;
      &lt;td&gt;75&lt;/td&gt;
      &lt;td&gt;Value too large for defined data type&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EOWNERDEAD&lt;/td&gt;
      &lt;td&gt;130&lt;/td&gt;
      &lt;td&gt;Owner died&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EPERM&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Operation not permitted&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EPFNOSUPPORT&lt;/td&gt;
      &lt;td&gt;96&lt;/td&gt;
      &lt;td&gt;Protocol family not supported&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EPIPE&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;Broken pipe&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EPROTO&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;Protocol error&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EPROTONOSUPPORT&lt;/td&gt;
      &lt;td&gt;93&lt;/td&gt;
      &lt;td&gt;Protocol not supported&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EPROTOTYPE&lt;/td&gt;
      &lt;td&gt;91&lt;/td&gt;
      &lt;td&gt;Protocol wrong type for socket&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ERANGE&lt;/td&gt;
      &lt;td&gt;34&lt;/td&gt;
      &lt;td&gt;Numerical result out of range&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EREMCHG&lt;/td&gt;
      &lt;td&gt;78&lt;/td&gt;
      &lt;td&gt;Remote address changed&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EREMOTE&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;Object is remote&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EREMOTEIO&lt;/td&gt;
      &lt;td&gt;121&lt;/td&gt;
      &lt;td&gt;Remote I/O error&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ERESTART&lt;/td&gt;
      &lt;td&gt;85&lt;/td&gt;
      &lt;td&gt;Interrupted system call should be restarted&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ERFKILL&lt;/td&gt;
      &lt;td&gt;132&lt;/td&gt;
      &lt;td&gt;Operation not possible due to RF-kill&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EROFS&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;Read-only file system&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ESHUTDOWN&lt;/td&gt;
      &lt;td&gt;108&lt;/td&gt;
      &lt;td&gt;Cannot send after transport endpoint shutdown&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ESOCKTNOSUPPORT&lt;/td&gt;
      &lt;td&gt;94&lt;/td&gt;
      &lt;td&gt;Socket type not supported&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ESPIPE&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;Illegal seek&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ESRCH&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;No such process&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;Process.kill(:KILL, 987654321)&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ESRMNT&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;Srmount error&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ESTALE&lt;/td&gt;
      &lt;td&gt;116&lt;/td&gt;
      &lt;td&gt;Stale file handle&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ESTRPIPE&lt;/td&gt;
      &lt;td&gt;86&lt;/td&gt;
      &lt;td&gt;Streams pipe error&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ETIME&lt;/td&gt;
      &lt;td&gt;62&lt;/td&gt;
      &lt;td&gt;Timer expired&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ETIMEDOUT&lt;/td&gt;
      &lt;td&gt;110&lt;/td&gt;
      &lt;td&gt;Connection timed out&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ETOOMANYREFS&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;Too many references: cannot splice&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::ETXTBSY&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;Text file busy&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EUCLEAN&lt;/td&gt;
      &lt;td&gt;117&lt;/td&gt;
      &lt;td&gt;Structure needs cleaning&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EUNATCH&lt;/td&gt;
      &lt;td&gt;49&lt;/td&gt;
      &lt;td&gt;Protocol driver not attached&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EUSERS&lt;/td&gt;
      &lt;td&gt;87&lt;/td&gt;
      &lt;td&gt;Too many users&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EWOULDBLOCK³&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;Resource temporarily unavailable&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EXDEV&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
      &lt;td&gt;Invalid cross-device link&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::EXFULL&lt;/td&gt;
      &lt;td&gt;54&lt;/td&gt;
      &lt;td&gt;Exchange full&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Errno::NOERROR&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;Success&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;¹ Feel free to &lt;a href="https://github.com/janlelis/idiosyncratic-ruby.com/issues/new"&gt;suggest more one-liners&lt;/a&gt;! I will also add some more over time.&lt;br /&gt;
² These include &lt;code&gt;IO::WaitReadable&lt;/code&gt;/&lt;code&gt;IO::WaitWritable&lt;/code&gt;. See &lt;a href="http://ruby-doc.org/core-2.3.0/IO.html#method-i-read_nonblock"&gt;IO#read_nonblock&lt;/a&gt;.&lt;br /&gt;
³ EAGAIN == EWOULDBLOCK &lt;a href="http://stackoverflow.com/questions/7003234/which-systems-define-eagain-and-ewouldblock-as-different-values"&gt;on most systems&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Exception.html"&gt;RDoc: Exception&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/ruby/ruby/blob/trunk/defs/known_errors.def"&gt;Source: defs/known_errors.def&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.ioplex.com/~miallen/errcmpp.html"&gt;Popular Errno Codes by Platform&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Roots of Rubyism</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/31-roots-of-rubyism.html"/>
    <id>http://idiosyncratic-ruby.com/31-roots-of-rubyism.html</id>
    <published>2015-05-31T02:00:00+02:00</published>
    <updated>2015-05-31T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;This is a summary of reasons why you should still use Ruby:&lt;/p&gt;

&lt;p&gt;It is a language with a &lt;strong&gt;terrific community&lt;/strong&gt; (welcoming and always questioning itself) and &lt;strong&gt;ecosystem&lt;/strong&gt; (a lot of problems &lt;a href="https://rubygems.org/"&gt;already&lt;/a&gt; &lt;a href="https://www.ruby-toolbox.com/"&gt;solved&lt;/a&gt;), which is &lt;strong&gt;beautiful&lt;/strong&gt; (focus on productivity), a little &lt;strong&gt;conservative&lt;/strong&gt; (in the sense that it is easy to work with), and &lt;strong&gt;general purpose&lt;/strong&gt; (a good choice in most cases).&lt;/p&gt;

&lt;p&gt;For a deeper understanding of Ruby's principles, reading &lt;a href="https://en.wikipedia.org/wiki/Yukihiro_Matsumoto"&gt;matz&lt;/a&gt; is highly recommended:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="the-philosophy-behind-ruby"&gt;The Philosophy Behind Ruby&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.safaribooksonline.com/library/view/beautiful-code/9780596510046/ch29.html"&gt;Essay: Treating Code As an Essay (excerpt)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.artima.com/intv/ruby.html"&gt;Interview: The Philosophy of Ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://confreaks.tv/videos/rubyconf2009-keynote-address"&gt;Talk: The 0.8 True Language&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Regex with Class</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/30-regex-with-class.html"/>
    <id>http://idiosyncratic-ruby.com/30-regex-with-class.html</id>
    <published>2015-05-30T02:00:00+02:00</published>
    <updated>2015-05-30T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;Ruby's regex engine defines a lot of shortcut character classes. Besides the common meta characters (&lt;code&gt;\w&lt;/code&gt;, etc.), there is also the &lt;a href="http://www.regular-expressions.info/posix.html"&gt;POSIX style expressions&lt;/a&gt; and the &lt;a href="https://en.wikipedia.org/wiki/Unicode_character_property"&gt;unicode property&lt;/a&gt; syntax. This is an overview of all character classes:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="meta-chars"&gt;Meta Chars&lt;/h2&gt;

&lt;table class="table-11-11-20-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Char&lt;/th&gt;
      &lt;th&gt;Negation&lt;/th&gt;
      &lt;th&gt;ASCII&lt;/th&gt;
      &lt;th&gt;Unicode&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;¹ Any&lt;/td&gt;
      &lt;td&gt;¹ Any&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;\X&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;Any&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries"&gt;Grapheme clusters&lt;/a&gt; (&lt;code&gt;\P{M}\p{M}*&lt;/code&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;\d&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\D&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[0-9]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;² ASCII plus &lt;strong&gt;Decimal_Number&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Nd/list.htm"&gt;Nd&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;\h&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\H&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[0-9a-fA-F]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Like ASCII&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;\w&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\W&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[0-9a-zA-Z_]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;² ASCII plus &lt;strong&gt;Letter&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/LC/list.htm"&gt;LC&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Ll/list.htm"&gt;Ll&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Lm/list.htm"&gt;Lm&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Lo/list.htm"&gt;Lo&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Lt/list.htm"&gt;Lt&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Lu/list.htm"&gt;Lu&lt;/a&gt;), &lt;strong&gt;Mark&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Mc/list.htm"&gt;Mc&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Me/list.htm"&gt;Me&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Mn/list.htm"&gt;Mn&lt;/a&gt;), &lt;strong&gt;Number&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Nd/list.htm"&gt;Nd&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Nl/list.htm"&gt;Nl&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/No/list.htm"&gt;No&lt;/a&gt;), &lt;strong&gt;Connector_Punctuation&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Pc/list.htm"&gt;Pc&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;\s&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\S&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[ \t\r\v\n\f]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;² ASCII plus &lt;strong&gt;Separator&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Zl/list.htm"&gt;Zl&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Zp/list.htm"&gt;Zp&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Zs/list.htm"&gt;Zs&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;\R&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[\n\v\f\r]&lt;/code&gt;,&lt;code&gt;\r\n&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;ASCII plus &lt;code&gt;…&lt;/code&gt;, &lt;strong&gt;Line_Separator&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Zl/list.htm"&gt;Zl&lt;/a&gt;), &lt;strong&gt;Paragraph_Separator&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Zp/list.htm"&gt;Zp&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;¹ Will only match linebreaks with &lt;code&gt;/m&lt;/code&gt; flag&lt;br /&gt;
² You'll need to &lt;a href="http://idiosyncratic-ruby.com/11-regular-extremism.html#turn-on-unicode-matching-for-w-d-s-and-b"&gt;manually turn on unicode matching&lt;/a&gt; for these to work&lt;/p&gt;

&lt;h3 id="unicode-separators"&gt;Unicode Separators&lt;/h3&gt;

&lt;table class="table-20-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Property&lt;/th&gt;
      &lt;th&gt;Characters&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Line_Separator&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Zl/list.htm"&gt;Zl&lt;/a&gt;)&lt;/td&gt;
      &lt;td&gt;&lt;code&gt; &lt;/code&gt; 2028&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Paragraph_Separator&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Zp/list.htm"&gt;Zp&lt;/a&gt;)&lt;/td&gt;
      &lt;td&gt;&lt;code&gt; &lt;/code&gt; 2029&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Space_Separator&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Zs/list.htm"&gt;Zs&lt;/a&gt;)&lt;/td&gt;
      &lt;td&gt;&lt;code&gt; &lt;/code&gt; 00A0, &lt;code&gt; &lt;/code&gt; 1680, &lt;code&gt; &lt;/code&gt; 2000, &lt;code&gt; &lt;/code&gt; 2001 , &lt;code&gt; &lt;/code&gt; 2002, &lt;code&gt; &lt;/code&gt; 2003, &lt;code&gt; &lt;/code&gt; 2004, &lt;code&gt; &lt;/code&gt; 2005, &lt;code&gt; &lt;/code&gt; 2006, &lt;code&gt; &lt;/code&gt; 2007, &lt;code&gt; &lt;/code&gt; 2008, &lt;code&gt; &lt;/code&gt; 2009, &lt;code&gt; &lt;/code&gt; 200A, &lt;code&gt; &lt;/code&gt; 202F, &lt;code&gt; &lt;/code&gt; 205F, &lt;code&gt;　&lt;/code&gt; 3000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id="posix-and--unicode-property-style"&gt;POSIX and  Unicode Property Style&lt;/h2&gt;

&lt;table class="table-13-13-13-13-20-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;POSIX&lt;/th&gt;
      &lt;th&gt;Negation&lt;/th&gt;
      &lt;th&gt;Property&lt;/th&gt;
      &lt;th&gt;Negation³&lt;/th&gt;
      &lt;th&gt;ASCII&lt;/th&gt;
      &lt;th&gt;Unicode&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;[:alnum:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[:^alnum:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{Alnum}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{^Alnum}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[0-9a-zA-Z]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Letter&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/LC/list.htm"&gt;LC&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Ll/list.htm"&gt;Ll&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Lm/list.htm"&gt;Lm&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Lo/list.htm"&gt;Lo&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Lt/list.htm"&gt;Lt&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Lu/list.htm"&gt;Lu&lt;/a&gt;), &lt;strong&gt;Mark&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Mc/list.htm"&gt;Mc&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Me/list.htm"&gt;Me&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Mn/list.htm"&gt;Mn&lt;/a&gt;), &lt;strong&gt;Decimal_Number&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Nd/list.htm"&gt;Nd&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;[:alpha:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[:^alpha:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{Alpha}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{^Alpha}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[a-zA-Z]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Letter&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/LC/list.htm"&gt;LC&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Ll/list.htm"&gt;Ll&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Lm/list.htm"&gt;Lm&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Lo/list.htm"&gt;Lo&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Lt/list.htm"&gt;Lt&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Lu/list.htm"&gt;Lu&lt;/a&gt;), &lt;strong&gt;Mark&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Mc/list.htm"&gt;Mc&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Me/list.htm"&gt;Me&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Mn/list.htm"&gt;Mn&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;[:ascii:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[:^ascii:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{ASCII}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{^ASCII}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[\x00-\x7F]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Like ASCII&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;[:blank:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[:^blank:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{Blank}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{^Blank}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[ \t]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\t&lt;/code&gt;, &lt;strong&gt;Space_Separator&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Zs/list.htm"&gt;Zs&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;[:cntrl&lt;/code&gt;]&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[:^cntrl:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{Cntrl}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{^Cntrl}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[\x00-\x1F]&lt;/code&gt;, &lt;code&gt;\x7F&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Other&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Cc/list.htm"&gt;Cc&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Cf/list.htm"&gt;Cf&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Cn/list.htm"&gt;Cn&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Co/list.htm"&gt;Co&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Cs/list.htm"&gt;Cs&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;[:digit:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[:^digit:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{Digit}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{^Digit}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[0-9]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;See &lt;code&gt;\d&lt;/code&gt; above&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;[:graph:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[:^graph:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{Graph}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{^Graph}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[\x21-\x7E]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;em&gt;NONE OF:&lt;/em&gt; &lt;code&gt;\s&lt;/code&gt;, &lt;strong&gt;Control&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Cc/list.htm"&gt;Cc&lt;/a&gt;), &lt;strong&gt;Unassigned&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Cn/list.htm"&gt;Cn&lt;/a&gt;), &lt;strong&gt;Surrogate&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Cs/list.htm"&gt;Cs&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;[:lower:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[:^lower:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{Lower}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{^Lower}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[a-z]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Lowercase_Letter&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Ll/list.htm"&gt;Ll&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;[:print:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[:^print:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{Print}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{^Print}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[\x20-\x7E]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Space_Separator&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Zs/list.htm"&gt;Zs&lt;/a&gt;), &lt;em&gt;NONE OF:&lt;/em&gt; &lt;code&gt;\s&lt;/code&gt;, &lt;strong&gt;Control&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Cc/list.htm"&gt;Cc&lt;/a&gt;), &lt;strong&gt;Unassigned&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Cn/list.htm"&gt;Cn&lt;/a&gt;), &lt;strong&gt;Surrogate&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Cs/list.htm"&gt;Cs&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;[:punct:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[:^punct:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{Punct}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{^Punct}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[!-/:-@\[-`{-~]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Punctuation&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Pc/list.htm"&gt;Pc&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Pd/list.htm"&gt;Pd&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Pe/list.htm"&gt;Pe&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Pf/list.htm"&gt;Pf&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Pi/list.htm"&gt;Pi&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Po/list.htm"&gt;Po&lt;/a&gt; / &lt;a href="http://www.fileformat.info/info/unicode/category/Ps/list.htm"&gt;Ps&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;[:space:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[:^space:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{Space}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{^Space}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[ \t\r\v\n\f]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;See &lt;code&gt;\s&lt;/code&gt; above&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;[:upper:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[:^upper:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{Upper}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{^Upper}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[A-Z]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Uppercase_Letter&lt;/strong&gt; (&lt;a href="http://www.fileformat.info/info/unicode/category/Lu/list.htm"&gt;Lu&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;[:xdigit:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[:^xdigit:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{XDigit}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{^XDigit}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[0-9a-fA-F]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Like ASCII&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;[:word:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[:^word:]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{Word}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;\p{^Word}&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;[0-9a-zA-Z_]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;See &lt;code&gt;\w&lt;/code&gt; above&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;³ An alternative way of negating unicode properties is &lt;code&gt;\P{Property}&lt;/code&gt;&lt;/p&gt;

&lt;h3 id="more-properties"&gt;More Properties&lt;/h3&gt;

&lt;p&gt;The above groups are only the tip of the iceberg. Using the &lt;code&gt;\p{}&lt;/code&gt; syntax, you can match for a lot more unicode properties, see the links below for the complete list!&lt;/p&gt;

&lt;h2 id="further-reading"&gt;Further Reading&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/k-takata/Onigmo/blob/master/doc/RE"&gt;Onigmo Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://unicode.org/reports/tr23/"&gt;Unicode Character Property Model&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Regexp.html#class-Regexp-label-Character+Properties"&gt;RDoc: Regexp (Character Properties)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt"&gt;Unicode Data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.unicode.org/Public/UCD/latest/ucd/PropList.txt"&gt;Unicode Property List&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.unicode.org/Public/UCD/latest/ucd/PropertyAliases.txt"&gt;Unicode Property Aliases&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.unicode.org/Public/UCD/latest/ucd/PropertyValueAliases.txt"&gt;Unicode Property Values Aliases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Limitations of Language</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/29-limitations-of-language.html"/>
    <id>http://idiosyncratic-ruby.com/29-limitations-of-language.html</id>
    <published>2015-05-29T02:00:00+02:00</published>
    <updated>2015-05-29T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;If you take a closer look, you'll notice that Ruby's grammar has quite a few edge-case where its syntax is inconsistent or ambigious:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="binary-minus-vs-minus-taken-as-unary-method-argument"&gt;Binary Minus vs Minus taken as Unary Method Argument&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; [1,3,4,5].size - 1
# =&amp;gt; 3

&amp;gt;&amp;gt; [1,3,4,5].size -1
# wrong number of arguments(1 for 0)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="no-simple-rule-if-a-symbol-can-be-displayed-without-the-explicit--syntax"&gt;No Simple Rule, if a Symbol can be Displayed Without the Explicit &lt;code&gt;:""&lt;/code&gt; Syntax&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; {:&amp;lt; =&amp;gt; 0}
# =&amp;gt; {:&amp;lt;=&amp;gt;0}

&amp;gt;&amp;gt; {:&amp;lt;=&amp;gt;0}
# syntax error, unexpected tINTEGER,
# expecting tASSOC
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="different-rules-for-modules-and-classes"&gt;Different Rules for Modules and Classes&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; module Eurucamp end
# =&amp;gt; nil

&amp;gt;&amp;gt; class Eurucamp end
# syntax error, unexpected $end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Since Ruby 2.3 this is no longer invalid syntax:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; class Eurucamp end
# =&amp;gt; nil
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="ambiguous-if-to-parse--unary-or-as-part-of-binary-match-operator"&gt;Ambiguous if to Parse &lt;code&gt;~&lt;/code&gt; Unary or as Part of Binary Match Operator&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; $_="Eurucamp X"
&amp;gt;&amp;gt; ~/X/ # =&amp;gt; 9

&amp;gt;&amp;gt; a=~/X/ # undefined local variable or method `a'
&amp;gt;&amp;gt; a= ~/X/ # =&amp;gt; 9
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="global-variables-can-break-string-and-regex-syntax"&gt;Global Variables can "Break" String and Regex Syntax&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; a = "Eurucamp #\n"
&amp;gt;&amp;gt; a.gsub /#$/, ''
# =&amp;gt; ?

&amp;gt;&amp;gt; a = "Eurucamp #\n"
&amp;gt;&amp;gt; a.gsub /#$/, ''
# unterminated regexp meets end of file

&amp;gt;&amp;gt; a = "Eurucamp #\n"
&amp;gt;&amp;gt; a.gsub /#$//, ''
# =&amp;gt; "Eurucamp #"
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="unary-or-binary-plus-part-2"&gt;Unary or Binary Plus, Part 2&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; p = 21
&amp;gt;&amp;gt; p 21
# =&amp;gt; 21

&amp;gt;&amp;gt; p = 21
&amp;gt;&amp;gt; p +21
# =&amp;gt; 42
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="string-creation-vs-format-method"&gt;String Creation vs Format Method&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; puts%[1]
# undefined method `%' for nil:NilClass

&amp;gt;&amp;gt; puts %[1]
# =&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="hash-vs-block"&gt;Hash vs Block&lt;/h2&gt;

&lt;p&gt;Ruby uses curly braces for both, blocks as well as hashes. Sometimes, this leads to confusing cases:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; def identity(a) a end

&amp;gt;&amp;gt; identity(1)
#=&amp;gt; 1
&amp;gt;&amp;gt; identity 1
#=&amp;gt; 1
&amp;gt;&amp;gt; identity({})
#=&amp;gt; {}
&amp;gt;&amp;gt; identity {}
#=&amp;gt; wrong number of arguments (0 for 1) (ArgumentError)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="regex-vs-division"&gt;Regex vs Division&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; puts /4/i
# =&amp;gt; (?i-mx:4)

&amp;gt;&amp;gt; puts, i = 42, 2
&amp;gt;&amp;gt; puts /4/i
# =&amp;gt; 5
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="further-reading"&gt;Further Reading&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/ruby/ruby/blob/trunk/parse.y"&gt;Ruby's grammar definition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Operating Nothing</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/28-operating-nothing.html"/>
    <id>http://idiosyncratic-ruby.com/28-operating-nothing.html</id>
    <published>2015-05-28T02:00:00+02:00</published>
    <updated>2015-05-28T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;There is an operator in Ruby, that does nothing: The &lt;a href="https://github.com/ruby/ruby/blob/v2_2_2/numeric.c#L367-L371"&gt;unary plus operator&lt;/a&gt;. It is part of the language for &lt;a href="http://stackoverflow.com/questions/5680587/whats-the-point-of-unary-plus-operator-in-ruby"&gt;keeping symmetry with the unary minus operator&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;This is awesome, an operator for free! How can we utilize it?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; In Ruby 2.3, the plus operator got its first purpose: &lt;a href="https://bugs.ruby-lang.org/issues/11782"&gt;Create an unfrozen copy of a string&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;string = "frozen string".freeze
string.object_id # =&amp;gt; 19066860
string.frozen? # =&amp;gt; true

copy = +string
copy.object_id # =&amp;gt; 19012140
copy.frozen? # =&amp;gt; false
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="logging"&gt;1 | Logging&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;require 'logger'

# Definition
$logger = Logger.new(STDOUT)

class Object
  def +@
    $logger.warn(self.inspect)
  end
end

# Usage
+/Ruby/
# =&amp;gt; W, [2015-05-28T10:52:51.115334 #16630]  WARN -- : /Ruby/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We could use it for logging. But this is more of the category &lt;em&gt;nice, but feels like there is no real reason for the syntactic sugar&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id="null-objects"&gt;2 | Null Objects&lt;/h2&gt;

&lt;p&gt;A more useful case would be to simplify often done object conversions, for example, converting &lt;a href="http://devblog.avdi.org/2011/05/30/null-objects-and-falsiness/"&gt;null objects&lt;/a&gt; to actual &lt;code&gt;nil&lt;/code&gt; for comparsions:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Definition
class Object
  def +@
    null? ? nil : self
  end

  def null?
    false
  end
end

class NilClass
  def null?
    true
  end
end

# Usage
class CustomNullObject
  def null?
    true
  end
end

null = CustomNullObject.new

+nil #=&amp;gt; nil
+null #=&amp;gt; nil
+"Ruby" #=&amp;gt; "Ruby"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See &lt;a href="https://github.com/janlelis/null_question"&gt;null_question&lt;/a&gt; and &lt;a href="https://github.com/janlelis/null_plus"&gt;null_plus&lt;/a&gt; for a gemified version of the code above.&lt;/p&gt;

&lt;h2 id="symbol-conversion"&gt;3 | Symbol Conversion&lt;/h2&gt;

&lt;p&gt;Another conversion related use of &lt;code&gt;+@&lt;/code&gt; is the following snippet, which also defines &lt;code&gt;-@&lt;/code&gt;. It will convert &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;Symbol&lt;/code&gt; into each other's representation. It can be used as some kind of alternative to libraries that provide &lt;a href="http://api.rubyonrails.org/classes/ActiveSupport/HashWithIndifferentAccess.html"&gt;HashWithIndifferentAccess&lt;/a&gt;-kind functionality, by always explicitely converting the key:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Definition
class String
  def +@
    self
  end

  def -@
    to_sym
  end
end

class Symbol
  def +@
    to_s
  end

  def -@
    self
  end
end

# Usage
hash   = { key: "value" }
symbol = :key
string = "key"

hash[-symbol] # =&amp;gt; "value"
hash[-string] # =&amp;gt; "value"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By the way, this would not be needed, if we &lt;a href="https://speakerdeck.com/sferik/symbols"&gt;make symbols frozen strings&lt;/a&gt;!&lt;/p&gt;

&lt;h2 id="test-rocket"&gt;4 | Test Rocket!&lt;/h2&gt;

&lt;p&gt;Thinking further: How to get most of out operators? How about a testing framework:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require 'testrocket'

# BASIC USAGE
# +-&amp;gt; { block that should succeed }
# --&amp;gt; { block that should fail }

+-&amp;gt; { Die.new(2) }
--&amp;gt; { raise }
+-&amp;gt; { 2 + 2 == 4 }

# These two tests will deliberately fail
+-&amp;gt; { raise }
--&amp;gt; { true }

# A 'pending' test
~-&amp;gt; { "this is a pending test" }

# A description
!-&amp;gt; { "use this for descriptive output and to separate your test parts" }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See &lt;a href="https://github.com/peterc/testrocket"&gt;peterc/testrocket&lt;/a&gt; for further info!&lt;/p&gt;

&lt;h2 id="superators"&gt;5 | Superators!&lt;/h2&gt;

&lt;p&gt;There was a library that carried operator magic to the extremes: It let you define &lt;em&gt;superators&lt;/em&gt;, which are new binary operators that use a chain of unary operators as their name! This is what it looked like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Definition
class Array
  superator "&amp;lt;---" do |operand|
    if operand.kind_of? Array
      self + operand.map { |x| x.inspect }
    else
      operand.inspect
    end
  end
end

# Usage
[1,2,3] &amp;lt;--- [4,5,6]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The library is not maintained, anymore, but it is the craziest leveraging of Ruby's capabalities I've ever seen! The repo is at &lt;a href="https://github.com/jicksta/superators"&gt;jicksta/superators&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Golfing Basics</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/27-golfing-basics.html"/>
    <id>http://idiosyncratic-ruby.com/27-golfing-basics.html</id>
    <published>2015-05-27T02:00:00+02:00</published>
    <updated>2015-05-27T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;&lt;strong&gt;Code Golf&lt;/strong&gt; is the art of writing the shortest program possible. The less bytes the better. And the competition is just ridiculously strong! Head over to &lt;a href="http://golf.shinh.org/"&gt;Anarchy Golf&lt;/a&gt; if you want to see more!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;A good beginner's problem is printing out &lt;a href="http://golf.shinh.org/p.rb?pascal+triangle"&gt;Pascal's Triangle&lt;/a&gt;: Spend a few days to get to &lt;strong&gt;45&lt;/strong&gt; bytes. Spend a few &lt;em&gt;months&lt;/em&gt; to get to &lt;strong&gt;43&lt;/strong&gt; bytes!&lt;/p&gt;

&lt;h2 id="ruby-tricks-youll-learn-by-playing-code-golf"&gt;10 Ruby Tricks You'll Learn by Playing Code Golf&lt;/h2&gt;

&lt;p&gt;While code golfing does not necessarily make you a better programmer, you can learn a lot about the programming language you are using. Here are some things that were new to me:&lt;/p&gt;

&lt;h2 id="dirty-interpolation"&gt;Dirty Interpolation&lt;/h2&gt;

&lt;p&gt;String interpolation (&lt;code&gt;#{}&lt;/code&gt;) is sometimes possible without using curlies:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"You can directly interpolate #@instance variables, " \
"#@@class variables, and #$global variables!"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I must admit, this can confuse newcomers, but it looks fantastic!&lt;/p&gt;

&lt;h2 id="constant-assignment-in-modifiers"&gt;Constant Assignment in Modifiers&lt;/h2&gt;

&lt;p&gt;It is perfectly legit to use assignments in conditions:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if a = 42
  p a
end
# =&amp;gt; 42
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However, this won't work with the shorter &lt;em&gt;modifier&lt;/em&gt; syntax:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p b if b = 42
# NameError: undefined local variable or method `b'...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Unless… you use constants:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p C if C = 42
# =&amp;gt; 42
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="shebang-require"&gt;Shebang &lt;code&gt;require&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;What could possibly be shorter than:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require'json'; require 'yaml'
p JSON,YAML
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It's inlined command-line options:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!ruby -rjson -ryaml
p JSON,YAML
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="iterating-input-lines"&gt;Iterating Input Lines&lt;/h2&gt;

&lt;p&gt;Finding the shortest way to read user input is a common problem for golfers and solutions vary, depending on how to process the input. My favorite one is to iterate over the input's lines:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$&amp;lt;.each{|e|p e}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="appending-output"&gt;Appending Output&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;puts&lt;/code&gt; and &lt;code&gt;p&lt;/code&gt; are already good candidates to output content. However, sometimes, using &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; on &lt;code&gt;STDOUT&lt;/code&gt; is a tiny bit (or byte) more efficent:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;?a.upto(?z){|o|$&amp;gt;&amp;lt;&amp;lt;o}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="regex-always-wins"&gt;Regex Always Wins&lt;/h2&gt;

&lt;p&gt;This is one of the golden rules of golfing. Especially, combining the &lt;a href="http://ruby-doc.org/core-2.3.0/String.html#method-i-gsub"&gt;block syntax of &lt;code&gt;gsub&lt;/code&gt;&lt;/a&gt; with the &lt;a href="http://idiosyncratic-ruby.com/9-globalization.html"&gt;perlish regex variables&lt;/a&gt; can be very expressive!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"some_string".gsub(/(^|_)(\w)/){$2.upcase}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="stringtr"&gt;&lt;code&gt;String#tr&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;However, it's not true - regexes do not always win. If you need to perform some simple character substitutions, &lt;a href="https://en.wikipedia.org/wiki/Tr_%28Unix%29"&gt;tr&lt;/a&gt; is an extremly short (and also clean) way to do so:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# ROT13 Cipher
"Vqvbflapengvp Ehol".tr'a-zA-Z','n-za-mN-ZA-M'
# =&amp;gt; "Idiosyncratic Ruby"
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="one-more-or-less"&gt;One More or Less&lt;/h2&gt;

&lt;p&gt;In some instances, you cannot use &lt;code&gt;i+1&lt;/code&gt; or &lt;code&gt;i-1&lt;/code&gt; without wrapping them in parenthesis. No problem, &lt;a href="http://ruby-doc.org/core-2.3.0/Fixnum.html#method-i-7E"&gt;unary complement&lt;/a&gt; to the rescue:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-~42 # =&amp;gt; 43
~-42 # =&amp;gt; 41
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="flexible-precedence"&gt;Flexible Precedence&lt;/h2&gt;

&lt;p&gt;This is one of my favorites: Explicitely call (&lt;code&gt;.&lt;/code&gt;) operators for alternative precedence semantics:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;3*(2+1) #=&amp;gt; 9
3.*2+1 #=&amp;gt; 9
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="quick-quit"&gt;Quick Quit&lt;/h2&gt;

&lt;p&gt;What's a shorter way to quit a Ruby script than the 4 bytes long &lt;code&gt;exit&lt;/code&gt; method?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1/0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Although this is longer than &lt;code&gt;z&lt;/code&gt; (calling an undefined method), it's often easier to trigger programmatically.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>File Encoding Magic</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/26-file-encoding-magic.html"/>
    <id>http://idiosyncratic-ruby.com/26-file-encoding-magic.html</id>
    <published>2015-05-26T02:00:00+02:00</published>
    <updated>2015-05-26T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;Ruby has &lt;a href="http://graysoftinc.com/character-encodings/ruby-19s-three-default-encodings"&gt;three default encodings&lt;/a&gt;. One of them is the default &lt;a href="http://ruby-doc.org/core-2.3.0/Encoding.html#class-Encoding-label-Script+encoding"&gt;source encoding&lt;/a&gt;, which can be set using a &lt;strong&gt;magic comment&lt;/strong&gt; in the file's first line, or in the second line if the first line is taken by a &lt;a href="https://en.wikipedia.org/wiki/Shebang_%28Unix%29"&gt;shebang&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Default source encoding (UTF-8):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p "".encoding #=&amp;gt; #&amp;lt;Encoding:UTF-8&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With encoding comment (&lt;code&gt;file_with_magic_comment.rb&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# coding: cp1252
p "".encoding #=&amp;gt; #&amp;lt;Encoding:Windows-1252&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="respecting-the-encoding-comment-when-reading-a-file"&gt;Respecting the Encoding Comment when Reading a File&lt;/h2&gt;

&lt;p&gt;You might come across a situation, where you want to read in a source file using Ruby's &lt;a href="http://ruby-doc.org/core-2.3.0/File.html"&gt;File&lt;/a&gt; class, but also want to set the proper encoding from the magic comment. Fortunately, Ruby's standard library supports this. Unfortunately, it is not a stand-alone module, but a part of IRB:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; require 'irb/magic-file'
# =&amp;gt; false
&amp;gt;&amp;gt; IRB::MagicFile
# =&amp;gt; #&amp;lt;Object:0x00000001a6bb10&amp;gt;
&amp;gt;&amp;gt; File.open('file_with_magic_comment.rb').read.encoding
# =&amp;gt; #&amp;lt;Encoding:UTF-8&amp;gt;
&amp;gt;&amp;gt; IRB::MagicFile.open('file_with_magic_comment.rb').read.encoding
# =&amp;gt; #&amp;lt;Encoding:Windows-1252&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/ruby/ruby/blob/trunk/lib/irb/magic-file.rb"&gt;Source: irb/magic-file&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/ruby/ruby/blob/ruby_2_2/parse.y#L6980"&gt;Grammar: parser_magic_comment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Meta Methodology</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/25-meta-methodology.html"/>
    <id>http://idiosyncratic-ruby.com/25-meta-methodology.html</id>
    <published>2015-05-25T02:00:00+02:00</published>
    <updated>2015-05-25T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;Ruby &lt;strong&gt;clutters&lt;/strong&gt; its objects a lot with methods for metaprogramming other methods:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Class.instance_methods.grep /method/
=&amp;gt; [:instance_methods, :public_instance_methods,
:protected_instance_methods, :private_instance_methods,
:method_defined?, :public_method_defined?,
:private_method_defined?, :protected_method_defined?,
:public_class_method, :private_class_method, :instance_method,
:public_instance_method, :methods, :singleton_methods,
:protected_methods, :private_methods, :public_methods,
:method, :public_method, :singleton_method,
:define_singleton_method]

Class.private_instance_methods.grep /method/
=&amp;gt; [:method_added, :method_removed, :method_undefined,
:remove_method, :undef_method, :alias_method, :define_method,
:instance_methods_for, :__method__, :singleton_method_added,
:singleton_method_removed, :singleton_method_undefined,
:method_missing]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It's so many methods, because working with methods is a multi-dimensional problem:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Where are the modules, in the current instance or if a class/module, in its instances?&lt;/li&gt;
  &lt;li&gt;Or in its &lt;a href="http://www.devalot.com/articles/2008/09/ruby-singleton"&gt;singleton class&lt;/a&gt;?&lt;/li&gt;
  &lt;li&gt;What about the method visibility?&lt;/li&gt;
  &lt;li&gt;Should the inheritance chain be considered?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's put everything in some order:&lt;/p&gt;

&lt;h2 id="method-lists"&gt;Method Lists&lt;/h2&gt;

&lt;p&gt;Methods returning method lists always take a boolean argument, which will prevent inheritance if set to &lt;code&gt;false&lt;/code&gt;&lt;/p&gt;

&lt;table class="table-38-15-20-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Method&lt;/th&gt;
      &lt;th&gt;From&lt;/th&gt;
      &lt;th&gt;Target&lt;/th&gt;
      &lt;th&gt;Visibility&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Object.html#method-i-singleton_methods"&gt;Object#singleton_methods&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;singleton&lt;/td&gt;
      &lt;td&gt;public + protected&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Object.html#method-i-methods"&gt;Object#methods&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;instance + singleton&lt;/td&gt;
      &lt;td&gt;public + protected&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Object.html#method-i-public_methods"&gt;Object#public_methods&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;instance + singleton&lt;/td&gt;
      &lt;td&gt;public&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Object.html#method-i-protected_methods"&gt;Object#protected_methods&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;instance + singleton&lt;/td&gt;
      &lt;td&gt;protected&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Object.html#method-i-private_methods"&gt;Object#private_methods&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;instance + singleton&lt;/td&gt;
      &lt;td&gt;private&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-instance_methods"&gt;Module#instance_methods&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;public + protected&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-public_instance_methods"&gt;Module#public_instance_methods&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;public&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-proected_instance_methods"&gt;Module#proected_instance_methods&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;proected&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-private_instance_methods"&gt;Module#private_instance_methods&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;private&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;There is no API for getting a list of private singleton methods&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="method-defined-checks"&gt;Method Defined? Checks&lt;/h2&gt;

&lt;p&gt;Instead of listing all methods and checking if the resulting array contains a specific method, you can also directly check if a method is defined:&lt;/p&gt;

&lt;table class="table-38-15-20-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Method&lt;/th&gt;
      &lt;th&gt;From&lt;/th&gt;
      &lt;th&gt;Target&lt;/th&gt;
      &lt;th&gt;Visibilitiy&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-method_defined-3F"&gt;Module#method_defined?&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;all&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-public_method_defined-3F"&gt;Module#public_method_defined?&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;public&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-protected_method_defined-3F"&gt;Module#protected_method_defined?&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;protected&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-private_method_defined-3F"&gt;Module#private_method_defined?&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;private&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;This is also the best way to get the visibility of a method&lt;/li&gt;
  &lt;li&gt;There is no direct way to check for singleton methods&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="method-getters"&gt;Method Getters&lt;/h2&gt;

&lt;p&gt;These methods will return method objects for further metaprogramming action:&lt;/p&gt;

&lt;table class="table-34-15-20-14-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Method&lt;/th&gt;
      &lt;th&gt;From&lt;/th&gt;
      &lt;th&gt;Target&lt;/th&gt;
      &lt;th&gt;Visibility&lt;/th&gt;
      &lt;th&gt;Returns&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Object.html#method-i-singleton_method"&gt;Object#singleton_method&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;singleton&lt;/td&gt;
      &lt;td&gt;all&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Method.html"&gt;Method&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Object.html#method-i-method"&gt;Object#method&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;instance + singleton&lt;/td&gt;
      &lt;td&gt;all&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Method.html"&gt;Method&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Object.html#method-i-public_method"&gt;Object#public_method&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;instance + singleton&lt;/td&gt;
      &lt;td&gt;public&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Method.html"&gt;Method&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-instance_method"&gt;Module#instance_method&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;all&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/UnboundMethod.html"&gt;UnboundMethod&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-public_instance_method"&gt;Module#public_instance_method&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;public&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/UnboundMethod.html"&gt;UnboundMethod&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;There are no methods to explicitely get private methods&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="method-manipulation"&gt;Method Manipulation&lt;/h2&gt;

&lt;p&gt;These methods will actually modify your objects:&lt;/p&gt;

&lt;table class="table-38-15-20-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Method&lt;/th&gt;
      &lt;th&gt;From&lt;/th&gt;
      &lt;th&gt;Target&lt;/th&gt;
      &lt;th&gt;Visibility&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Object.html#method-i-define_singleton_method"&gt;Object#define_singleton_method&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;singleton&lt;/td&gt;
      &lt;td&gt;public&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-define_method"&gt;Module#define_method&lt;/a&gt; (private)&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;public (see notes)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-remove_method"&gt;Module#remove_method&lt;/a&gt; (private)&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-undef_method"&gt;Module#undef_method&lt;/a&gt; (private)&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-alias_method"&gt;Module#alias_method&lt;/a&gt; (private)&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;same&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;No direct way to define a non-public method, but &lt;code&gt;define_method&lt;/code&gt; respects visibility modifiers&lt;/li&gt;
  &lt;li&gt;No direct way to define a non-public singleton method&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;remove_method&lt;/code&gt; only deletes the method from the current module, while &lt;code&gt;undef_method&lt;/code&gt; also deletes it from all ancestors&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="method-hooks"&gt;Method Hooks&lt;/h2&gt;

&lt;p&gt;Hook methods can be defined and will be called by the Ruby interpreter when the respective event happens:&lt;/p&gt;

&lt;table class="table-38-15-20-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Method&lt;/th&gt;
      &lt;th&gt;From&lt;/th&gt;
      &lt;th&gt;Target&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/BasicObject.html#method-i-singleton_method_added"&gt;BasicObject#singleton_method_added&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;singleton&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/BasicObject.html#method-i-singleton_method_undefined"&gt;BasicObject#singleton_method_undefined&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;singleton&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/BasicObject.html#method-i-singleton_method_removed"&gt;BasicObject#singleton_method_removed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
      &lt;td&gt;singleton&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-method_added"&gt;Module#method_added&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-method_undefined"&gt;Module#method_undefined&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-method_removed"&gt;Module#method_removed&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/BasicObject.html#method-i-method_missing"&gt;BasicObject#method_missing&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;instance&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;As long as you haven't defined a hook, Ruby considers it as an empty private method&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="method-visibility-modifiers"&gt;Method Visibility Modifiers&lt;/h2&gt;

&lt;p&gt;Besides &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, and &lt;code&gt;private&lt;/code&gt;, there are two additional methods with the sole purpose of changing a method's visibility:&lt;/p&gt;

&lt;table class="table-34-12-12-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Method&lt;/th&gt;
      &lt;th&gt;From&lt;/th&gt;
      &lt;th&gt;Target&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-public_class_method"&gt;Module#public_class_method&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;singleton&lt;/td&gt;
      &lt;td&gt;Makes a class's singleton method public&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Module.html#method-i-private_class_method"&gt;Module#private_class_method&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td&gt;singleton&lt;/td&gt;
      &lt;td&gt;Makes a class's singleton method private&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id="current-method-name"&gt;Current Method Name&lt;/h2&gt;

&lt;p&gt;There are two underscore-wrapped methods that return the current method's name:&lt;/p&gt;

&lt;table class="table-35-20-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Method&lt;/th&gt;
      &lt;th&gt;From&lt;/th&gt;
      &lt;th&gt;Returns&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Kernel.html#method-i-__method__"&gt;Kernel#__method__&lt;/a&gt; (private)&lt;/td&gt;
      &lt;td&gt;anywhere&lt;/td&gt;
      &lt;td&gt;Original method name&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Kernel.html#method-i-__callee__"&gt;Kernel#__callee__&lt;/a&gt; (private)&lt;/td&gt;
      &lt;td&gt;anywhere&lt;/td&gt;
      &lt;td&gt;Aliased method name&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;Also see &lt;a href="http://ruby-doc.org/core-2.3.0/Kernel.html#method-i-caller"&gt;Kernel#caller&lt;/a&gt; and &lt;a href="http://ruby-doc.org/core-2.3.0/Kernel.html#method-i-caller_locations"&gt;Kernel#caller_locations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="a-better-api-for-metaprogramming-methods"&gt;A Better API for Metaprogramming Methods?&lt;/h2&gt;

&lt;p&gt;Metaprogramming in Ruby has evolved over time, but it might be a good idea to clean it up a little - A good example of how to clean up one of Ruby's other metaprogramming APIs is the &lt;a href="https://github.com/rubyworks/instance/"&gt;instance gem&lt;/a&gt;. It gives you a neat API for working with an object's state, like setting instance variables. Someone feels like building a similar gem for Ruby's Method APIs?&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Goto Fail</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/24-goto-fail.html"/>
    <id>http://idiosyncratic-ruby.com/24-goto-fail.html</id>
    <published>2015-05-24T02:00:00+02:00</published>
    <updated>2015-05-24T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;If you change one line in Ruby's source, it will support &lt;strong&gt;goto&lt;/strong&gt; statements!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;You can install a patched version via &lt;strong&gt;RVM&lt;/strong&gt;'s patch feature:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rvm install 2.2.2 -n goto --patch http://git.io/vfxF2
$ rvm use 2.2.2-goto
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What to do to play around with this new feature? Let's reimplement &lt;a href="https://nakedsecurity.sophos.com/2014/02/24/anatomy-of-a-goto-fail-apples-ssl-bug-explained-plus-an-unofficial-patch/"&gt;this famous bug&lt;/a&gt; in Ruby:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# prepare some dummy data
hashCtx = hashOut = clientRandom = serverRandom = signedRandom = Object.new
SSLHashSHA1 = Class.new do def update(*) end; alias final update end.new

# how the goto fail bug would look like if it was implemented in ruby
__goto__(:fail) if ((err = SSLHashSHA1.update(hashCtx, clientRandom)) != 0);
__goto__(:fail) if ((err = SSLHashSHA1.update(hashCtx, serverRandom)) != 0);
__goto__(:fail) if ((err = SSLHashSHA1.update(hashCtx, signedParams)) != 0);
__goto__(:fail);
__goto__(:fail) if ((err = SSLHashSHA1.final(hashCtx, hashOut)) != 0);

puts "Verified" # never reached
# ...

__label__(:fail);
puts "Failed";
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Executing this with gotoruby:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rvm use 2.2.2-goto
$ ruby gotofail.rb
Failed
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="further-reading"&gt;Further Reading&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://patshaughnessy.net/2012/2/29/the-joke-is-on-us-how-ruby-1-9-supports-the-goto-statement"&gt;Article: The Joke Is On Us: How Ruby 1.9 Supports the Goto Statement&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Ruby's other goto: &lt;a href="http://gnuu.org/2009/03/21/demystifying-continuations-in-ruby/"&gt;Article: Demystifying Continuations in Ruby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Ruby Lookalikes</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/23-ruby-lookalikes.html"/>
    <id>http://idiosyncratic-ruby.com/23-ruby-lookalikes.html</id>
    <published>2015-05-23T02:00:00+02:00</published>
    <updated>2015-05-23T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;Tired of good old, but slow Ruby? Try one of Ruby's successors:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Compiles To&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://crystal-lang.org"&gt;Crystal&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Machine&lt;/td&gt;
      &lt;td&gt;Fast Ruby&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://www.mirah.org"&gt;Mirah&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;JVM&lt;/td&gt;
      &lt;td&gt;Fast Ruby in Java&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://opalrb.org"&gt;Opal&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;JS&lt;/td&gt;
      &lt;td&gt;Ruby for JavaScript&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://coffeescript.org/"&gt;CoffeeScript&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;JS&lt;/td&gt;
      &lt;td&gt;JavaScript for Rubyists&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://elixir-lang.org/"&gt;Elixir&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;BEAM&lt;/td&gt;
      &lt;td&gt;Ruby for Erlang&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://www.scala-lang.org/"&gt;Scala&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;JVM&lt;/td&gt;
      &lt;td&gt;Multi-Paradigm Ruby&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;All of them are better than Ruby, in some way!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Literate Ruby</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/22-literate-ruby.html"/>
    <id>http://idiosyncratic-ruby.com/22-literate-ruby.html</id>
    <published>2015-05-22T02:00:00+02:00</published>
    <updated>2015-05-22T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;Ruby has a built-in feature that is much like &lt;a href="http://coffeescript.org/#literate"&gt;Literate CoffeeScript&lt;/a&gt;. In contrast to it, this Ruby option will not ignore literature, but garbage:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="xdirectory"&gt;&lt;code&gt;-x[directory]&lt;/code&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;Tells Ruby that the script is embedded in a message.
Leading garbage will be discarded until the  first line
that starts with “#!” and contains the string, “ruby”.
Any meaningful switches on that line will be applied.
The end of the script must be specified with either EOF,
^D (control-D), ^Z (control-Z), or the reserved word
__END__.  If the directory name is specified, Ruby will
switch to that directory before executing script.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Awesome!&lt;/p&gt;

&lt;pre&gt;
#! Let's see this in action, using this blog post about ruby
puts "Idiosyncratic Ruby"
__END__
&lt;/pre&gt;
&lt;p&gt;Paste the whole content of this article into a file and execute it with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -x FILENAME
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="further-reading"&gt;Further Reading&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;man ruby&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Uniform Resource Matching</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/21-uniform-resource-matching.html"/>
    <id>http://idiosyncratic-ruby.com/21-uniform-resource-matching.html</id>
    <published>2015-05-21T02:00:00+02:00</published>
    <updated>2015-05-21T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;Ruby's &lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/uri/rdoc/URI.html"&gt;URI standard library&lt;/a&gt; contains a very sophisticated regex for matching URLs:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"At http://idiosyncratic-ruby.com you can learn about the " \
"obscure parts of Ruby"[URI.regexp]
# =&amp;gt; "http://idiosyncratic-ruby.com"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This regex is built in &lt;a href="https://github.com/ruby/ruby/blob/trunk/lib/uri/rfc2396_parser.rb"&gt;uri/rfc2396_parser.rb&lt;/a&gt; and looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -v
ruby 2.2.2p95 (2015-04-13 revision 50295) [x86_64-linux]
$ ruby -r uri -e 'p URI.regexp'
/
        ([a-zA-Z][\-+.a-zA-Z\d]*):                           (?# 1: scheme)
        (?:
           ((?:[\-_.!~*'()a-zA-Z\d;?:@&amp;amp;=+$,]|%[a-fA-F\d]{2})(?:[\-_.!~*'()a-zA-Z\d;\/?:@&amp;amp;=+$,\[\]]|%[a-fA-F\d]{2})*)                    (?# 2: opaque)
        |
           (?:(?:
             \/\/(?:
                 (?:(?:((?:[\-_.!~*'()a-zA-Z\d;:&amp;amp;=+$,]|%[a-fA-F\d]{2})*)@)?        (?# 3: userinfo)
                   (?:((?:(?:[a-zA-Z0-9\-.]|%\h\h)+|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|\[(?:(?:[a-fA-F\d]{1,4}:)*(?:[a-fA-F\d]{1,4}|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})|(?:(?:[a-fA-F\d]{1,4}:)*[a-fA-F\d]{1,4})?::(?:(?:[a-fA-F\d]{1,4}:)*(?:[a-fA-F\d]{1,4}|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}))?)\]))(?::(\d*))?))? (?# 4: host, 5: port)
               |
                 ((?:[\-_.!~*'()a-zA-Z\d$,;:@&amp;amp;=+]|%[a-fA-F\d]{2})+)                 (?# 6: registry)
               )
             |
             (?!\/\/))                           (?# XXX: '\/\/' is the mark for hostport)
             (\/(?:[\-_.!~*'()a-zA-Z\d:@&amp;amp;=+$,]|%[a-fA-F\d]{2})*(?:;(?:[\-_.!~*'()a-zA-Z\d:@&amp;amp;=+$,]|%[a-fA-F\d]{2})*)*(?:\/(?:[\-_.!~*'()a-zA-Z\d:@&amp;amp;=+$,]|%[a-fA-F\d]{2})*(?:;(?:[\-_.!~*'()a-zA-Z\d:@&amp;amp;=+$,]|%[a-fA-F\d]{2})*)*)*)?                    (?# 7: path)
           )(?:\?((?:[\-_.!~*'()a-zA-Z\d;\/?:@&amp;amp;=+$,\[\]]|%[a-fA-F\d]{2})*))?                 (?# 8: query)
        )
        (?:\#((?:[\-_.!~*'()a-zA-Z\d;\/?:@&amp;amp;=+$,\[\]]|%[a-fA-F\d]{2})*))?                  (?# 9: fragment)
      /x
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="further-reading"&gt;Further Reading&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.regular-expressions.info/email.html"&gt;Simpler regex to match a lot of URIs (you should increase the maximum length of TLDs, though)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.ietf.org/rfc/rfc2396.txt"&gt;RFC 2396&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tools.ietf.org/rfc/rfc3986.txt"&gt;RFC 3986&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Better Standards</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/20-better-standards.html"/>
    <id>http://idiosyncratic-ruby.com/20-better-standards.html</id>
    <published>2015-05-20T02:00:00+02:00</published>
    <updated>2015-05-20T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;A guide to Ruby's stdlib and available alternatives.&lt;/p&gt;

&lt;h2 id="standard-library-overview"&gt;Standard Library Overview&lt;/h2&gt;

&lt;p&gt;&lt;/p&gt;

&lt;table class="table-20-10-50-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Library&lt;/th&gt;
      &lt;th&gt;Sources&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;Alternatives&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/abbrev/rdoc/Abbrev.html"&gt;abbrev&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/blob/trunk/lib/abbrev.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-abbrev"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Small library that finds the shortest abbreviation to identify one string amongst many&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/base64/rdoc/Base64.html"&gt;base64&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/blob/trunk/lib/base64.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-base64"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Encodes and decodes strings to a &lt;a href="http://en.wikipedia.org/wiki/Base64"&gt;Base64&lt;/a&gt; representation. Implemented as a small wrapper around &lt;a href="http://idiosyncratic-ruby.com/4-what-the-pack.html"&gt;String#unpack&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/benchmark/rdoc/Benchmark.html"&gt;benchmark&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/blob/trunk/lib/benchmark.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-benchmark"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Benchmarking library&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/evanphx/benchmark-ips"&gt;benchmark-ips&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/cgi/rdoc/CGI.html"&gt;cgi&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/cgi.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-cgi"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for CGI (&lt;a href="https://en.wikipedia.org/wiki/Common_Gateway_Interface"&gt;Common Gateway Interface&lt;/a&gt;)&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/rack/rack/"&gt;rack&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/cmath/rdoc/CMath.html"&gt;cmath&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/cmath.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-cmath"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Trigonometric and transcendental functions for complex numbers&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Continuation.html"&gt;continuation&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/continuation"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-continuation"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Deprecated library that adds the &lt;a href="http://idiosyncratic-ruby.com/24-goto-fail.html"&gt;goto&lt;/a&gt;-like &lt;a href="http://ruby-doc.org/core-2.3.0/Kernel.html#method-i-callcc"&gt;Kernel#callcc&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Fiber.html"&gt;Fiber&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/coverage/rdoc/Coverage.html"&gt;coverage&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/coverage"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-coverage"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Measures &lt;a href="https://en.wikipedia.org/wiki/Code_coverage"&gt;code coverage&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/csv/rdoc/CSV.html"&gt;csv&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/csv.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-csv"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for CSV (&lt;a href="http://en.wikipedia.org/wiki/Comma-separated_values"&gt;Comma-separated Values&lt;/a&gt;)&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/tilo/smarter_csv"&gt;smarter_csv&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/date/rdoc/index.html"&gt;date&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/date"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-date"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;The &lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/date/rdoc/Date.html"&gt;Date&lt;/a&gt; and &lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/date/rdoc/DateTime.html"&gt;DateTime&lt;/a&gt; classes&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/dbm/rdoc/DBM.html"&gt;dbm&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/dbm"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-dbm"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for &lt;a href="http://en.wikipedia.org/wiki/Dbm"&gt;DBM databases&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/debug/rdoc/DEBUGGER__.html"&gt;debug&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/debug.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-debug"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Command-line &lt;a href="https://en.wikipedia.org/wiki/Debugger"&gt;debugger&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/deivid-rodriguez/byebug"&gt;byebug&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/delegate/rdoc/Delegator.html"&gt;delegate&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/delegate.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-delegate"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Provides three ways to &lt;a href="http://en.wikipedia.org/wiki/Delegation_pattern"&gt;delegate&lt;/a&gt; method calls&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/forwardable/rdoc/Forwardable.html"&gt;forwardable&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/digest/rdoc/Digest.html"&gt;digest&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/digest"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-digest"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Provides common &lt;a href="https://en.wikipedia.org/wiki/Hash_function"&gt;hash functions&lt;/a&gt; like MD5, SHA1, SHA2, or RIPEMD-160&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/openssl/rdoc/OpenSSL/Digest.html"&gt;OpenSSL::Digest&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/drb/rdoc/index.html"&gt;drb&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/drb.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-drb"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Distributed object system for Ruby&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/e2mmap/rdoc/Exception2MessageMapper.html"&gt;e2mmap&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/e2mmap.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-e2mmap"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Abstraction arround exception handling&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/English/rdoc/English.html"&gt;English&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/English.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-english"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://idiosyncratic-ruby.com/9-globalization.html"&gt;Readable aliases for special global variables&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/erb/rdoc/index.html"&gt;erb&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/erb.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-erb"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Templating engine for Ruby&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://www.kuwata-lab.com/erubis/"&gt;erubis&lt;/a&gt;, &lt;a href="https://github.com/apotonick/erbse"&gt;erbse&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/etc/rdoc/Etc.html"&gt;etc&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/etc"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-etc"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Access UNIX info from &lt;code&gt;/etc&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/expect/rdoc/IO.html"&gt;expect&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/blob/trunk/ext/pty/lib/expect.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-expect"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Adds &lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/expect/rdoc/IO.html#method-i-expect"&gt;IO#expect&lt;/a&gt;, which can be used to wait for a specific pattern to be read&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/fcntl/rdoc/Fcntl.html"&gt;fcntl&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/fcntl"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-fcntl"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Loads values from the OS' &lt;code&gt;fcntl.h&lt;/code&gt; to be used for low-level &lt;a href="http://readruby.io/io#fcntl"&gt;file descriptior manipulation&lt;/a&gt; system calls with &lt;a href="http://ruby-doc.org/core-2.3.0/IO.html#method-i-fcntl"&gt;IO#fcntl&lt;/a&gt; and &lt;a href="http://ruby-doc.org/core-2.3.0/IO.html#method-c-sysopen"&gt;IO.sysopen&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Fiber.html"&gt;fiber&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/fiber"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-fiber"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Adds &lt;a href="http://ruby-doc.org/core-2.3.0/Fiber.html#method-i-transfer"&gt;Fiber#transfer&lt;/a&gt; and &lt;a href="http://ruby-doc.org/core-2.3.0/Fiber.html#method-i-alive-3F"&gt;Fiber#alive?&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/fiddle/rdoc/Fiddle.html"&gt;fiddle&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/fiddle"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-fiddle"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for FFI (&lt;a href="https://sourceware.org/libffi/"&gt;Foreign Function Interface&lt;/a&gt;)&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ffi/ffi"&gt;ffi&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/fileutils/rdoc/FileUtils.html"&gt;fileutils&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/fileutils.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-fileutils"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Utilities for working with the file system&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/find/rdoc/Find.html"&gt;find&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/find.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-find"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Finds all files in a given directory and its sub-directories&lt;/td&gt;
      &lt;td&gt;&lt;code style="white-space: nowrap"&gt;`find .`.split($/)&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="[forwardable](http://ruby-doc.org/stdlib-2.3.0/libdoc/forwardable/rdoc/Forwardable.html)"&gt;forwardable&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/forwardable.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-forwardable"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Provides a way to &lt;a href="http://en.wikipedia.org/wiki/Delegation_pattern"&gt;delegate&lt;/a&gt; method calls. Also see &lt;a href="http://radar.oreilly.com/2014/02/delegation-patterns-in-ruby.html"&gt;this overview of delegation in Ruby&lt;/a&gt;, which contains an example&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/gdbm/rdoc/GDBM.html"&gt;gdbm&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/gdbm"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-gdbm"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for &lt;a href="http://www.gnu.org.ua/software/gdbm/"&gt;GNU dbm databases&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/getoptlong/rdoc/GetoptLong.html"&gt;getoptlong&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/getoptlong.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-getoptlong"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://linux.die.net/man/3/getopt_long"&gt;GNU getopt_long()&lt;/a&gt; style command-line option parsing&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/optparse/rdoc/OptParse.html"&gt;OptParse&lt;/a&gt;, &lt;a href="https://github.com/leejarvis/slop"&gt;slop&lt;/a&gt;, &lt;a href="https://github.com/ManageIq/trollop"&gt;trollop&lt;/a&gt;, &lt;a href="https://github.com/soveran/clap"&gt;clap&lt;/a&gt;, &lt;a href="https://github.com/janlelis/rationalist"&gt;rationalist&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/io/nonblock/rdoc/IO.html"&gt;io/nonblock&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/io/nonblock"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-io-nonblock"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Allows to work with &lt;code&gt;IO&lt;/code&gt; streams in a non-blocking way&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/io/wait/rdoc/IO.html"&gt;io/wait&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/io/wait"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-io-wait"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Adds methods to wait until an &lt;code&gt;IO&lt;/code&gt; stream becomes readable or writable&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/ipaddr/rdoc/IPAddr.html"&gt;ipaddr&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/blob/trunk/lib/ipaddr.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-ipaddr"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;IP address manipulation&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/bluemonk/ipaddress"&gt;ipaddress&lt;/a&gt;, &lt;a href="https://github.com/deploy2/ruby-ip"&gt;ruby-ip&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/irb/rdoc/IRB.html"&gt;irb&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/irb.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-irb"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Interactive Ruby Console (&lt;a href="https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop"&gt;REPL&lt;/a&gt;)&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/cldwalker/ripl"&gt;ripl&lt;/a&gt;, &lt;a href="http://pryrepl.org/"&gt;pry&lt;/a&gt;, &lt;a href="https://github.com/godfat/rib"&gt;rib&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/logger/rdoc/Logger.html"&gt;logger&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/logger.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-logger"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby.janlelis.de/50-exploring-the-stdlib-logger"&gt;Logging utility&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/colbygk/log4r"&gt;log4r&lt;/a&gt;, &lt;a href="https://github.com/bdurand/lumberjack"&gt;lumberjack&lt;/a&gt;, &lt;a href="https://github.com/rudionrails/yell"&gt;yell&lt;/a&gt;, &lt;a href="https://github.com/TwP/logging"&gt;logging&lt;/a&gt;, &lt;a href="https://github.com/janlelis/micrologger"&gt;micrologger&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/mathn/rdoc/index.html"&gt;mathn&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/mathn.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-mathn"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Deprecated library that extends math operations&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/matrix/rdoc/index.html"&gt;matrix&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/matrix.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-matrix"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for &lt;a href="https://en.wikipedia.org/wiki/Matrix_%28mathematics%29"&gt;matrices&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/SciRuby/nmatrix"&gt;nmatrix&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/mkmf/rdoc/MakeMakefile.html"&gt;mkmf&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/mkmf.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-mkmf"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Generates &lt;a href="http://en.wikipedia.org/wiki/Makefile"&gt;Makefiles&lt;/a&gt; for native &lt;a href="https://github.com/ruby/ruby/blob/trunk/doc/extension.rdoc"&gt;C extensions&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/monitor/rdoc/Monitor.html"&gt;monitor&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/monitor.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-monitor"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://en.wikipedia.org/wiki/Monitor_%28synchronization%29"&gt;Monitors&lt;/a&gt; for multi-threaded code&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/mutex_m/rdoc/Mutex_m.html"&gt;mutex_m&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/mutex_m.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-mutex_m"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;A mixin that makes any object behave like a &lt;a href="http://ruby-doc.org/core-2.3.0/Mutex.html"&gt;mutex&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/net/ftp/rdoc/Net/FTP.html"&gt;net/ftp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/net/ftp.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-net-ftp"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for FTP (&lt;a href="http://en.wikipedia.org/wiki/File_Transfer_Protocol"&gt;File Transfer Protocol&lt;/a&gt;)&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/net/http/rdoc/Net/HTTP.html"&gt;net/http&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/net/http.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-net-http"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for HTTP (&lt;a href="http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"&gt;Hypertext Transfer Protocol&lt;/a&gt;)&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/httprb/http.rb/"&gt;http.rb&lt;/a&gt;, &lt;a href="https://github.com/igrigorik/em-http-request"&gt;em-http-request&lt;/a&gt;, &lt;a href="https://github.com/excon/excon"&gt;excon&lt;/a&gt;, &lt;a href="https://github.com/nahi/httpclient"&gt;httpclient&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/net/imap/rdoc/Net/IMAP.html"&gt;net/imap&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/net/imap.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-net-imap"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for IMAP (&lt;a href="http://en.wikipedia.org/wiki/Internet_Message_Access_Protocol"&gt;Internet Message Access Protocol&lt;/a&gt;)&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ConradIrwin/em-imap"&gt;em-imap&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/net/pop/rdoc/Net/POP3.html"&gt;net/pop&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/net/pop.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-net-pop"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for POP3 (&lt;a href="http://en.wikipedia.org/wiki/Post_Office_Protocol"&gt;Post Office Protocol&lt;/a&gt;)&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/net/smtp/rdoc/Net/SMTP.html"&gt;net/smtp&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/net/smtp.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-net-smtp"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for SMTP (&lt;a href="http://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol"&gt;Simple Mail Transfer Protocol&lt;/a&gt;)&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/nkf/rdoc/NKF.html"&gt;nkf&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/nkf"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-nkf"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://en.wikipedia.org/wiki/Kanji"&gt;Kanji&lt;/a&gt; encoding converter&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/objspace/rdoc/ObjectSpace.html"&gt;objspace&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/objspace"&gt;mri&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Adds more statistics methods to &lt;code&gt;ObjectSpace&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/observer/rdoc/Observable.html"&gt;observer&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/observer.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-observer"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Implementation of the &lt;a href="http://en.wikipedia.org/wiki/Observer_pattern"&gt;observer pattern&lt;/a&gt;, a way to let interested other objects know o an objetc's updates&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/janlelis/microevent.rb"&gt;microevent&lt;/a&gt;, &lt;a href="https://github.com/JEG2/signal_lamp/"&gt;signal_lamp&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/open-uri/rdoc/OpenURI.html"&gt;open-uri&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/open-uri.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-open-uri"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Monkeypatches &lt;a href="http://ruby-doc.org/core-2.3.0/Kernel.html#method-i-open"&gt;Kernel#open&lt;/a&gt; to support remote endpoints via &lt;code&gt;net/http&lt;/code&gt; and &lt;code&gt;net/ftp&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/open3/rdoc/Open3.html"&gt;open3&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/open3.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-open3"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Simple spawning of child processes&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ahoward/open4"&gt;open4&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/openssl/rdoc/OpenSSL.html"&gt;openssl&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/openssl"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-openssl"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Wraps &lt;a href="http://www.openssl.org/"&gt;OpenSSL&lt;/a&gt; for cryptographic functionality&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/optparse/rdoc/OptParse.html"&gt;optparse&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/optparse.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-optparse"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Command-line option parser&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/leejarvis/slop"&gt;slop&lt;/a&gt;, &lt;a href="https://github.com/ManageIq/trollop"&gt;trollop&lt;/a&gt;, &lt;a href="https://github.com/soveran/clap"&gt;clap&lt;/a&gt;, &lt;a href="https://github.com/janlelis/rationalist"&gt;rationalist&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/ostruct/rdoc/OpenStruct.html"&gt;ostruct&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/ostruct.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-ostruct"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Wrapper around Hash that lets you read and set attributes with a method API&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Hash.html"&gt;Hash&lt;/a&gt;, &lt;a href="https://github.com/rubyworks/ostruct2"&gt;ostruct2&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/pathname/rdoc/Pathname.html"&gt;pathname&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/pathname"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-pathname"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Wraps &lt;code&gt;File&lt;/code&gt;, &lt;code&gt;FileTest&lt;/code&gt;, &lt;code&gt;Dir&lt;/code&gt;, and &lt;code&gt;FileUtils&lt;/code&gt; to ease working with file system paths&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/eregon/path"&gt;path&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/prettyprint/rdoc/PrettyPrint.html"&gt;prettyprint&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/prettyprint.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-prettyprint"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Better object formatting and inspection. Comes with the &lt;code&gt;pp&lt;/code&gt; print debugging helper via &lt;code&gt;require 'pp'&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/janlelis/wirb"&gt;wirb&lt;/a&gt;, &lt;a href="https://github.com/cldwalker/hirb"&gt;hirb&lt;/a&gt;, &lt;a href="https://github.com/michaeldv/awesome_print/"&gt;awesome_print&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/prime/rdoc/Prime.html"&gt;prime&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/prime.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-prime"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Access to prime numbers and prime factorization&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/profiler/rdoc/Profiler__.html"&gt;profiler&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/profiler.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-profiler"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Measures which methods are called and how long each method takes to complete. Auto-start via &lt;code&gt;require 'profile'&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby-prof/ruby-prof"&gt;ruby-prof&lt;/a&gt;, &lt;a href="https://github.com/tmm1/perftools.rb"&gt;perftools.rb&lt;/a&gt;, &lt;a href="https://github.com/change/method_profiler"&gt;method_profiler&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/pstore/rdoc/PStore.html"&gt;pstore&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/pstore.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-pstore"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Transactional file storage for Ruby objects&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/pty/rdoc/PTY.html"&gt;pty&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/pty"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-pty"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Manages &lt;a href="http://en.wikipedia.org/wiki/Pseudo_terminal"&gt;pseudo terminals&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/racc/parser/rdoc/Racc.html"&gt;racc&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/racc"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/tenderlove/racc"&gt;gem&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;A &lt;a href="http://en.wikipedia.org/wiki/Yacc"&gt;YACC&lt;/a&gt;-like &lt;a href="http://en.wikipedia.org/wiki/LALR_parser_generator"&gt;LALR(1) parser generator&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/kschiess/parslet/"&gt;parslet&lt;/a&gt;, &lt;a href="https://github.com/mjackson/citrus"&gt;citrus&lt;/a&gt;, &lt;a href="https://github.com/nathansobo/treetop"&gt;treetop&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://technicalpickles.com/posts/spelunking-your-ruby-installs-configuration-with-rbconfig/"&gt;rbconfig&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;RbConfig&lt;/code&gt; is a Ruby constant that contains compile time information&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/readline/rdoc/Readline.html"&gt;readline&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/readline"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-readline"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Interface to &lt;a href="http://directory.fsf.org/wiki/Readline"&gt;GNU Readline&lt;/a&gt; and &lt;a href="http://thrysoee.dk/editline/"&gt;NetBSD Editline&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ConnorAtherton/rb-readline"&gt;rb-readline&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/resolv/rdoc/Resolv.html"&gt;resolv&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/resolv.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-resolv"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Thread-aware &lt;a href="http://en.wikipedia.org/wiki/Domain_Name_System"&gt;DNS&lt;/a&gt; resolver. Will replace &lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/socket/rdoc/Socket.html"&gt;Socket&lt;/a&gt;'s DNS via &lt;code&gt;require 'resolve-replace'&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ioquatix/rubydns"&gt;rubydns&lt;/a&gt;, &lt;a href="https://github.com/bluemonk/net-dns"&gt;net-dns&lt;/a&gt;, &lt;a href="https://github.com/mperham/em-resolv-replace"&gt;em-resolve-replace&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/rexml/rdoc/REXML.html"&gt;rexml&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/rexml.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-rexml"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for XML (&lt;a href="http://en.wikipedia.org/wiki/XML"&gt;Extensible Markup Language&lt;/a&gt;)&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://www.nokogiri.org/"&gt;nokogiri&lt;/a&gt;, &lt;a href="https://github.com/YorickPeterse/oga"&gt;oga&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/rinda/rdoc/Rinda.html"&gt;rinda&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/rinda.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-rinda"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support fot the &lt;a href="http://en.wikipedia.org/wiki/Linda_%28coordination_language%29"&gt;Linda distributed computing paradigm&lt;/a&gt; in &lt;a href=""&gt;drb&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/ripper/rdoc/Ripper.html"&gt;ripper&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/ripper"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-ripper"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Ruby parser that creates a &lt;a href="http://en.wikipedia.org/wiki/S-expression"&gt;symbolic expression tree&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/seattlerb/ruby_parser"&gt;ruby_parser&lt;/a&gt;, &lt;a href="https://github.com/whitequark/parser"&gt;parser&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/rss/rdoc/RSS.html"&gt;rss&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/rss.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-rss"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for RSS (&lt;a href="http://en.wikipedia.org/wiki/RSS"&gt;Rich Site Summary&lt;/a&gt;) and &lt;a href="http://en.wikipedia.org/wiki/Atom_%28standard%29"&gt;Atom&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/rubygems/rdoc/Gem.html"&gt;rubygems&lt;/a&gt;&lt;br /&gt;(auto-require)&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/rubygems.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubygems/rubygems/"&gt;rubygems&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Manages Ruby libraries. Can be required as &lt;code&gt;ubygems&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/scanf/rdoc/Scanf.html"&gt;scanf&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/scanf.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-scanf"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Pure-Ruby &lt;a href="http://en.wikipedia.org/wiki/Scanf_format_string"&gt;scanf&lt;/a&gt; implementation&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/sdbm/rdoc/SDBM.html"&gt;sdbm&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/sdbm"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-sdbm"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for &lt;a href="http://en.wikipedia.org/wiki/Dbm"&gt;SDBM databases&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/securerandom/rdoc/SecureRandom.html"&gt;securerandom&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/securerandom.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-securerandom"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Provides crpytographical randomness from openssl or the OS&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/set/rdoc/Set.html"&gt;set&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/set.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-set"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Data structure for unordered collections without duplicates. Implemented on top of Hash. Also comes with &lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/set/rdoc/SortedSet.html"&gt;SortedSet&lt;/a&gt; for ordered collections.&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/shell/rdoc/Shell.html"&gt;shell&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/shell.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-shell"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Provides a Ruby interface for interacting with the &lt;a href="http://en.wikipedia.org/wiki/Bourne_shell"&gt;shell&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ahoward/session"&gt;session&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/shellwords/rdoc/Shellwords.html"&gt;shellwords&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/shellwords.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-shellwords"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Escape and manipulate commads to be run in the &lt;a href="http://en.wikipedia.org/wiki/Bourne_shell"&gt;shell&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/singleton/rdoc/Singleton.html"&gt;singleton&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/singleton.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-singleton"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Mixin for Ruby classes that should only have one instance&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/socket/rdoc/Socket.html"&gt;socket&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/socket"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-socket"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for &lt;a href="http://en.wikipedia.org/wiki/Unix_domain_socket"&gt;unix-&lt;/a&gt; and &lt;a href="http://en.wikipedia.org/wiki/Network_socket"&gt;network sockets&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/stringio/rdoc/StringIO.html"&gt;stringio&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/stringio"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-stringio"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Makes strings behave like IO objects&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/strscan/rdoc/StringScanner.html"&gt;strscan&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/strscan"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-strscan"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Lexical string scanning&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/sync/rdoc/Sync_m.html"&gt;sync&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/sync.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-sync"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://en.wikipedia.org/wiki/Two-phase_locking"&gt;Two-phase lock&lt;/a&gt; with a counter for multi-threaded code&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/syslog/rdoc/Syslog.html"&gt;syslog&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/syslog"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-syslog"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Interface to the low-level &lt;a href="http://en.wikipedia.org/wiki/Syslog"&gt;syslog&lt;/a&gt; logger&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/crohr/syslogger"&gt;syslogger&lt;/a&gt;, &lt;a href="https://github.com/colbygk/log4r"&gt;log4r&lt;/a&gt;, &lt;a href="https://github.com/bdurand/lumberjack_syslog_device"&gt;lumberjack_syslog_device&lt;/a&gt;, &lt;a href="https://github.com/rudionrails/yell/wiki/additional-adapters-syslog"&gt;yell-adapters-syslog&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/tempfile/rdoc/Tempfile.html"&gt;tempfile&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/tempfile.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-tempfile"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Simplifies OS independent creation of temporary files&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.0/libdoc/thread/rdoc/"&gt;thread&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/thread"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-thread"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Functionality for Threads in Ruby, like a &lt;code&gt;SizedQueue&lt;/code&gt; class&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/thwait/rdoc/ThWait.html"&gt;thwait&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/thwait.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-thwait"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Waits for threads to finish&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/meh/ruby-thread"&gt;thread&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/time/rdoc/Time.html"&gt;time&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/time.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-time"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Adds more methods to &lt;code&gt;Time&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/timeout/rdoc/Timeout.html"&gt;timeout&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/timeout.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-timeout"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Auto-terminates code blocks after the time limit is reached&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/tk/rdoc/index.html"&gt;tk&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/tk"&gt;mri&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for the &lt;a href="http://en.wikipedia.org/wiki/Tk_%28software%29"&gt;tk GUI widget toolkit&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/tmpdir/rdoc/Dir.html#method-c-mktmpdir"&gt;tmpdir&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/tmpdir.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-tmpdir"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Adds a &lt;code&gt;Dir.mktmpdir&lt;/code&gt; method for creating temporary directories OS independently&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/tracer/rdoc/Tracer.html"&gt;tracer&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/tracer.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-tracer"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Outputs the &lt;a href="http://en.wikipedia.org/wiki/Tracing_%28software%29"&gt;code execution trace&lt;/a&gt; via &lt;a href="http://ruby-doc.org/core-2.3.0/Kernel.html#method-i-set_trace_func"&gt;Kernel#set_trace_func&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/TracePoint.html"&gt;TracePoint&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/tsort/rdoc/TSort.html"&gt;tsort&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/tsort.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-tsort"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Topological sorting using &lt;a href="http://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm"&gt;Tarjan’s algorithm&lt;/a&gt;, which finds &lt;a href="http://en.wikipedia.org/wiki/Strongly_connected_component"&gt;strongly connected components&lt;/a&gt; in &lt;a href="http://en.wikipedia.org/wiki/Graph_%28abstract_data_type%29"&gt;graphs&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/un/rdoc/index.html"&gt;un&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/un.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-un"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://idiosyncratic-ruby.com/6-run-ruby-run.html"&gt;Utilities to replace common UNIX commands&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/unicode_normalize/rdoc/UnicodeNormalize.html"&gt;unicode_normalize&lt;/a&gt;&lt;br /&gt;(auto-require)&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/unicode_normalize.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-unicode_normalize"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Adds a &lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/unicode_normalize/rdoc/String.html#method-i-unicode_normalize"&gt;String#unicode_normalize&lt;/a&gt; method which &lt;a href="http://unicode.org/reports/tr15/"&gt;normalizes unicode strings&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/knu/ruby-unf"&gt;unf&lt;/a&gt;, &lt;a href="https://github.com/blackwinter/unicode"&gt;unicode&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/uri/rdoc/URI.html"&gt;uri&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/uri.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-uri"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://en.wikipedia.org/wiki/Uniform_resource_identifier"&gt;URI&lt;/a&gt;/URL manipulation&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/sporkmonger/addressable"&gt;adressable&lt;/a&gt;,&lt;a href="https://github.com/tlewin/ruby-uriparser"&gt;ruby-uriparser&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/weakref/rdoc/WeakRef.html"&gt;weakref&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/weakref.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-weakref"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Explicitely allow objects to be garbage collected&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby-concurrency/ref"&gt;ref&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/webrick/rdoc/WEBrick.html"&gt;webrick&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/webrick.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-webrick"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;HTTP server&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://code.macournoyer.com/thin/"&gt;thin&lt;/a&gt;, &lt;a href="http://unicorn.bogomips.org/"&gt;unicorn&lt;/a&gt;, &lt;a href="http://puma.io/"&gt;puma&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://proger.i-forge.net/Calling_DLL_functions_from_Ruby/OSS"&gt;Win32API&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/win32"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-win32api"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Let's you use Windows APIs, like calling functions in DLLs&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/djberg96/win32-api"&gt;win32-api&lt;/a&gt;, &lt;a href="https://github.com/ffi/ffi"&gt;ffi&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/win32ole/rdoc/WIN32OLE.html"&gt;win32ole&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/win32ole"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-win32ole"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Windows &lt;a href="http://en.wikipedia.org/wiki/OLE_Automation"&gt;OLE automation&lt;/a&gt; interface&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/xmlrpc/rdoc/XMLRPC.html"&gt;xmlrpc&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/xmlrpc.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-xmlrpc"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://en.wikipedia.org/wiki/XML-RPC"&gt;Remote Procedure Calls via XML and HTTP&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/yaml/rdoc/YAML.html"&gt;yaml&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/yaml.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-yaml"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Loads the psych yaml parser and sets &lt;code&gt;YAML = Psych&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/zlib/rdoc/Zlib.html"&gt;zlib&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/zlib"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-zlib"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Interface to the &lt;a href="http://en.wikipedia.org/wiki/Zlib"&gt;zlib compression library&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id="default-gems"&gt;Default Gems&lt;/h2&gt;

&lt;p&gt;Standard Ruby extensions that come as Ruby gems, so that they can be updated independently from Ruby.&lt;/p&gt;

&lt;table class="table-20-10-50-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Gem&lt;/th&gt;
      &lt;th&gt;Sources&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;Alternatives&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/bigdecimal/rdoc/BigDecimal.html"&gt;bigdecimal&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/bigdecimal"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-bigdecimal"&gt;rubysl&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for arbitrary-precision floating point decimal arithmetic&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/io/console/rdoc/IO.html"&gt;io/console&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/io/console"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rubysl/rubysl-io-console"&gt;rubysl&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/nobu/io-console"&gt;gem&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Patches &lt;code&gt;IO&lt;/code&gt; for simple and portable access to the console&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/json/rdoc/JSON.html"&gt;json&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/json"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/flori/json"&gt;gem&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for JSON (&lt;a href="http://en.wikipedia.org/wiki/JSON"&gt;JavaScript Object Notation&lt;/a&gt;)&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ohler55/oj"&gt;oj&lt;/a&gt;, &lt;a href="https://github.com/brianmario/yajl-ruby"&gt;yajl-ruby&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/psych/rdoc/Psych.html"&gt;psych&lt;/a&gt; &lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/tree/trunk/ext/psych"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/tenderlove/psych"&gt;gem&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Support for YAML (&lt;a href="http://en.wikipedia.org/wiki/YAML"&gt;YAML Ain't Markup Language&lt;/a&gt;)&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/rdoc/rdoc/RDoc.html"&gt;rdoc&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/ruby/blob/trunk/lib/rdoc.rb"&gt;mri&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/rdoc/rdoc"&gt;gem&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Ruby documentation generator&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://yardoc.org/"&gt;yard&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id="bundled-gems"&gt;Bundled Gems&lt;/h2&gt;

&lt;p&gt;Gems that will be installed together with Ruby. Versions as of Ruby 2.3 (2.2).&lt;/p&gt;

&lt;table class="table-20-15-45-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Gem&lt;/th&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;Alternatives&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://github.com/yuki24/did_you_mean"&gt;did_you_mean&lt;/a&gt;&lt;br /&gt;(auto-require)&lt;/td&gt;
      &lt;td&gt;1.0.0&lt;/td&gt;
      &lt;td&gt;Patches error messages to suggest correct spelling of methods/classes/variables&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://github.com/seattlerb/minitest"&gt;minitest&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;5.8.3 (5.4.3)&lt;/td&gt;
      &lt;td&gt;Test/spec framework, comes with mocking and benchmark capabilities&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/rspec/rspec"&gt;rspec&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/net-telnet"&gt;net-telnet&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;0.1.1&lt;/td&gt;
      &lt;td&gt;Support for &lt;a href="http://en.wikipedia.org/wiki/Telnet"&gt;Telnet&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://github.com/k-tsj/power_assert"&gt;power_assert&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;0.2.6 (0.2.2)&lt;/td&gt;
      &lt;td&gt;Debug tool that displays intermediate results of a method chain&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://github.com/ruby/rake"&gt;rake&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;10.4.2&lt;/td&gt;
      &lt;td&gt;A Ruby task runner, inspired by &lt;a href="http://en.wikipedia.org/wiki/Make_%28software%29"&gt;make&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://whatisthor.com/"&gt;thor&lt;/a&gt;, &lt;a href="https://github.com/cldwalker/boson"&gt;boson&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://github.com/test-unit/test-unit"&gt;test-unit&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;3.1.5 (3.0.8)&lt;/td&gt;
      &lt;td&gt;A xUnit family unit testing framework&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://github.com/seattlerb/minitest"&gt;minitest&lt;/a&gt;, &lt;a href="https://github.com/rspec/rspec"&gt;rspec&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a href="https://github.com/janlelis/idiosyncratic-ruby.com/blob/master/source/posts/20-better-standards.html.md"&gt;Something's wrong or missing? You can edit this list on GitHub!&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/doc/standard_library_rdoc.html"&gt;RDoc: Standard library short descriptions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/doc/maintainers_rdoc.html"&gt;RDoc: Standard library maintainers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://redmine.ruby-lang.org/projects/ruby/wiki/StdlibGem"&gt;About standard library gems&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://rubini.us/2013/09/22/ready-set/"&gt;Rubinius' rubysl announcement&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Symbolic Reservations</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/19-semantic-symbols.html"/>
    <id>http://idiosyncratic-ruby.com/19-semantic-symbols.html</id>
    <published>2015-05-19T02:00:00+02:00</published>
    <updated>2015-05-19T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;This episode takes a look at the unusual use of symbols in one of Ruby's core APIs:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="enumerablechunk"&gt;&lt;code&gt;Enumerable#chunk&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;chunk&lt;/code&gt; method splits the receiver object into multiple enumerators, using the rule defined in the block. It keeps together the parts that match in series. It then passes the result of this rule and an enumerator of the successive elements to the given block:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(1..42).chunk{ |n| n % 11 == 0 }.each{ |result, elements|
  puts "#{result}: #{elements * ' - '}"
}
# false: 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10
# true: 11
# false: 12 - 13 - 14 - 15 - 16 - 17 - 18 - 19 - 20 - 21
# true: 22
# false: 23 - 24 - 25 - 26 - 27 - 28 - 29 - 30 - 31 - 32
# true: 33
# false: 34 - 35 - 36 - 37 - 38 - 39 - 40 - 41 - 42
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can use this to order numbers in &lt;a href="http://en.wikipedia.org/wiki/Quotient_ring"&gt;quotient rings&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a = (0..4).map{ [] }
(1..42).chunk{ |n| n % 5 }.each{ |remainder, elements|
  a[remainder] += elements
}
puts a.map(&amp;amp;:inspect)
# [5, 10, 15, 20, 25, 30, 35, 40],    # every number where n % 5 == 0
# [1, 6, 11, 16, 21, 26, 31, 36, 41], # every number where n % 5 == 1
# [2, 7, 12, 17, 22, 27, 32, 37, 42], # every number where n % 5 == 2
# [3, 8, 13, 18, 23, 28, 33, 38],     # every number where n % 5 == 3
# [4, 9, 14, 19, 24, 29, 34, 39]      # every number where n % 5 == 4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The reason I am bringing it up as &lt;em&gt;idiosyncratic&lt;/em&gt; is: You can use &lt;strong&gt;special symbols&lt;/strong&gt; to influence the behavior of the chunk method, when used as the block return value. Anyone has seen something like this anywhere else in Ruby?&lt;/p&gt;

&lt;p&gt;Let's revisit a shortened version of the example at the top:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(1..42).chunk{ |n| n % 11 == 0 }.to_a
# =&amp;gt; [
#   [false, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [true, [11]],
#   [false, [12, 13, 14, 15, 16, 17, 18, 19, 20, 21]], [true, [22]],
#   [false, [23, 24, 25, 26, 27, 28, 29, 30, 31, 32]], [true, [33]],
#   [false, [34, 35, 36, 37, 38, 39, 40, 41, 42]]
# ]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It does nothing, when you pass in an arbitrary symbol as filter rule:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(1..42).chunk{ :symbol }.to_a
# =&amp;gt; [
#   [:symbol, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
#   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
#   36, 37, 38, 39, 40, 41, 42]]
# ]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However, when passing the special symbol &lt;code&gt;:_alone&lt;/code&gt;, every element will be separated:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(1..42).chunk{ :_alone }.to_a
# =&amp;gt; [
#   [:_alone, [1]], [:_alone, [2]], [:_alone, [3]], [:_alone, [4]], [:_alone, [5]],
#   [:_alone, [6]], [:_alone, [7]], [:_alone, [8]], [:_alone, [9]], [:_alone, [10]],
#   [:_alone, [11]], [:_alone, [12]], [:_alone, [13]], [:_alone, [14]],
#   [:_alone, [15]], [:_alone, [16]], [:_alone, [17]], [:_alone, [18]],
#   [:_alone, [19]], [:_alone, [20]], [:_alone, [21]], [:_alone, [22]],
#   [:_alone, [23]], [:_alone, [24]], [:_alone, [25]], [:_alone, [26]],
#   [:_alone, [27]], [:_alone, [28]], [:_alone, [29]], [:_alone, [30]],
#   [:_alone, [31]], [:_alone, [32]], [:_alone, [33]], [:_alone, [34]],
#   [:_alone, [35]], [:_alone, [36]], [:_alone, [37]], [:_alone, [38]],
#   [:_alone, [39]], [:_alone, [40]], [:_alone, [41]], [:_alone, [42]]
# ]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There is also the special symbol &lt;code&gt;:_separator&lt;/code&gt;, which drops every element:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(1..42).chunk{ :_separator }.to_a
# =&amp;gt; []
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Normally you don't want to return &lt;code&gt;:_alone&lt;/code&gt; or &lt;code&gt;:_separator&lt;/code&gt; for every element, but in specific instances of your filter rule, which is legit. The question remains, is this a good API for the future of Ruby?&lt;/p&gt;

&lt;p&gt;One more thing: Unknown &lt;strong&gt;special symbols&lt;/strong&gt; (those that start with &lt;code&gt;_&lt;/code&gt;) will raise a &lt;code&gt;RuntimeError&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(1..42).chunk{ :_future }.to_a
# RuntimeError: symbols beginning with an underscore are reserved
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Enumerable.html#method-i-chunk"&gt;RDoc Enumerable#chunk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Con-Struct Attributes</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/18-con-struct-attributes.html"/>
    <id>http://idiosyncratic-ruby.com/18-con-struct-attributes.html</id>
    <published>2015-05-18T02:00:00+02:00</published>
    <updated>2015-05-18T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;Ruby's &lt;a href="http://ruby-doc.org/core-2.3.0/Struct.html"&gt;Struct&lt;/a&gt; class is a convenient way to create Ruby classes, which already have some attributes defined. If you are not familiar with structs, you should watch &lt;a href="http://www.rubytapas.com/episodes/20-Struct"&gt;Avdi Grimm's introduction to structs&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;But in many cases there is something better than structs:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="gems-that-define-attributes-for-plain-old-ruby-objects"&gt;Gems that Define Attributes for "Plain Old Ruby Objects"&lt;/h2&gt;

&lt;p&gt;Instead of using a specialized struct-class (which has different semantics), you could also go with normal Ruby classes. What follows is a collection of gems you could use for this purpose.&lt;/p&gt;

&lt;p&gt;At the bottom, there are also some tips, &lt;a href="#structs-are-still-useful-as-value-objects"&gt;when to use structs and what to bear in mind regarding structs&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="virtus"&gt;Virtus&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/solnic/virtus"&gt;virtus&lt;/a&gt;: &lt;em&gt;Attributes on Steroids for Plain Old Ruby Objects&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require 'virtus'

class Person
  include Virtus.model

  attribute :name
  attribute :age
end

Person.new(name: "Jan", age: 26)
# =&amp;gt; #&amp;lt;Person:0x00000001ad85a8 @name="Jan", @age=26&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="active-attr"&gt;Active Attr&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/cgriego/active_attr"&gt;active_attr&lt;/a&gt;: &lt;em&gt;What ActiveModel left out&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require 'active_attr'

class Person
  include ActiveAttr::MassAssignment
  attr_accessor :name, :age
end

Person.new(name: "Jan", age: 26)
# =&amp;gt; #&amp;lt;Person:0x00000002464f18 @name="Jan", @age=26&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="fast-attributes"&gt;Fast Attributes&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/applift/fast_attributes"&gt;fast_attributes&lt;/a&gt;: &lt;em&gt;FastAttributes adds attributes with their types to the class&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require 'fast_attributes'

class Person
  extend FastAttributes

  define_attributes initialize: true do
    attribute :name, Object
    attribute :age, Object
  end
end

Person.new(name: "Jan", age: 26)
# =&amp;gt; #&amp;lt;Person @name="Jan", @age=26&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="attrio"&gt;Attrio&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/jetrockets/attrio"&gt;attrio&lt;/a&gt;: &lt;em&gt;Attributes for plain old Ruby objects. No dependencies, only simplicity and clearness.&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require 'attrio'

class Person
  include Attrio

  define_attributes do
    attr :name
    attr :age
  end

  def initialize(attributes = {})
    self.attributes = attributes
  end


  def attributes=(attributes = {})
    attributes.each do |attr,value|
      self.send("#{attr}=", value) if self.respond_to?("#{attr}=")
    end
  end
end

Person.new(name: "Jan", age: 26)
# =&amp;gt; &amp;lt;Person name: "Jan", age: 26&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="attrextras"&gt;attr_extras&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/barsoom/attr_extras"&gt;attr_extras&lt;/a&gt;: &lt;em&gt;Takes some boilerplate out of Ruby with methods like attr_initialize.&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require 'attr_extras'

class Person
  attr_initialize :name, :age
  attr_reader :name, :age
end

Person.new("Jan", 26)
# =&amp;gt; #&amp;lt;Person:0x0000000216ed40 @name="Jan", @age=26&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="concord"&gt;Concord&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/mbj/concord"&gt;concord&lt;/a&gt;: &lt;em&gt;Mixin to ease compositions under ruby&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require 'concord'

class Person
  include Concord.new(:name, :age)
end

Person.new("Jan", 26)
# =&amp;gt; #&amp;lt;Person name="Jan" age=26&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="fatter-attr"&gt;Fatter Attr&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/ahoward/fattr"&gt;fattr&lt;/a&gt;: &lt;em&gt;fattr.rb is a "fatter attr" for ruby and borrows heavily from the metakoans.rb ruby quiz&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require 'fattr'

class Person
  fattrs :name, :age
end

person = Person.new
person.name = "Jan"
person.age  = 26
person
# =&amp;gt; #&amp;lt;Person:0x0000000147d7a8 @name="Jan", @age=26&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="anima"&gt;Anima&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/mbj/anima"&gt;anima&lt;/a&gt;: &lt;em&gt;Object initializer from attributes hash&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require 'anima'

class Person
  include Anima.new(:name, :age)
end

Person.new(name: "Jan", age: 26)
# =&amp;gt; #&amp;lt;Person name="Jan" age=26&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="kwattr"&gt;KWAttr&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/etiennebarrie/kwattr"&gt;kwattr&lt;/a&gt;: &lt;em&gt;attr_reader + initialize with keyword arguments&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require 'kwattr'

class Person
  kwattr :name, :age
end

Person.new(name: "Jan", age: 26)
# =&amp;gt; #&amp;lt;Person:0x00000002602988 @name="Jan", @age=26&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="structs-are-still-useful-as-value-objects"&gt;Structs are Still Useful… as Value Objects&lt;/h2&gt;

&lt;p&gt;Structs are different from normal Ruby classes, but they are still very useful for creating &lt;a href="http://en.wikipedia.org/wiki/Value_object"&gt;value objects&lt;/a&gt;. Value objects should be immutable and the following gems assist you in creating read-only objects with a Struct-like API:&lt;/p&gt;

&lt;h3 id="values"&gt;Values&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/tcrayford/values"&gt;values&lt;/a&gt;: &lt;em&gt;Simple immutable value objects for ruby (the readme is longer than the code)&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require 'values'

Person = Value.new(:name, :age)
Person.new("Jan", 26) # =&amp;gt; &amp;lt;Person name="Jan", age=26&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="immutable-struct"&gt;Immutable Struct&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/iconara/immutable_struct"&gt;immutable_struct&lt;/a&gt;: &lt;em&gt;An immutable version of Ruby's Struct class&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require 'immutable_struct'

Person = ImmutableStruct.new(:name, :age)
Person.new("Jan", 26) # =&amp;gt; #&amp;lt;struct Person name="Jan", age=26&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="value-struct"&gt;Value Struct&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/janlelis/value_struct"&gt;value_struct&lt;/a&gt;: &lt;em&gt;Read-only structs in Ruby&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require 'value_struct'

Person = ValueStruct.new(:name, :age)
Person.new("Jan", 26) # =&amp;gt; #&amp;lt;ValueStruct Person name="Jan", age=26&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="why-not-structs-everywhere"&gt;Why Not Structs Everywhere?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;You cannot access its instance variables directly&lt;/li&gt;
  &lt;li&gt;Structs have &lt;a href="http://ruby-doc.org/core-2.3.0/Struct.html#public-instance-method-details"&gt;their own methods&lt;/a&gt; (like &lt;code&gt;[]&lt;/code&gt;, a getter for variables), which might not always be useful&lt;/li&gt;
  &lt;li&gt;Pitfalls when creating structs with custom behavior (see below)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The different ways to initialize a Struct:&lt;/p&gt;

&lt;h3 id="inherit"&gt;Inherit&lt;/h3&gt;

&lt;p&gt;One way to add custom methods to a struct is to directley sub-class it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Person &amp;lt; Struct.new(:name, :age)
  def name_and_age
    "#{name}, #{age}"
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The bad thing about this is that it will add an aditionial entry to your ancestor chain:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Person.ancestors # =&amp;gt; [Person, #&amp;lt;Class:0x00000001612140&amp;gt;, Struct, ...]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="block"&gt;Block&lt;/h3&gt;

&lt;p&gt;This can be avoided by passing a block to the initializer:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Person = Struct.new(:name, :age) do
  def name_and_age
    "#{name}, #{age}"
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However, you got a new problem with this approach: You are not in the &lt;em&gt;define a class&lt;/em&gt; scope. This can be confusing when working with constants:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Person = Struct.new(:name, :age) do
  MAXIMUM_AGE = 120
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will create a top-level constant &lt;code&gt;MAXIMUM_AGE&lt;/code&gt; instead of a namespaced &lt;code&gt;Person::MAXIMUM_AGE&lt;/code&gt; one.&lt;/p&gt;

&lt;h3 id="reopen"&gt;Reopen&lt;/h3&gt;

&lt;p&gt;The approach that avoids both problems, is a little bit more verbose, but well readable:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Person = Struct.new(:name, :age)

class Person
  def name_and_age
    "#{name}, #{age}"
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It also seems to &lt;a href="https://gist.github.com/janlelis/02b75baac8521d311bf2"&gt;perfom slightly better&lt;/a&gt; than the other options.&lt;/p&gt;

&lt;h3 id="further-reading"&gt;Further Reading&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Plain_old_data_structure"&gt;Wikipedia: Plain old data structure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://rubyquiz.com/quiz67.html"&gt;Ruby Quiz: Implementing #attribute&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://blog.rubybestpractices.com/posts/rklemme/017-Struct.html"&gt;Article: Structs inside out&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://thepugautomatic.com/2013/08/struct-inheritance-is-overused/"&gt;Article: Struct inheritance is overused&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Stream Editing</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/17-stream-editing.html"/>
    <id>http://idiosyncratic-ruby.com/17-stream-editing.html</id>
    <published>2015-05-17T02:00:00+02:00</published>
    <updated>2015-05-17T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;One of Ruby's goals was to replace popular unix &lt;em&gt;stream editors&lt;/em&gt; like &lt;code&gt;awk&lt;/code&gt; or &lt;code&gt;sed&lt;/code&gt;, which both have the concept of manipulating files in a line-based manner. Ruby has the &lt;code&gt;-n&lt;/code&gt; option for this:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Causes Ruby to assume the following loop around your script, which makes it
iterate over file name arguments somewhat like sed -n or awk.

      while gets
        ...
      end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And its sibling &lt;code&gt;-p&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Acts mostly same as -n switch, but print the value of variable $_ at the each
end of the loop.
For example:

      % echo matz | ruby -p -e '$_.tr! "a-z", "A-Z"'
      MATZ
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What you need to know is that the &lt;a href="http://idiosyncratic-ruby.com/9-globalization.html"&gt;special global variable&lt;/a&gt; &lt;code&gt;$_&lt;/code&gt; contains the last read input. When using &lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;-p&lt;/code&gt;, this usualy means the current line. Another thing to keep in mind: &lt;code&gt;gets&lt;/code&gt; reads from &lt;a href="http://readruby.io/io#argf"&gt;&lt;code&gt;ARGF&lt;/code&gt;&lt;/a&gt;, not from &lt;code&gt;STDIN&lt;/code&gt;, so you can pass arguments that will be interpreted as filenames of the files that should be processed. Equipped with this knowlegde, you can build a very basic example, which just prints out the given file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -ne 'print $_' filename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since print without arguments implicitely prints out &lt;code&gt;$_&lt;/code&gt;, this can be shortened to:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -ne 'print' filename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If one uses &lt;code&gt;-p&lt;/code&gt;, instead of &lt;code&gt;-n&lt;/code&gt;, no code is required, because &lt;code&gt;-p&lt;/code&gt; will call &lt;code&gt;print&lt;/code&gt; implicitely:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -pe '' filename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let's modify each line:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -pe '$_.reverse!' filename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will print out the file with all its lines reversed.&lt;/p&gt;

&lt;p&gt;Here is another example, which will print every line in a random ANSI color:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -ne 'print "\e[3#{rand(8)}m#$_"' filename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There is more to assist you in writing these short line manipulation scripts:&lt;/p&gt;

&lt;h2 id="the-ruby-one-liner-toolbox"&gt;The Ruby One-Liner Toolbox&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;CLI Options: &lt;code&gt;-n&lt;/code&gt; &lt;code&gt;-p&lt;/code&gt; &lt;code&gt;-0&lt;/code&gt; &lt;code&gt;-F&lt;/code&gt; &lt;code&gt;-a&lt;/code&gt; &lt;code&gt;-i&lt;/code&gt; &lt;code&gt;-l&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Global Variables: &lt;code&gt;$_&lt;/code&gt; &lt;code&gt;$/&lt;/code&gt; &lt;code&gt;$\&lt;/code&gt; &lt;code&gt;$;&lt;/code&gt; &lt;code&gt;$F&lt;/code&gt; &lt;code&gt;$.&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Methods that operate on &lt;code&gt;$_&lt;/code&gt;, implicetly: &lt;code&gt;print&lt;/code&gt; &lt;code&gt;~&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;The special &lt;code&gt;BEGIN{}&lt;/code&gt; and &lt;code&gt;END{}&lt;/code&gt; blocks&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="running-code-before-or-after-processing-the-input"&gt;Running Code Before or After Processing the Input&lt;/h2&gt;

&lt;p&gt;You can run code before the loop starts with &lt;code&gt;BEFORE&lt;/code&gt; and after the loop with &lt;code&gt;END&lt;/code&gt;. For example, this will count characters:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -ne 'BEGIN{ count = 0 }; count += $_.size; END{ print count }' filename
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="using-line-numbers"&gt;Using Line Numbers&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;$.&lt;/code&gt; contains the current line number. A use-case would be counting the lines of a file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -ne 'END{p$.}' filename
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="string-matching"&gt;String Matching&lt;/h2&gt;

&lt;p&gt;Now let's do some conditional processing: Only print a line if it contains a digit:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -ne 'print if ~/\d/' filename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The message to take away: The &lt;code&gt;~&lt;/code&gt; method implicitely matches the regex against &lt;code&gt;$_&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But it gets even better:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -ne 'print if /\d/' filename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You thought conditions with a truthy value will always execute the &lt;code&gt;if&lt;/code&gt;-branch of a conditions? They will not, if the truthy value is a non-matching regex literal!&lt;/p&gt;

&lt;p&gt;This also works when using the ternary operator for conditions:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -ne 'puts "#$.: #{ /\d/ ? "first digit: #$&amp;amp;" : "no digit" }"' filename
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="inplace-editing-files"&gt;Inplace-Editing files&lt;/h2&gt;

&lt;p&gt;Using the &lt;code&gt;-i&lt;/code&gt; option, you can modify files directy (just like &lt;code&gt;sed&lt;/code&gt;'s &lt;code&gt;-i&lt;/code&gt; mode). For example, removing all trailing spaces:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -ne 'puts $_.rstrip!' -i filename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Like in &lt;code&gt;sed&lt;/code&gt;, you can provide a file extension to the &lt;code&gt;-i&lt;/code&gt; option which will be used to create a backup file before processing:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -pe '$_.upcase!' -i.original filename
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="auto-splitting-lines"&gt;Auto-splitting Lines&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;-a&lt;/code&gt; option will run &lt;code&gt;$F = $_.split&lt;/code&gt; for every line:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -nae 'puts $F.reverse.join(" ")' filename
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="specify-line-format"&gt;Specify Line Format&lt;/h2&gt;

&lt;p&gt;You might not always want to use &lt;code&gt;\n&lt;/code&gt; as the character that separates lines. Fortunately, Ruby has &lt;a href="http://idiosyncratic-ruby.com/16-changing-the-rules.html#change-a-global-default-separator"&gt;record separators&lt;/a&gt;, and you can set some of them via command-line options:&lt;/p&gt;

&lt;table class="table-10-10-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option&lt;/th&gt;
      &lt;th&gt;Variable&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;-0&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;$/&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Sets the &lt;em&gt;input record separator&lt;/em&gt;, which is used by &lt;code&gt;Kernel#gets&lt;/code&gt;. Character to use must be given as &lt;a href="http://en.wikipedia.org/wiki/Octal"&gt;octal number&lt;/a&gt;. If no number is given (&lt;code&gt;-0&lt;/code&gt;), it will use null bytes as separator. Using &lt;code&gt;-0777&lt;/code&gt; will read in the whole file at once. Another special value is &lt;code&gt;-00&lt;/code&gt;, which will set &lt;code&gt;$_&lt;/code&gt; to &lt;code&gt;"\n\n"&lt;/code&gt; (paragraph mode).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;-F&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;$;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Sets the &lt;em&gt;input field separator&lt;/em&gt;, which is used by &lt;code&gt;Array#split&lt;/code&gt;. Useful in combination with the &lt;code&gt;-a&lt;/code&gt; option.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;-l&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;$\&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Sets the &lt;em&gt;output record separator&lt;/em&gt; to the value of the &lt;em&gt;input record separator&lt;/em&gt; (&lt;code&gt;$/&lt;/code&gt;). Also runs &lt;a href="http://ruby-doc.org/core-2.3.0/String.html#method-i-chop-21"&gt;String#chop!&lt;/a&gt; on every line!&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id="further-reading"&gt;Further Reading&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Sed"&gt;sed&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://idiosyncratic-ruby.com/6-run-ruby-run.html"&gt;un&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/grosser/pru"&gt;pru&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Changing the Rules</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/16-changing-the-rules.html"/>
    <id>http://idiosyncratic-ruby.com/16-changing-the-rules.html</id>
    <published>2015-05-16T02:00:00+02:00</published>
    <updated>2015-05-16T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;Ruby allows you to change key functionality of the language. This means, it is also possible to break key functionality! Six examples of Ruby code you should never use:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="undefining-core-methods"&gt;Undefining Core Methods&lt;/h2&gt;

&lt;p&gt;The simplest way to change Ruby's global behavior is monkey patching: Nothing stops you from altering important core methods:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Module; undef append_features; end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This line will break the ability to mix-in modules:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Math.sin 42 # =&amp;gt; -0.9165215479156338
include Math
# NoMethodError: undefined method `append_features' for Math:Module
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="everything-nil"&gt;Everything &lt;code&gt;nil&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;No more &lt;code&gt;NoMethodError: undefined method&lt;/code&gt; or &lt;code&gt;NameError: uninitialized constant&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class BasicObject
  def self.const_missing(*)
  end

  def method_missing(*)
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nothing will fail, anymore. Not a good idea. Also see: &lt;a href="https://github.com/raganwald-deprecated/homoiconic/blob/master/2009-02-02/hopeless_egocentricity.md"&gt;Hopless Egocentricity&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;IDio.synCRATIC # =&amp;gt; nil
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="alternative-hash-access-semantics"&gt;Alternative Hash Access Semantics&lt;/h2&gt;

&lt;p&gt;You can redefine hash semantics, to raise an error, if a key was not found:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Hash
  alias [] fetch
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you will always get &lt;code&gt;KeyError&lt;/code&gt; instead of &lt;code&gt;nil&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{ "Idiosyncratic": "Ruby" }["Sane"]
# `fetch': key not found: "Sane" (KeyError)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You could argue that this is much cleaner than the normal semantics, but you won't be compatible with the rest of the world.&lt;/p&gt;

&lt;h2 id="manipulate-global-randomness"&gt;Manipulate Global Randomness&lt;/h2&gt;

&lt;p&gt;Don't use &lt;code&gt;Kernel#rand&lt;/code&gt;, &lt;code&gt;Array#shuffle&lt;/code&gt; or &lt;code&gt;Array#sample&lt;/code&gt;. &lt;a href="https://coderwall.com/p/oijyja/array-sample-and-array-shuffle-using-securerandom"&gt;Always use&lt;/a&gt; &lt;a href="http://ruby.janlelis.de/67-ruby-and-random"&gt;SecureRandom!&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;srand 84 # =&amp;gt; (something)
rand 100 # =&amp;gt; 42
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="change-a-global-default-separator"&gt;Change a Global Default Separator&lt;/h2&gt;

&lt;p&gt;Four of &lt;a href="http://idiosyncratic-ruby.com/9-globalization.html"&gt;Ruby's special two-letter globals&lt;/a&gt; are called &lt;em&gt;record separators&lt;/em&gt; and they affect the behaviour of various methods in Ruby:&lt;/p&gt;

&lt;table class="table-15-30-15-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Variable&lt;/th&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Default&lt;/th&gt;
      &lt;th&gt;Examples for Methods Affected&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;$;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;(Input) Field Separator&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;nil&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;String#split&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;$,&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Output Field Separator&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;nil&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;Array#join&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;$/&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Input Record Separator&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;"\n"&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;Kernel#gets&lt;/code&gt;, &lt;code&gt;IO#readlines&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;$\&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Output Record Separator&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;nil&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;Kernel#print&lt;/code&gt;, &lt;code&gt;IO#write&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Not only your own code is affected, but also core functionality. For example, changing the default output separators also changes Ruby's error messages:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; $, = "YIKES"
&amp;gt;&amp;gt; 123abc
SyntaxErrorYIKES: YIKES(irb):2: syntax error, unexpected tIDENTIFIER, \
expecting end-of-inputYIKES
  from /home/user/.rvm/rubies/ruby-2.2.2/bin/irb:11:in `&amp;lt;main&amp;gt;'YIKES
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="disabling-garbage-collection"&gt;Disabling Garbage Collection&lt;/h2&gt;

&lt;p&gt;Be careful! This might cause your machine to freeze or even worse!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GC.disable
100_000_000.times.each{ |i| "#{i}" }
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>210 Ways to Rome</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/15-207-ways-to-rome.html"/>
    <id>http://idiosyncratic-ruby.com/15-207-ways-to-rome.html</id>
    <published>2015-05-15T02:00:00+02:00</published>
    <updated>2015-05-15T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;All Ruby syntaxes¹ that represent the &lt;strong&gt;R&lt;/strong&gt; string literal:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="double-quoted-literal"&gt;(1) Double Quoted Literal&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;"R"&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="single-quoted-literal"&gt;(1) Single Quoted Literal&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;'R'&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="single-char-literals"&gt;(1) Single Char Literals&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;?R&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="heredocs"&gt;(9) Heredocs&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;&amp;lt;"STRING"
R
STRING&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;&amp;lt;'STRING'
R
STRING&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;&amp;lt;STRING
R
STRING&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;&amp;lt;-"STRING"
R
STRING&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;&amp;lt;-'STRING'
R
STRING&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;&amp;lt;-STRING
R
STRING&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;&amp;lt;~"STRING"
R
STRING&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;&amp;lt;~'STRING'
R
STRING&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;&amp;lt;~STRING
R
STRING&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="percent-syntax--q"&gt;(66) Percent Syntax / Q&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;%Q\0R\0&lt;/code&gt;
&lt;code&gt;%Q\x01R\x01&lt;/code&gt;
&lt;code&gt;%Q\x02R\x02&lt;/code&gt;
&lt;code&gt;%Q\x03R\x03&lt;/code&gt;
&lt;code&gt;%Q\x04R\x04&lt;/code&gt;
&lt;code&gt;%Q\x05R\x05&lt;/code&gt;
&lt;code&gt;%Q\x06R\x06&lt;/code&gt;
&lt;code&gt;%Q\aR\a&lt;/code&gt;
&lt;code&gt;%Q\bR\b&lt;/code&gt;
&lt;code&gt;%Q\tR\t&lt;/code&gt;
&lt;code&gt;%Q\nR\n&lt;/code&gt;
&lt;code&gt;%Q\vR\v&lt;/code&gt;
&lt;code&gt;%Q\fR\f&lt;/code&gt;
&lt;code&gt;%Q\rR\r&lt;/code&gt;
&lt;code&gt;%Q\x0ER\x0E&lt;/code&gt;
&lt;code&gt;%Q\x0FR\x0F&lt;/code&gt;
&lt;code&gt;%Q\x10R\x10&lt;/code&gt;
&lt;code&gt;%Q\x11R\x11&lt;/code&gt;
&lt;code&gt;%Q\x12R\x12&lt;/code&gt;
&lt;code&gt;%Q\x13R\x13&lt;/code&gt;
&lt;code&gt;%Q\x14R\x14&lt;/code&gt;
&lt;code&gt;%Q\x15R\x15&lt;/code&gt;
&lt;code&gt;%Q\x16R\x16&lt;/code&gt;
&lt;code&gt;%Q\x17R\x17&lt;/code&gt;
&lt;code&gt;%Q\x18R\x18&lt;/code&gt;
&lt;code&gt;%Q\x19R\x19&lt;/code&gt;
&lt;code&gt;%Q\x1AR\x1A&lt;/code&gt;
&lt;code&gt;%Q\eR\e&lt;/code&gt;
&lt;code&gt;%Q\x1CR\x1C&lt;/code&gt;
&lt;code&gt;%Q\x1DR\x1D&lt;/code&gt;
&lt;code&gt;%Q\x1ER\x1E&lt;/code&gt;
&lt;code&gt;%Q\x1FR\x1F&lt;/code&gt;
&lt;code&gt;%Q&amp;nbsp;R&amp;nbsp;&lt;/code&gt;
&lt;code&gt;%Q!R!&lt;/code&gt;
&lt;code&gt;%Q"R"&lt;/code&gt;
&lt;code&gt;%Q#R#&lt;/code&gt;
&lt;code&gt;%Q$R$&lt;/code&gt;
&lt;code&gt;%Q%R%&lt;/code&gt;
&lt;code&gt;%Q&amp;amp;R&amp;amp;&lt;/code&gt;
&lt;code&gt;%Q'R'&lt;/code&gt;
&lt;code&gt;%Q(R)&lt;/code&gt;
&lt;code&gt;%Q)R)&lt;/code&gt;
&lt;code&gt;%Q*R*&lt;/code&gt;
&lt;code&gt;%Q+R+&lt;/code&gt;
&lt;code&gt;%Q,R,&lt;/code&gt;
&lt;code&gt;%Q-R-&lt;/code&gt;
&lt;code&gt;%Q.R.&lt;/code&gt;
&lt;code&gt;%Q/R/&lt;/code&gt;
&lt;code&gt;%Q:R:&lt;/code&gt;
&lt;code&gt;%Q;R;&lt;/code&gt;
&lt;code&gt;%Q&amp;lt;R&amp;gt;&lt;/code&gt;
&lt;code&gt;%Q=R=&lt;/code&gt;
&lt;code&gt;%Q&amp;gt;R&amp;gt;&lt;/code&gt;
&lt;code&gt;%Q?R?&lt;/code&gt;
&lt;code&gt;%Q@R@&lt;/code&gt;
&lt;code&gt;%Q[R]&lt;/code&gt;
&lt;code&gt;%Q\\R\\&lt;/code&gt;
&lt;code&gt;%Q]R]&lt;/code&gt;
&lt;code&gt;%Q^R^&lt;/code&gt;
&lt;code&gt;%Q_R_&lt;/code&gt;
&lt;code&gt;%Q`R`&lt;/code&gt;
&lt;code&gt;%Q{R}&lt;/code&gt;
&lt;code&gt;%Q|R|&lt;/code&gt;
&lt;code&gt;%Q}R}&lt;/code&gt;
&lt;code&gt;%Q~R~&lt;/code&gt;
&lt;code&gt;%Q\x7FR\x7F&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="percent-syntax--q-1"&gt;(66) Percent Syntax / q&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;%q\0R\0&lt;/code&gt;
&lt;code&gt;%q\x01R\x01&lt;/code&gt;
&lt;code&gt;%q\x02R\x02&lt;/code&gt;
&lt;code&gt;%q\x03R\x03&lt;/code&gt;
&lt;code&gt;%q\x04R\x04&lt;/code&gt;
&lt;code&gt;%q\x05R\x05&lt;/code&gt;
&lt;code&gt;%q\x06R\x06&lt;/code&gt;
&lt;code&gt;%q\aR\a&lt;/code&gt;
&lt;code&gt;%q\bR\b&lt;/code&gt;
&lt;code&gt;%q\tR\t&lt;/code&gt;
&lt;code&gt;%q\nR\n&lt;/code&gt;
&lt;code&gt;%q\vR\v&lt;/code&gt;
&lt;code&gt;%q\fR\f&lt;/code&gt;
&lt;code&gt;%q\rR\r&lt;/code&gt;
&lt;code&gt;%q\x0ER\x0E&lt;/code&gt;
&lt;code&gt;%q\x0FR\x0F&lt;/code&gt;
&lt;code&gt;%q\x10R\x10&lt;/code&gt;
&lt;code&gt;%q\x11R\x11&lt;/code&gt;
&lt;code&gt;%q\x12R\x12&lt;/code&gt;
&lt;code&gt;%q\x13R\x13&lt;/code&gt;
&lt;code&gt;%q\x14R\x14&lt;/code&gt;
&lt;code&gt;%q\x15R\x15&lt;/code&gt;
&lt;code&gt;%q\x16R\x16&lt;/code&gt;
&lt;code&gt;%q\x17R\x17&lt;/code&gt;
&lt;code&gt;%q\x18R\x18&lt;/code&gt;
&lt;code&gt;%q\x19R\x19&lt;/code&gt;
&lt;code&gt;%q\x1AR\x1A&lt;/code&gt;
&lt;code&gt;%q\eR\e&lt;/code&gt;
&lt;code&gt;%q\x1CR\x1C&lt;/code&gt;
&lt;code&gt;%q\x1DR\x1D&lt;/code&gt;
&lt;code&gt;%q\x1ER\x1E&lt;/code&gt;
&lt;code&gt;%q\x1FR\x1F&lt;/code&gt;
&lt;code&gt;%q&amp;nbsp;R&amp;nbsp;&lt;/code&gt;
&lt;code&gt;%q!R!&lt;/code&gt;
&lt;code&gt;%q"R"&lt;/code&gt;
&lt;code&gt;%q#R#&lt;/code&gt;
&lt;code&gt;%q$R$&lt;/code&gt;
&lt;code&gt;%q%R%&lt;/code&gt;
&lt;code&gt;%q&amp;amp;R&amp;amp;&lt;/code&gt;
&lt;code&gt;%q'R'&lt;/code&gt;
&lt;code&gt;%q(R)&lt;/code&gt;
&lt;code&gt;%q)R)&lt;/code&gt;
&lt;code&gt;%q*R*&lt;/code&gt;
&lt;code&gt;%q+R+&lt;/code&gt;
&lt;code&gt;%q,R,&lt;/code&gt;
&lt;code&gt;%q-R-&lt;/code&gt;
&lt;code&gt;%q.R.&lt;/code&gt;
&lt;code&gt;%q/R/&lt;/code&gt;
&lt;code&gt;%q:R:&lt;/code&gt;
&lt;code&gt;%q;R;&lt;/code&gt;
&lt;code&gt;%q&amp;lt;R&amp;gt;&lt;/code&gt;
&lt;code&gt;%q=R=&lt;/code&gt;
&lt;code&gt;%q&amp;gt;R&amp;gt;&lt;/code&gt;
&lt;code&gt;%q?R?&lt;/code&gt;
&lt;code&gt;%q@R@&lt;/code&gt;
&lt;code&gt;%q[R]&lt;/code&gt;
&lt;code&gt;%q\\R\\&lt;/code&gt;
&lt;code&gt;%q]R]&lt;/code&gt;
&lt;code&gt;%q^R^&lt;/code&gt;
&lt;code&gt;%q_R_&lt;/code&gt;
&lt;code&gt;%q`R`&lt;/code&gt;
&lt;code&gt;%q{R}&lt;/code&gt;
&lt;code&gt;%q|R|&lt;/code&gt;
&lt;code&gt;%q}R}&lt;/code&gt;
&lt;code&gt;%q~R~&lt;/code&gt;
&lt;code&gt;%q\x7FR\x7F&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="percent-syntax--none"&gt;(66) Percent Syntax / None&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;%\0R\0&lt;/code&gt;
&lt;code&gt;%\x01R\x01&lt;/code&gt;
&lt;code&gt;%\x02R\x02&lt;/code&gt;
&lt;code&gt;%\x03R\x03&lt;/code&gt;
&lt;code&gt;%\x04R\x04&lt;/code&gt;
&lt;code&gt;%\x05R\x05&lt;/code&gt;
&lt;code&gt;%\x06R\x06&lt;/code&gt;
&lt;code&gt;%\aR\a&lt;/code&gt;
&lt;code&gt;%\bR\b&lt;/code&gt;
&lt;code&gt;%\tR\t&lt;/code&gt;
&lt;code&gt;%\nR\n&lt;/code&gt;
&lt;code&gt;%\vR\v&lt;/code&gt;
&lt;code&gt;%\fR\f&lt;/code&gt;
&lt;code&gt;%\rR\r&lt;/code&gt;
&lt;code&gt;%\x0ER\x0E&lt;/code&gt;
&lt;code&gt;%\x0FR\x0F&lt;/code&gt;
&lt;code&gt;%\x10R\x10&lt;/code&gt;
&lt;code&gt;%\x11R\x11&lt;/code&gt;
&lt;code&gt;%\x12R\x12&lt;/code&gt;
&lt;code&gt;%\x13R\x13&lt;/code&gt;
&lt;code&gt;%\x14R\x14&lt;/code&gt;
&lt;code&gt;%\x15R\x15&lt;/code&gt;
&lt;code&gt;%\x16R\x16&lt;/code&gt;
&lt;code&gt;%\x17R\x17&lt;/code&gt;
&lt;code&gt;%\x18R\x18&lt;/code&gt;
&lt;code&gt;%\x19R\x19&lt;/code&gt;
&lt;code&gt;%\x1AR\x1A&lt;/code&gt;
&lt;code&gt;%\eR\e&lt;/code&gt;
&lt;code&gt;%\x1CR\x1C&lt;/code&gt;
&lt;code&gt;%\x1DR\x1D&lt;/code&gt;
&lt;code&gt;%\x1ER\x1E&lt;/code&gt;
&lt;code&gt;%\x1FR\x1F&lt;/code&gt;
&lt;code&gt;%&amp;nbsp;R&amp;nbsp;&lt;/code&gt;
&lt;code&gt;%!R!&lt;/code&gt;
&lt;code&gt;%"R"&lt;/code&gt;
&lt;code&gt;%#R#&lt;/code&gt;
&lt;code&gt;%$R$&lt;/code&gt;
&lt;code&gt;%%R%&lt;/code&gt;
&lt;code&gt;%&amp;amp;R&amp;amp;&lt;/code&gt;
&lt;code&gt;%'R'&lt;/code&gt;
&lt;code&gt;%(R)&lt;/code&gt;
&lt;code&gt;%)R)&lt;/code&gt;
&lt;code&gt;%*R*&lt;/code&gt;
&lt;code&gt;%+R+&lt;/code&gt;
&lt;code&gt;%,R,&lt;/code&gt;
&lt;code&gt;%-R-&lt;/code&gt;
&lt;code&gt;%.R.&lt;/code&gt;
&lt;code&gt;%/R/&lt;/code&gt;
&lt;code&gt;%:R:&lt;/code&gt;
&lt;code&gt;%;R;&lt;/code&gt;
&lt;code&gt;%&amp;lt;R&amp;gt;&lt;/code&gt;
&lt;code&gt;%=R=&lt;/code&gt;
&lt;code&gt;%&amp;gt;R&amp;gt;&lt;/code&gt;
&lt;code&gt;%?R?&lt;/code&gt;
&lt;code&gt;%@R@&lt;/code&gt;
&lt;code&gt;%[R]&lt;/code&gt;
&lt;code&gt;%\\R\\&lt;/code&gt;
&lt;code&gt;%]R]&lt;/code&gt;
&lt;code&gt;%^R^&lt;/code&gt;
&lt;code&gt;%_R_&lt;/code&gt;
&lt;code&gt;%`R`&lt;/code&gt;
&lt;code&gt;%{R}&lt;/code&gt;
&lt;code&gt;%|R|&lt;/code&gt;
&lt;code&gt;%}R}&lt;/code&gt;
&lt;code&gt;%~R~&lt;/code&gt;
&lt;code&gt;%\x7FR\x7F&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;¹ You might need a &lt;a href="https://en.wikipedia.org/wiki/Hex_editor"&gt;hex editor&lt;/a&gt;, or &lt;a href="http://ruby-doc.org/core-2.3.0/Kernel.html#method-i-eval"&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;, to be able to use non-printable string delimiters.&lt;/p&gt;

&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://en.wikibooks.org/wiki/Ruby_Programming/Syntax/Literals#Strings"&gt;String Literals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Meeting some Locals</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/14-meeting-some-locals.html"/>
    <id>http://idiosyncratic-ruby.com/14-meeting-some-locals.html</id>
    <published>2015-05-14T02:00:00+02:00</published>
    <updated>2015-05-14T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;There are two very different ways to create local variables in Ruby. You are probably familiar with the classical way:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a, b = "$", "€"
a # =&amp;gt; "$"
b # =&amp;gt; "€"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It is simple to understand and looks good. But Ruby would not be Ruby, if there weren't for more obscure ways to assign variables: You could rewrite the previous example to create local variables in a more subtle way:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;%r&amp;lt;(?'a'.)(?'b'.)&amp;gt;=~"$" "€"
a # =&amp;gt; "$"
b # =&amp;gt; "€"
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="implicit-local-variables-through-regex-macthing"&gt;Implicit Local Variables Through Regex Macthing&lt;/h2&gt;

&lt;p&gt;Without the fancy obfuscations, the example above would look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/(?&amp;lt;a&amp;gt;.)(?&amp;lt;b&amp;gt;.)/ =~ "$€"
a # =&amp;gt; "$"
b # =&amp;gt; "€"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The regex matching operator &lt;code&gt;=~&lt;/code&gt; will create new local variables, when used together with &lt;a href="http://ruby-doc.org/core-2.3.0/Regexp.html#class-Regexp-label-Capturing"&gt;named captures&lt;/a&gt;. However, this is not recommended, because obviously, it violates &lt;strong&gt;PrOWCoFoHuNoMa&lt;/strong&gt; (Principle of writing code for humans, not machines).&lt;/p&gt;

&lt;p&gt;By the way, this will not work, if you swap operands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"$€" =~ /(?&amp;lt;a&amp;gt;.)(?&amp;lt;b&amp;gt;.)/
a # NameError: ...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="one-more-option"&gt;One More Option&lt;/h2&gt;

&lt;p&gt;In actuality, there is also a third way to set local variables: binding's &lt;code&gt;local_variable_set&lt;/code&gt;, but it does not really count, since you cannot introduce new variables this way:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a = nil
binding.local_variable_set :a, "$"
binding.local_variable_set :b, "€"
a # =&amp;gt; "$"
b # NameError: ...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Regexp.html#method-i-3D-7E"&gt;RDoc: Regexp#=~&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Binding.html#method-i-local_variable_set"&gt;RDoc: Binding#local_variable_set&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Slicing Rubies</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/13-slicing-rubies.html"/>
    <id>http://idiosyncratic-ruby.com/13-slicing-rubies.html</id>
    <published>2015-05-13T02:00:00+02:00</published>
    <updated>2015-05-13T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;Ruby puts a lot of effort into its &lt;a href="http://ruby-doc.org/core-2.3.0/Enumerable"&gt;Enumerable&lt;/a&gt; module, offering a lot of different ways of iterating through collections. It is one of the reasons for Ruby's success, but you can also call it idiosyncratic, sometimes. This episode potraits enumerables' three handy &lt;code&gt;slice_*&lt;/code&gt; methods.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="slicing-enumerables"&gt;Slicing Enumerables&lt;/h2&gt;

&lt;p&gt;Slicing lets you devide a collection into sub-collections. Take this array:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a = %w[Ruby in the back-end, AngularJS in the front-end]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let's say you want to devide it into smaller arrays. The simplest option would be passing a regex to &lt;code&gt;slice_before&lt;/code&gt; describing where to slice:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a.slice_before(/,/).to_a
# =&amp;gt; [["Ruby", "in", "the"], ["back-end,", "AngularJS", "in", "the", "front-end"]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A variation of this is method is &lt;code&gt;slice_after&lt;/code&gt;, which puts the separating element into the earlier sub-collection, which makes more sense in this case:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a.slice_after(/,/).to_a
# =&amp;gt; [["Ruby", "in", "the", "back-end,"], ["AngularJS", "in", "the", "front-end"]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Slicing uses &lt;a href="http://ruby-doc.org/core-2.3.0/Object.html#method-i-3D-3D-3D"&gt;===&lt;/a&gt; to compare each element with the given separator, so you can pass in a class as well:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;["A", "B", 1, "C", "D", 2].slice_after(Integer).to_a
# =&amp;gt; [["A", "B", 1], ["C", "D", 2]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For more complex, and more real-world problems, you will need to pass in a block, like for separating ascending numerical sequences:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;previous = Float::NAN
[0, 2, 3, 4, 6, 7, 9].slice_before{ |current|
  previous, slice = current, current != previous + 1
  slice # is false if previous + 1 is not current -&amp;gt; start new slice
}.to_a
# =&amp;gt; [0], [2, 3, 4], [6, 7], [9]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Keeping around additional variables is a little annoying, but fortunately, we can rewrite the previous example using the newer &lt;code&gt;slice_when&lt;/code&gt; method:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[0, 2, 3, 4, 6, 7, 9].slice_when{ |previous, current|
  current != previous + 1
}.to_a
# =&amp;gt; [0], [2, 3, 4], [6, 7], [9]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Enumerable.html#method-i-slice_after"&gt;RDoc: Enumerable#slice_*&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://bugs.ruby-lang.org/issues/9826"&gt;#slice_when discussion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>More Inspections</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/12-more-inspections.html"/>
    <id>http://idiosyncratic-ruby.com/12-more-inspections.html</id>
    <published>2015-05-12T02:00:00+02:00</published>
    <updated>2015-05-12T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;Some of IRB's command-line options can be called idiosyncratic as well. Take &lt;em&gt;math mode&lt;/em&gt; as an example: It will require the infamous &lt;a href="https://github.com/ruby/ruby/blob/trunk/lib/mathn.rb"&gt;mathn&lt;/a&gt; library on start up:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ irb -m
&amp;gt;&amp;gt; Math #=&amp;gt; CMath
&amp;gt;&amp;gt; 3/2 #=&amp;gt; (3/2)
&amp;gt;&amp;gt; !!defined?(Vector) #=&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And another one surprised me: You can pass custom &lt;a href="https://github.com/ruby/ruby/blob/trunk/lib/irb/inspector.rb"&gt;inspectors&lt;/a&gt; to IRB, for example, &lt;em&gt;yaml&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ irb -f --inspect yaml
&amp;gt;&amp;gt; [1,2,3]
=&amp;gt; ---
- 1
- 2
- 3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or &lt;em&gt;marshal&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ irb -f --inspect marshal
&amp;gt;&amp;gt; 42
=&amp;gt; i/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But you can also define &lt;em&gt;your own inspectors on the fly&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ irb -f --inspect "{ |r| r.to_s.reverse }"
&amp;gt;&amp;gt; [1,2,3]
=&amp;gt; ]3 ,2 ,1[
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It will be eval'd (!) as the block part of a new &lt;code&gt;proc&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;man irb&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/ruby/ruby/blame/trunk/lib/irb/context.rb"&gt;Source: irb/context&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/ruby/ruby/blob/trunk/lib/irb/inspector.rb"&gt;Source: irb/inspectors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Regular Extremism</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/11-regular-extremism.html"/>
    <id>http://idiosyncratic-ruby.com/11-regular-extremism.html</id>
    <published>2015-05-11T02:00:00+02:00</published>
    <updated>2015-05-11T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;You are here for a collection of 10 advanced features of regular expressions in Ruby!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="regex-conditionals"&gt;Regex Conditionals&lt;/h2&gt;

&lt;p&gt;Regular expressions can have embedded conditionals (&lt;em&gt;if-then-else&lt;/em&gt;) with &lt;code&gt;(?ref)then|else&lt;/code&gt;. "ref" stands for a group reference (number or name of a capture group):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# will match everything if string contains "ä", or only match first two chars
regex = /(?=(.*ä))?(?(1).*|..)/

"Ruby"[regex] #=&amp;gt; "Ru"
"Idiosyncrätic"[regex] #=&amp;gt; "Idiosyncrätic"
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="keep-expressions"&gt;Keep Expressions&lt;/h2&gt;

&lt;p&gt;The possible ways to &lt;a href="http://www.regular-expressions.info/lookaround.html"&gt;look around&lt;/a&gt; within a regex are:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Syntax&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;Example&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;(?=X)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Positive lookahead&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;"Ruby"[/.(?=b)/]    #=&amp;gt; "u"&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;(?!X)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Negative lookahead&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;"Ruby"[/.(?!u)/]    #=&amp;gt; "u"&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;(?&amp;lt;=X)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Positive lookbehind&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;"Ruby"[/(?&amp;lt;=u)./]   #=&amp;gt; "b"&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;(?&amp;lt;!X)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Negative lookbehind&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;"Ruby"[/(?&amp;lt;!R|^)./] #=&amp;gt; "b"&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;But Ruby also has "Keep Expressions", an additional shortcut syntax to do &lt;em&gt;positive lookbehinds&lt;/em&gt; using &lt;code&gt;\K&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Ruby"[/Ru\Kby/] #=&amp;gt; "by"
"Ruby"[/ru\Kby/] #=&amp;gt; nil
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="character-class-intersections"&gt;Character Class Intersections&lt;/h2&gt;

&lt;p&gt;You can nest character classes and AND-connect them with &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;. Matching all non-vowels here:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncratic".scan /[[a-z]&amp;amp;&amp;amp;[^aeiou]]+/
# =&amp;gt; ["d", "syncr", "t", "c"]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="regex-sub-expressions"&gt;Regex Sub-Expressions&lt;/h2&gt;

&lt;p&gt;You can recursively apply regex groups again with &lt;code&gt;\g&amp;lt;ref&amp;gt;&lt;/code&gt;. "ref" stands for a group reference (number or name of a capture group). This is different from back-references (&lt;code&gt;\1&lt;/code&gt; .. &lt;code&gt;\9&lt;/code&gt;), which will re-match the already matched string, instead of executing the regex again:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# match any number of sequences of 3 identical chars
regex = /((.)\2{2})\g&amp;lt;1&amp;gt;*/
"aaa"[regex] #=&amp;gt; "aaa"
"abc"[regex] #=&amp;gt; nil
"aaab"[regex] #=&amp;gt; "aaa"
"aaabbb"[regex] #=&amp;gt; "aaabbb"
"aaabbbc"[regex] #=&amp;gt; "aaabbb"
"aaabbbccc"[regex] #=&amp;gt; "aaabbbccc"
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="match-characters-that-belong-together"&gt;Match Characters that Belong Together&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;\X&lt;/code&gt; treats combined characters as a single character. See &lt;a href="http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries"&gt;grapheme clusters&lt;/a&gt; for more information.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;string = "R\u{030A}uby"
string[/./] #=&amp;gt; "R"
string[/.../] #=&amp;gt; "R̊u"
string[/\X\X/] #=&amp;gt; "R̊u"
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="relative-back-references"&gt;Relative Back-References&lt;/h2&gt;

&lt;p&gt;Back-refs can be relatively referenced from the current position via &lt;code&gt;\k&amp;lt;-n&amp;gt;&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Ruby by"[/(R)(u)(by) \k&amp;lt;-1&amp;gt;/] #=&amp;gt; "Ruby by"
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="deactivate-backtracking"&gt;Deactivate Backtracking&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://www.regular-expressions.info/atomic.html"&gt;Atomic groups&lt;/a&gt;, defined via &lt;code&gt;(?&amp;gt;X)&lt;/code&gt;, will always try to match the first of all alternatives:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Rüby"[/R(u*|ü)by/]   #=&amp;gt; "Rüby"
"Rüby"[/R(?&amp;gt;u*|ü)by/] #=&amp;gt; nil
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="turn-on-unicode-matching-for-w-d-s-and-b"&gt;Turn On Unicode-Matching for &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\d&lt;/code&gt;, &lt;code&gt;\s&lt;/code&gt;, and &lt;code&gt;\b&lt;/code&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;"Rüby"[/\w*/] #=&amp;gt; "R"
"Rüby"[/(?u)\w*/] #=&amp;gt; "Rüby"
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="continue-matching-at-last-match-position"&gt;Continue Matching at Last Match Position&lt;/h2&gt;

&lt;p&gt;When using a method that matches a regex multiple times against a string (like &lt;code&gt;String#gsub&lt;/code&gt; or &lt;code&gt;String#scan&lt;/code&gt;), you can reference the position of the last match via &lt;code&gt;\G&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"abc1abc22abc333".scan /\Gabc./ # =&amp;gt; ["abc1", "abc2"]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="stringsplit-with-capture-groups"&gt;&lt;code&gt;String#split&lt;/code&gt; with Capture Groups&lt;/h2&gt;

&lt;p&gt;The normal way of using &lt;code&gt;String#split&lt;/code&gt; is this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"0-0".split(/-/) #=&amp;gt; ["0", "0"]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But if you want to make your code as hard to read as possible, remember that captured groups will be added to the resulting array:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"0-0".split(/(-)/) #=&amp;gt; ["0", "-", "0"]
"0-0".split(/-(?=(.))/) #=&amp;gt; ["0", "0", "0"]
"0-0".split(/(((-)))/) #=&amp;gt; ["0", "-", "-", "-", "0"]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Regexp.html"&gt;RDoc: Regexp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/k-takata/Onigmo/blob/master/doc/RE"&gt;Onigmo Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Know your Environment</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/10-know-your-environment.html"/>
    <id>http://idiosyncratic-ruby.com/10-know-your-environment.html</id>
    <published>2015-05-10T02:00:00+02:00</published>
    <updated>2015-05-10T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;Ruby's &lt;a href="http://ruby-doc.org/core-2.3.0/ENV.html"&gt;ENV object&lt;/a&gt; gives you accss to &lt;a href="http://en.wikipedia.org/wiki/Environment_variable"&gt;enviroment variables&lt;/a&gt;. It looks like normal &lt;a href="http://ruby-doc.org/core-2.3.0/Hash.html"&gt;Ruby hash&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ENV["TERM"] #=&amp;gt; "xterm"
ENV["SOMETHING"] = "NEW" #=&amp;gt; "NEW"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But this is only the surface. Turns out &lt;code&gt;ENV&lt;/code&gt; is a &lt;em&gt;special object&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ENV.class #=&amp;gt; Object
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It is hash-like, but lacks some functionality:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ENV.flatten # NoMethodError
ENV.default = "MyNullObject" # NoMethodError
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Besides this, it behaves like an ordinary hash:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ENV["my_value"] = "something"
ENV[42] = "oops" # not quite: TypeError
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Another thing that is missing: Merging the &lt;code&gt;ENV&lt;/code&gt; hash with another hash:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ENV.merge(Idiosyncratic: "YES") # NoMethodError
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/ruby/ruby/blob/trunk/hash.c"&gt;Source: ENV&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/rubinius/rubinius/blob/master/kernel/common/env.rb"&gt;Rubinius Source: ENV&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Globalization</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/9-globalization.html"/>
    <id>http://idiosyncratic-ruby.com/9-globalization.html</id>
    <published>2015-05-09T02:00:00+02:00</published>
    <updated>2015-05-09T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;This is an overview of all the special, two-letter (and other) global variables in Ruby, which Ruby &lt;a href="http://www.perlmonks.org/?node_id=353259"&gt;inherited from Perl&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For the purpose of improving code readability, Ruby comes with &lt;a href="https://github.com/ruby/ruby/blob/trunk/lib/English.rb"&gt;English.rb&lt;/a&gt; in its standard library (or &lt;a href="https://github.com/janlelis/Deutsch.rb/blob/master/lib/Deutsch.rb"&gt;Deutsch.rb&lt;/a&gt; as gem), which provides non-cryptic aliases and some documentation.&lt;/p&gt;

&lt;p&gt;Ruby also defines some three-letter global variables that mirror CLI options (&lt;code&gt;$-…&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="types-of-special-global-variables"&gt;Types of Special Global Variables&lt;/h2&gt;

&lt;p&gt;Idiosyncratically, not all special global variables are global:&lt;/p&gt;

&lt;table class="table-20-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;Scope&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;global&lt;/td&gt;
      &lt;td&gt;Real global variable&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;thread&lt;/td&gt;
      &lt;td&gt;Thread-global variable: Can have different values in different threads&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;pseudo&lt;/td&gt;
      &lt;td&gt;Looks like a global variable, but is a local variable&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;defunct&lt;/td&gt;
      &lt;td&gt;Not working, anymore (removed from Ruby)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;read-only&lt;/td&gt;
      &lt;td&gt;Variable cannot be set to a new value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;(read-only)&lt;/td&gt;
      &lt;td&gt;Variable cannot be set to a new value, but is an array that is mutable&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id="list-of-all-special-global-variables"&gt;List of All Special Global Variables&lt;/h2&gt;

&lt;p&gt;The first table contains all two-letter variables and their aliases:&lt;/p&gt;

&lt;table class="table-12-20-36-14-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Perlish&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;English&lt;/th&gt;
      &lt;th&gt;Short&lt;/th&gt;
      &lt;th&gt;Info&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$!&lt;/td&gt;
      &lt;td&gt;thread&lt;/td&gt;
      &lt;td&gt;$ERROR_INFO&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Exception.html"&gt;RDoc&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$@&lt;/td&gt;
      &lt;td&gt;thread&lt;/td&gt;
      &lt;td&gt;$ERROR_POSITION&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Exception.html"&gt;RDoc&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$;&lt;/td&gt;
      &lt;td&gt;global&lt;/td&gt;
      &lt;td&gt;$FIELD_SEPARATOR&lt;/td&gt;
      &lt;td&gt;$FS, $-F¹&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/String.html#method-i-split"&gt;RDoc&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$,&lt;/td&gt;
      &lt;td&gt;global&lt;/td&gt;
      &lt;td&gt;$OUTPUT_FIELD_SEPARATOR&lt;/td&gt;
      &lt;td&gt;$OFS&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/IO.html#method-i-print"&gt;RDoc&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$/&lt;/td&gt;
      &lt;td&gt;global&lt;/td&gt;
      &lt;td&gt;$INPUT_RECORD_SEPARATOR&lt;/td&gt;
      &lt;td&gt;$RS, $-0¹&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/IO.html#method-i-gets"&gt;RDoc&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$\&lt;/td&gt;
      &lt;td&gt;global&lt;/td&gt;
      &lt;td&gt;$OUTPUT_RECORD_SEPARATOR&lt;/td&gt;
      &lt;td&gt;$ORS&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/IO.html#method-i-print"&gt;RDoc&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$.&lt;/td&gt;
      &lt;td&gt;global&lt;/td&gt;
      &lt;td&gt;$INPUT_LINE_NUMBER&lt;/td&gt;
      &lt;td&gt;$NR&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/IO.html#method-i-lineno"&gt;RDoc&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$_&lt;/td&gt;
      &lt;td&gt;pseudo&lt;/td&gt;
      &lt;td&gt;$LAST_READ_LINE&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/IO.html#method-i-gets"&gt;RDoc&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$&amp;gt;&lt;/td&gt;
      &lt;td&gt;global&lt;/td&gt;
      &lt;td&gt;$DEFAULT_OUTPUT&lt;/td&gt;
      &lt;td&gt;$stdout¹&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://robots.thoughtbot.com/io-in-ruby"&gt;IO in Ruby&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$&amp;lt;&lt;/td&gt;
      &lt;td&gt;global&lt;/td&gt;
      &lt;td&gt;$DEFAULT_INPUT&lt;/td&gt;
      &lt;td&gt;- (ARGF)&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://www.rubydoc.info/stdlib/core/ARGF"&gt;RDoc&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$$&lt;/td&gt;
      &lt;td&gt;read-only&lt;/td&gt;
      &lt;td&gt;$PROCESS_ID&lt;/td&gt;
      &lt;td&gt;$PID&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://allenlsy.com/working-with-unix-process-in-ruby/"&gt;Unix Processes&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$?&lt;/td&gt;
      &lt;td&gt;thread / read-only&lt;/td&gt;
      &lt;td&gt;$CHILD_STATUS&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Process.html#method-c-wait"&gt;RDoc&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$~&lt;/td&gt;
      &lt;td&gt;pseudo&lt;/td&gt;
      &lt;td&gt;$LAST_MATCH_INFO&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Regexp.html#class-Regexp-label-Special+global+variables"&gt;RDoc&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$=&lt;/td&gt;
      &lt;td&gt;defunct&lt;/td&gt;
      &lt;td&gt;$IGNORECASE&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$*&lt;/td&gt;
      &lt;td&gt;(read-only)&lt;/td&gt;
      &lt;td&gt;$ARGV&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://jnoconor.github.io/blog/2013/10/13/a-short-explanation-of-argv/"&gt;Explanation&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$&amp;amp;&lt;/td&gt;
      &lt;td&gt;pseudo / read-only&lt;/td&gt;
      &lt;td&gt;$MATCH&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Regexp.html#class-Regexp-label-Special+global+variables"&gt;RDoc&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$`&lt;/td&gt;
      &lt;td&gt;pseudo / read-only&lt;/td&gt;
      &lt;td&gt;$PREMATCH&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Regexp.html#class-Regexp-label-Special+global+variables"&gt;RDoc&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$'&lt;/td&gt;
      &lt;td&gt;pseudo / read-only&lt;/td&gt;
      &lt;td&gt;$POSTMATCH&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Regexp.html#class-Regexp-label-Special+global+variables"&gt;RDoc&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$+&lt;/td&gt;
      &lt;td&gt;pseudo / read-only&lt;/td&gt;
      &lt;td&gt;$LAST_PAREN_MATCH²&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Regexp.html#class-Regexp-label-Special+global+variables"&gt;RDoc&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$:&lt;/td&gt;
      &lt;td&gt;(read-only)&lt;/td&gt;
      &lt;td&gt;$LOAD_PATH¹&lt;/td&gt;
      &lt;td&gt;$-I¹&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://ruby-hacking-guide.github.io/load.html"&gt;RHG: Loading&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$"&lt;/td&gt;
      &lt;td&gt;(read-only)&lt;/td&gt;
      &lt;td&gt;$LOADED_FEATURES¹&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://ruby-hacking-guide.github.io/load.html"&gt;RHG: Loading&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$0&lt;/td&gt;
      &lt;td&gt;global&lt;/td&gt;
      &lt;td&gt;$PROGRAM_NAME¹&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Process.html#method-c-argv0"&gt;RDoc&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$1 - $9&lt;/td&gt;
      &lt;td&gt;pseudo&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Regexp.html#class-Regexp-label-Special+global+variables"&gt;RDoc&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$F³&lt;/td&gt;
      &lt;td&gt;global&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://idiosyncratic-ruby.com/17-stream-editing.html#auto-splitting-lines"&gt;Auto-Splitting Lines&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;¹ Available without requiring English.rb&lt;br /&gt;
² No &lt;em&gt;T&lt;/em&gt;, because it stands for &lt;em&gt;PARENTHESES&lt;/em&gt;, not &lt;em&gt;PARENT&lt;/em&gt;&lt;br /&gt;
³ With command-line option &lt;code&gt;-a&lt;/code&gt;&lt;/p&gt;

&lt;h3 id="other-special-global-variables"&gt;Other Special Global Variables&lt;/h3&gt;

&lt;table class="table-20-15-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;Info&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$stdin&lt;/td&gt;
      &lt;td&gt;global&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://robots.thoughtbot.com/io-in-ruby"&gt;IO in Ruby&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$stderr&lt;/td&gt;
      &lt;td&gt;global&lt;/td&gt;
      &lt;td&gt;&lt;a href="https://robots.thoughtbot.com/io-in-ruby"&gt;IO in Ruby&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$SAFE&lt;/td&gt;
      &lt;td&gt;thread&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://phrogz.net/programmingruby/taint.html#table_20.1"&gt;Level 1: Tainting&lt;/a&gt; (other levels were removed)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$FILENAME&lt;/td&gt;
      &lt;td&gt;read-only&lt;/td&gt;
      &lt;td&gt;The current file being read via ARGF. Same as &lt;a href="http://www.rubydoc.info/stdlib/core/ARGF#filename-instance_method"&gt;ARGF.filename&lt;/a&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$KCODE, $-K&lt;/td&gt;
      &lt;td&gt;defunct&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$DEBUG, $-d&lt;/td&gt;
      &lt;td&gt;global&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://idiosyncratic-ruby.com/3-ruby-can-you-speak-louder.html#global-debug-state"&gt;Global Debug States&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$VERBOSE, $-v, $-w&lt;/td&gt;
      &lt;td&gt;global&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://idiosyncratic-ruby.com/3-ruby-can-you-speak-louder.html#global-debug-state"&gt;Global Debug States&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$-W&lt;/td&gt;
      &lt;td&gt;global&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://idiosyncratic-ruby.com/3-ruby-can-you-speak-louder.html#global-debug-state"&gt;Global Debug States&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$-p&lt;/td&gt;
      &lt;td&gt;read-only&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://idiosyncratic-ruby.com/17-stream-editing.html"&gt;Stream Editing&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$-l&lt;/td&gt;
      &lt;td&gt;read-only&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://idiosyncratic-ruby.com/17-stream-editing.html#specify-line-format"&gt;Specify Line Format&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$-a&lt;/td&gt;
      &lt;td&gt;read-only&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://idiosyncratic-ruby.com/17-stream-editing.html#auto-splitting-lines"&gt;Auto-Splitting Lines&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$-i&lt;/td&gt;
      &lt;td&gt;global&lt;/td&gt;
      &lt;td&gt;&lt;a href="http://idiosyncratic-ruby.com/17-stream-editing.html#inplace-editing-files"&gt;Inplace-Editing Files&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</content>
  </entry>
  <entry>
    <title>Self Improvement</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/8-self-improvement.html"/>
    <id>http://idiosyncratic-ruby.com/8-self-improvement.html</id>
    <published>2015-05-08T02:00:00+02:00</published>
    <updated>2015-05-08T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;One of the never-ending style battles in Ruby land is &lt;code&gt;module_function&lt;/code&gt; vs &lt;code&gt;extend self&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Both enable you to define module methods, which can be called not only from instance level, but also from class level. This enables you to make modules that can optionally be &lt;code&gt;include&lt;/code&gt;'d into your current scope, which makes sense if the module contains non-state changing methods ("functions"). Not having to prepend the module name every time you use the functions saves time and looks good:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# class level
Mathematics.calc # =&amp;gt; 42

# instance level
include Mathematics
calc # =&amp;gt; 42
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="modulefunction"&gt;&lt;code&gt;module_function&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;You can achieve this kind of functionality using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;module Mathematics
  module_function

  def calc
    42
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which is very similar to writing this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;module Mathematics
  def self.calc
    42
  end

  private

  def calc
    42
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="reflection-observations"&gt;Reflection Observations&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;Mathematics.instance_method(:calc).owner #=&amp;gt; Mathematics
Mathematics.public_method_defined?(:calc) #=&amp;gt; false
Mathematics.private_method_defined?(:calc) #=&amp;gt; true

Mathematics.method(:calc).owner #=&amp;gt; #&amp;lt;Class:Mathematics&amp;gt;
Mathematics.method(:calc).owner.singleton_class? #=&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Two things to take away from this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The method will be copied to class' singleton class&lt;/li&gt;
  &lt;li&gt;The instance method's visibility will become private&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="extend-self"&gt;&lt;code&gt;extend self&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;There is another way to get something very similar:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;module Mathematics
  extend self

  def calc
    42
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using &lt;a href="http://ruby-doc.org/core-2.3.0/Object.html#method-i-extend"&gt;extend&lt;/a&gt;, the module will add its instance methods to the module's very own inheritance chain.&lt;/p&gt;

&lt;h3 id="reflection-observations-1"&gt;Reflection Observations&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;Mathematics.instance_method(:calc).owner #=&amp;gt; Mathematics
Mathematics.public_method_defined?(:calc) #=&amp;gt; true
Mathematics.private_method_defined?(:calc) #=&amp;gt; false

Mathematics.method(:calc).owner #=&amp;gt; Mathematics
Mathematics.method(:calc).owner.singleton_class? #=&amp;gt; false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The differences to &lt;code&gt;module_function&lt;/code&gt; are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;No method copying involved&lt;/li&gt;
  &lt;li&gt;No changes to method visibility&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="which-one-to-use"&gt;Which One to Use?&lt;/h2&gt;

&lt;h3 id="advantages-of-extend-self"&gt;Advantages of &lt;code&gt;extend self&lt;/code&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;No method copying: If you want to modify a method's behavior via meta-programming, you only need to do this in one place&lt;/li&gt;
  &lt;li&gt;No side effects, like changing the method's visibility&lt;/li&gt;
  &lt;li&gt;It is no extra language feature&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="adavantages-of-modulefunction"&gt;Adavantages of &lt;code&gt;module_function&lt;/code&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;The method name "module_function" describes what it does, so it might be better readable&lt;/li&gt;
  &lt;li&gt;Making included methods private &lt;a href="https://github.com/janlelis/idiosyncratic-ruby.com/commit/7923275d6bfce595c3f0a0f1d9eceaa6dae43800#commitcomment-11553416"&gt;might be desired&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://blog.rubybestpractices.com/posts/gregory/040-issue-10-uses-for-modules.html"&gt;Blog post on Ruby Best Practices about extend self&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://blog.rubybestpractices.com/posts/gregory/041-issue-10.5-uses-for-modules.html"&gt;Blog post on Ruby Best Practices about module_function&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Easier Switching</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/7-easier-switching.html"/>
    <id>http://idiosyncratic-ruby.com/7-easier-switching.html</id>
    <published>2015-05-07T02:00:00+02:00</published>
    <updated>2015-05-07T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;There is a command-line switch to enable command-line switches:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id="s"&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;Enables some switch parsing for switches after script name but before
any file name arguments (or before a --).  Any switches found there
are removed from ARGV and set the corresponding variable in the script.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this context "corresponding variable" means &lt;em&gt;global variable&lt;/em&gt;. Let's see this in action (the &lt;code&gt;-e&lt;/code&gt; option is for executing the Ruby code that follows in a string):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -se 'p $option'
# nil

$ ruby -se 'p $option' -- -option
# true
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="switching-files"&gt;Switching Files&lt;/h2&gt;

&lt;p&gt;You can add command-line options to the &lt;a href="http://en.wikipedia.org/wiki/Shebang_%28Unix%29"&gt;Ruby shebang line&lt;/a&gt;, which makes using the switch feature from the command-line more readable. Create a Ruby file (&lt;code&gt;switch.rb&lt;/code&gt;) and add:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!ruby -s
p $option
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No you can call it like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby switch.rb -option
# true
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="caveats"&gt;Caveats!&lt;/h2&gt;

&lt;p&gt;You should be careful, not to trigger the wrong switches:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby switch.rb -LOAD_PATH
switch.rb: $LOAD_PATH is a read-only variable (NameError)

$ ruby switch.rb -0
switch.rb: no implicit conversion of true into String (TypeError)

$ ruby switch.rb -stdout
switch.rb: $stdout must have write method, TrueClass given (TypeError)

$ ruby switch.rb -SAFE
switch.rb: no implicit conversion of true into Integer (TypeError)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;man ruby&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Run Ruby, Run!</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/6-run-ruby-run.html"/>
    <id>http://idiosyncratic-ruby.com/6-run-ruby-run.html</id>
    <published>2015-05-06T02:00:00+02:00</published>
    <updated>2015-05-06T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;There is a one-liner on the internet that will start a local web server, for serving all the static files in your current directory:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ python -m SimpleHTTPServer 8080
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or with Python 3:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ python3 -m http.server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Rubyists generally do not want to rely on Python, so there is a Ruby equivalent:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e httpd . -p 8080
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will fire up a very simple server, written in Ruby, using &lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/webrick/rdoc/WEBrick.html"&gt;WEBrick&lt;/a&gt; under the hood!&lt;/p&gt;

&lt;p&gt;It also takes some more options, see at bottom of this post for a listing of available ones.&lt;/p&gt;

&lt;p&gt;How does this work and what does it do exactly? First of all, what does &lt;code&gt;ruby -run&lt;/code&gt; mean? The answer might be surprising: It could be rewritten as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -require "un" -e "httpd" . -p 8080
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;-e&lt;/code&gt; option directly executes the ruby code given, and &lt;code&gt;-r&lt;/code&gt; is the short version of &lt;code&gt;--require&lt;/code&gt;. So it requires "un", which happens to be included in Ruby's standard library¹. It was written by Hirofumi WATANABE (eban), a long-time Ruby contributer and code golf star. &lt;code&gt;un.rb&lt;/code&gt;s goal is to
provide:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Utilities to replace common UNIX commands in Makefiles etc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;¹ The same is possible for &lt;a href="https://github.com/ruby/ruby/blob/trunk/lib/ubygems.rb"&gt;requiring rubygems&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's see, what else is included:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#   ruby -run -e cp             -- [OPTION] SOURCE DEST
#   ruby -run -e ln             -- [OPTION] TARGET LINK_NAME
#   ruby -run -e mv             -- [OPTION] SOURCE DEST
#   ruby -run -e rm             -- [OPTION] FILE
#   ruby -run -e mkdir          -- [OPTION] DIRS
#   ruby -run -e rmdir          -- [OPTION] DIRS
#   ruby -run -e install        -- [OPTION] SOURCE DEST
#   ruby -run -e chmod          -- [OPTION] OCTAL-MODE FILE
#   ruby -run -e touch          -- [OPTION] FILE
#   ruby -run -e wait_writable  -- [OPTION] FILE
#   ruby -run -e mkmf           -- [OPTION] EXTNAME [OPTION]
#   ruby -run -e httpd          -- [OPTION] DocumentRoot
#   ruby -run -e help [COMMAND]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Besides &lt;strong&gt;httpd&lt;/strong&gt;, you mostly get &lt;code&gt;FileUtils&lt;/code&gt; based implementations of common unix tools,: &lt;code&gt;cp&lt;/code&gt;, &lt;code&gt;ln&lt;/code&gt;, &lt;code&gt;mv&lt;/code&gt;, &lt;code&gt;rm&lt;/code&gt;, &lt;code&gt;mkdir&lt;/code&gt;, &lt;code&gt;rmdir&lt;/code&gt;, &lt;code&gt;install&lt;/code&gt;, &lt;code&gt;chmod&lt;/code&gt;, and &lt;code&gt;touch&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There are two more commands included, which don't fit into this unix category: &lt;a href="http://ruby-doc.org/stdlib-2.3.0/libdoc/mkmf/rdoc/MakeMakefile.html"&gt;mkmf&lt;/a&gt;, which you can use to create the Makefile for a Ruby C extension and &lt;a href="https://github.com/ruby/ruby/blob/ruby_2_2/lib/un.rb#L233-L264"&gt;wait_writable&lt;/a&gt;, which allows you to continuously try to open a file in writable mode.&lt;/p&gt;

&lt;h2 id="run-reference"&gt;&lt;code&gt;-run&lt;/code&gt; Reference&lt;/h2&gt;

&lt;p&gt;What follows is a reference of all &lt;strong&gt;un&lt;/strong&gt; commands. Also checkout the integrated help with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e help COMMAND
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="copy-files"&gt;Copy Files&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e cp SOURCE DEST [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Argument&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;SOURCE&lt;/td&gt;
      &lt;td&gt;File to copy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DEST&lt;/td&gt;
      &lt;td&gt;Where to copy the file&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;-p&lt;/td&gt;
      &lt;td&gt;Preserve file attributes if possible&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-r&lt;/td&gt;
      &lt;td&gt;Copy directories recursively&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-v&lt;/td&gt;
      &lt;td&gt;Verbose mode (print executed shell command)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id="create-symlink"&gt;Create Symlink&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e ln TARGET LINK_NAME [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Argument&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;TARGET&lt;/td&gt;
      &lt;td&gt;File to create symlink from&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LINK_NAME&lt;/td&gt;
      &lt;td&gt;Where to create the symlink&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;-s&lt;/td&gt;
      &lt;td&gt;Make symbolic links instead of hard links&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-f&lt;/td&gt;
      &lt;td&gt;Overwrite files, which already exists at destination&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-v&lt;/td&gt;
      &lt;td&gt;Verbose mode (print executed shell command)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id="move-file"&gt;Move File&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e mv SOURCE DEST [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Argument&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;SOURCE&lt;/td&gt;
      &lt;td&gt;File to move&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DEST&lt;/td&gt;
      &lt;td&gt;Where to move the file&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;-v&lt;/td&gt;
      &lt;td&gt;Verbose mode (print executed shell command)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id="remove-file"&gt;Remove File&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e rm FILE [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Argument&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;FILE&lt;/td&gt;
      &lt;td&gt;File(s) to remove&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;-f&lt;/td&gt;
      &lt;td&gt;Do nothing if file does not exist&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-r&lt;/td&gt;
      &lt;td&gt;Remove the contents of directories recursively&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-v&lt;/td&gt;
      &lt;td&gt;Verbose mode (print executed shell command)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id="create-directory"&gt;Create Directory&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e mkdir DIRS [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Argument&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;DIRS&lt;/td&gt;
      &lt;td&gt;Director(y/ies) to create&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;-p&lt;/td&gt;
      &lt;td&gt;Don't fail if directory already exists&lt;br /&gt;Create all directories necessary&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-v&lt;/td&gt;
      &lt;td&gt;Verbose mode (print executed shell command)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id="remove-directory"&gt;Remove Directory&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e rmdir DIRS [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Argument&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;DIRS&lt;/td&gt;
      &lt;td&gt;Director(y/ies) to remove&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;-p&lt;/td&gt;
      &lt;td&gt;Also remove directory's ancestors&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-v&lt;/td&gt;
      &lt;td&gt;Verbose mode (print executed shell command)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id="copy-files-and-set-attributes"&gt;Copy Files and Set Attributes&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e install SOURCE DEST [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Argument&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;SOURCE&lt;/td&gt;
      &lt;td&gt;File to copy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DEST&lt;/td&gt;
      &lt;td&gt;Where to copy the file&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;-p&lt;/td&gt;
      &lt;td&gt;Apply access/modification times of SOURCE files to&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;corresponding destination files&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-m&lt;/td&gt;
      &lt;td&gt;Set permission mode (as in chmod), instead of 0755&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-v&lt;/td&gt;
      &lt;td&gt;Verbose mode (print executed shell command)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id="change-file-mode"&gt;Change File Mode&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e chmod OCTAL-MODE FILE [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Argument&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;OCTAL-MODE&lt;/td&gt;
      &lt;td&gt;File mode to set as octal number&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;FILE&lt;/td&gt;
      &lt;td&gt;File(s) to operate on&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;-v&lt;/td&gt;
      &lt;td&gt;Verbose mode (print executed shell command)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id="update-file-timestamp-or-create-empty-file"&gt;Update File Timestamp or Create Empty File&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e touch FILE [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Argument&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;FILE&lt;/td&gt;
      &lt;td&gt;File(s) to touch&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;-v&lt;/td&gt;
      &lt;td&gt;Verbose mode (print executed shell command)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id="wait-until-file-gets-writable"&gt;Wait until File gets Writable&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e wait_writable FILE [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Argument&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;FILE&lt;/td&gt;
      &lt;td&gt;File(s) to wait for&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;-n RETRY&lt;/td&gt;
      &lt;td&gt;Count how often to retry&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-w SEC&lt;/td&gt;
      &lt;td&gt;Time to wait between retries (in seconds)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-v&lt;/td&gt;
      &lt;td&gt;Verbose mode (print access errors)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id="make-makefile"&gt;Make Makefile&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e mkmf EXTNAME [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Argument&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;EXTNAME&lt;/td&gt;
      &lt;td&gt;Extension name&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;-d ARGS&lt;/td&gt;
      &lt;td&gt;Run dir_config&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-h ARGS&lt;/td&gt;
      &lt;td&gt;Run have_header&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-l ARGS&lt;/td&gt;
      &lt;td&gt;Run have_library&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-f ARGS&lt;/td&gt;
      &lt;td&gt;Run have_func&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-v ARGS&lt;/td&gt;
      &lt;td&gt;Run have_var&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-t ARGS&lt;/td&gt;
      &lt;td&gt;Run have_type&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-m ARGS&lt;/td&gt;
      &lt;td&gt;Run have_macro&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-c ARGS&lt;/td&gt;
      &lt;td&gt;Run have_const&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–vendor&lt;/td&gt;
      &lt;td&gt;Install to vendor_ruby&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id="serve-static-files-via-http"&gt;Serve Static Files via HTTP&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ ruby -run -e httpd DOCUMENT_ROOT [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Argument&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;DOCUMENT_ROOT&lt;/td&gt;
      &lt;td&gt;Directory to serve&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table class="table-30-10-35-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option&lt;/th&gt;
      &lt;th&gt;Short&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;Example&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;–bind-adress=ADDR&lt;/td&gt;
      &lt;td&gt;-b&lt;/td&gt;
      &lt;td&gt;IP address to bind to&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;-b 127.0.0.1&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–port=NUM&lt;/td&gt;
      &lt;td&gt;-p&lt;/td&gt;
      &lt;td&gt;Port number to listen on&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;-p 8080&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–max-clients=MAX&lt;/td&gt;
      &lt;td&gt;-m&lt;/td&gt;
      &lt;td&gt;Max number of simultaneous clients&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;-m 2&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–temp-dir=DIR&lt;/td&gt;
      &lt;td&gt;-t&lt;/td&gt;
      &lt;td&gt;Temporary directory to use&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;-t /tmp&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–do-not-reverse-lookup&lt;/td&gt;
      &lt;td&gt;-d&lt;/td&gt;
      &lt;td&gt;Disable reverse lookup&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–request-timeout=SECOND&lt;/td&gt;
      &lt;td&gt;-r&lt;/td&gt;
      &lt;td&gt;Request timeout (in seconds)&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;-r 2&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–http-version=VERSION&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;HTTP version&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;--http-version=1.0&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;-v&lt;/td&gt;
      &lt;td&gt;Start WEBrick in verbose mode&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;-v&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id="further-reading"&gt;Further Reading&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/ruby/ruby/blob/trunk/lib/un.rb"&gt;un.rb&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://gist.github.com/willurd/5720255"&gt;Collection of one-liners that start a static server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Constant Shadows</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/5-constant-shadows.html"/>
    <id>http://idiosyncratic-ruby.com/5-constant-shadows.html</id>
    <published>2015-05-05T02:00:00+02:00</published>
    <updated>2015-05-05T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;The &lt;strong&gt;script lines&lt;/strong&gt; feature is probably the most famous example for idiosyncratic naming in Ruby!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Ruby can save all source files you &lt;code&gt;load&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; as strings. This is useful for debugging utilities, for example, standard library's &lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/debug.rb"&gt;debug&lt;/a&gt; and &lt;a href="https://github.com/ruby/ruby/tree/trunk/lib/tracer.rb"&gt;tracer&lt;/a&gt; both use these capabilities.&lt;/p&gt;

&lt;p&gt;This is possible with the &lt;strong&gt;script lines&lt;/strong&gt; object: It is a Ruby hash that stores all script filenames as keys and the whole file contents as values. It is not activated by default, you have to globally opt-in for it, which is done by &lt;em&gt;initializing it with an empty hash&lt;/em&gt;!&lt;/p&gt;

&lt;h2 id="quiz-how-to-access-this-magical-script-lines-hash"&gt;Quiz: How to Access this Magical Script Lines Hash?&lt;/h2&gt;

&lt;p&gt;A) &lt;code&gt;script_lines&lt;/code&gt;&lt;br /&gt;
B) &lt;code&gt;SCRIPT_LINES&lt;/code&gt;&lt;br /&gt;
C) &lt;code&gt;__SCRIPT_LINES&lt;/code&gt;&lt;br /&gt;
D) &lt;code&gt;__script_lines__&lt;/code&gt;&lt;br /&gt;
E) &lt;code&gt;SCRIPT_LINES__&lt;/code&gt;&lt;br /&gt;
F) &lt;code&gt;Ruby::DebugInfo::SCRIPT_LINES&lt;/code&gt;&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
.&lt;br /&gt;
The answer is E: &lt;code&gt;SCRIPT_LINES__&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;WEIRD. What gives with the trailing underscores? It’s such a big constant that it leaves a two-character shadow!!&lt;/em&gt;&lt;/p&gt;
&lt;a href="http://viewsourcecode.org/why/redhanded/inspect/whoaScript_lines__.html"&gt;&amp;mdash; why&lt;/a&gt;
&lt;/blockquote&gt;

&lt;h2 id="usage-example"&gt;Usage Example&lt;/h2&gt;

&lt;p&gt;It is a best practice to check if it already is defined, because someone else might have already activated it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SCRIPT_LINES__ = {} unless defined? SCRIPT_LINES__
require 'abbrev'
SCRIPT_LINES__.size
# =&amp;gt; 1
SCRIPT_LINES__.keys.first
# =&amp;gt; "/home/user/.rvm/rubies/ruby-2.2.2/lib/ruby/2.2.0/abbrev.rb"
SCRIPT_LINES__.values.first.is_a? Array
# =&amp;gt; true
SCRIPT_LINES__.values.first.size
# =&amp;gt; 131
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running &lt;code&gt;puts SCRIPT_LINES__.values.first&lt;/code&gt; will output every line of the file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#--
# Copyright (c) 2001,2003 Akinori MUSHA &amp;lt;knu@iDaemons.org&amp;gt;
#
# All rights reserved.  You can redistribute and/or modify it under
# the same terms as Ruby.
#
# $Idaemons: /home/cvs/rb/abbrev.rb,v 1.2 2001/05/30 09:37:45 knu Exp $
# $RoughId: abbrev.rb,v 1.4 2003/10/14 19:45:42 knu Exp $
# $Id: abbrev.rb 46784 2014-07-11 08:16:05Z hsbt $
#++

##
# Calculates the set of unambiguous abbreviations for a given set of strings.
#
#   require 'abbrev'
#   require 'pp'
#
#   pp Abbrev.abbrev(['ruby'])
#   #=&amp;gt;  {"ruby"=&amp;gt;"ruby", "rub"=&amp;gt;"ruby", "ru"=&amp;gt;"ruby", "r"=&amp;gt;"ruby"}
#
#   pp Abbrev.abbrev(%w{ ruby rules })
#
# _Generates:_
#   { "ruby"  =&amp;gt;  "ruby",
#     "rub"   =&amp;gt;  "ruby",
#     "rules" =&amp;gt;  "rules",
#     "rule"  =&amp;gt;  "rules",
#     "rul"   =&amp;gt;  "rules" }
#
# It also provides an array core extension, Array#abbrev.
#
#   pp %w{ summer winter }.abbrev
#
# _Generates:_
#   { "summer"  =&amp;gt; "summer",
#     "summe"   =&amp;gt; "summer",
#     "summ"    =&amp;gt; "summer",
#     "sum"     =&amp;gt; "summer",
#     "su"      =&amp;gt; "summer",
#     "s"       =&amp;gt; "summer",
#     "winter"  =&amp;gt; "winter",
#     "winte"   =&amp;gt; "winter",
#     "wint"    =&amp;gt; "winter",
#     "win"     =&amp;gt; "winter",
#     "wi"      =&amp;gt; "winter",
#     "w"       =&amp;gt; "winter" }

module Abbrev

  # Given a set of strings, calculate the set of unambiguous abbreviations for
  # those strings, and return a hash where the keys are all the possible
  # abbreviations and the values are the full strings.
  #
  # Thus, given +words+ is "car" and "cone", the keys pointing to "car" would
  # be "ca" and "car", while those pointing to "cone" would be "co", "con", and
  # "cone".
  #
  #   require 'abbrev'
  #
  #   Abbrev.abbrev(%w{ car cone })
  #   #=&amp;gt; {"ca"=&amp;gt;"car", "con"=&amp;gt;"cone", "co"=&amp;gt;"cone", "car"=&amp;gt;"car", "cone"=&amp;gt;"cone"}
  #
  # The optional +pattern+ parameter is a pattern or a string. Only input
  # strings that match the pattern or start with the string are included in the
  # output hash.
  #
  #   Abbrev.abbrev(%w{car box cone crab}, /b/)
  #   #=&amp;gt; {"box"=&amp;gt;"box", "bo"=&amp;gt;"box", "b"=&amp;gt;"box", "crab" =&amp;gt; "crab"}
  #
  #   Abbrev.abbrev(%w{car box cone}, 'ca')
  #   #=&amp;gt; {"car"=&amp;gt;"car", "ca"=&amp;gt;"car"}
  def abbrev(words, pattern = nil)
    table = {}
    seen = Hash.new(0)

    if pattern.is_a?(String)
      pattern = /\A#{Regexp.quote(pattern)}/  # regard as a prefix
    end

    words.each do |word|
      next if word.empty?
      word.size.downto(1) { |len|
        abbrev = word[0...len]

        next if pattern &amp;amp;&amp;amp; pattern !~ abbrev

        case seen[abbrev] += 1
        when 1
          table[abbrev] = word
        when 2
          table.delete(abbrev)
        else
          break
        end
      }
    end

    words.each do |word|
      next if pattern &amp;amp;&amp;amp; pattern !~ word

      table[word] = word
    end

    table
  end

  module_function :abbrev
end

class Array
  # Calculates the set of unambiguous abbreviations for the strings in +self+.
  #
  #   require 'abbrev'
  #   %w{ car cone }.abbrev
  #   #=&amp;gt; {"car"=&amp;gt;"car", "ca"=&amp;gt;"car", "cone"=&amp;gt;"cone", "con"=&amp;gt;"cone", "co"=&amp;gt;"cone"}
  #
  # The optional +pattern+ parameter is a pattern or a string. Only input
  # strings that match the pattern or start with the string are included in the
  # output hash.
  #
  #   %w{ fast boat day }.abbrev(/^.a/)
  #   #=&amp;gt; {"fast"=&amp;gt;"fast", "fas"=&amp;gt;"fast", "fa"=&amp;gt;"fast", "day"=&amp;gt;"day", "da"=&amp;gt;"day"}
  #
  #   Abbrev.abbrev(%w{car box cone}, "ca")
  #   #=&amp;gt; {"car"=&amp;gt;"car", "ca"=&amp;gt;"car"}
  #
  # See also Abbrev.abbrev
  def abbrev(pattern = nil)
    Abbrev::abbrev(self, pattern)
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="memory-impact"&gt;Memory Impact&lt;/h2&gt;

&lt;p&gt;Only use this for debugging purpose, since a lot of strings get loaded into your memory. This is a comparison loading ActiveSupport with and without script lines:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require 'active_support/all'
puts "#{`ps -o rss -p #{Process.pid}`.strip.split.last.to_i / 1024.0} MB"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Result: 16.421875 MB&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SCRIPT_LINES__ = {}
require 'active_support/all'
puts "#{`ps -o rss -p #{Process.pid}`.strip.split.last.to_i / 1024.0} MB"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Result: 19.85546875 MB&lt;/p&gt;

&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/ruby/ruby/blob/ruby_2_2/parse.y#L5446-L5460"&gt;Source: SCRIPT_LINES__&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/jruby/jruby/blob/9.0.0.0.pre2/core/src/main/java/org/jruby/parser/Parser.java#L176-L189"&gt;JRuby Source: SCRIPT_LINES__&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://stackoverflow.com/questions/7220896/get-current-ruby-process-memory-usage"&gt;The memory profiling one-liner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>What the Pack?</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/4-what-the-pack.html"/>
    <id>http://idiosyncratic-ruby.com/4-what-the-pack.html</id>
    <published>2015-05-04T02:00:00+02:00</published>
    <updated>2015-05-04T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;Ruby comes equipped with a powerful option for low level string manipulation: &lt;code&gt;String#unpack&lt;/code&gt; and its counter part &lt;code&gt;Array#pack&lt;/code&gt;. Today's episode takes a closer look.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;The general way how &lt;code&gt;String#unpack&lt;/code&gt; is used is this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"a string".unpack("pack template with directives")
# =&amp;gt; [...]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The string contains some data in a specific format, which you "unpack" using a format specification. The format specification is defined in the pack template. The result is an array that contains the same data (or parts of it), but in a different representation. Take a look at this very simple example, which converts a four-letter ASCII string into its integer based byte representation:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Ruby".unpack("C C C C")
# =&amp;gt; [82, 117, 98, 121]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Array#pack&lt;/code&gt; works the other way around, so if you have the integer byte representation, it will convert it to real bytes in a string:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[82, 117, 98, 121].pack("C C C C")
# =&amp;gt; "Ruby"
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="pack-template-format"&gt;Pack Template Format&lt;/h2&gt;

&lt;p&gt;The format of the pack template (&lt;code&gt;"C C C C"&lt;/code&gt; in the example above) might be unfamiliar, but it is not too complicated. It is a series of letters that describe how to interpret the next bytes in the string you are operating on. A letter is called "directive". Each directive has a different meaning, see below for a complete list of available directives. &lt;code&gt;C&lt;/code&gt; essentially means: One integer byte value.&lt;/p&gt;

&lt;p&gt;A directive can be followed by a number, how often it should be applied. So you could rewrite the above code to:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Ruby".unpack("C4")
# =&amp;gt; [82, 117, 98, 121]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You don't need to read the complete string:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Ruby".unpack("C2")
# =&amp;gt; [82, 117]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Instead of using a number, it is possible to use &lt;code&gt;*&lt;/code&gt;, which denotes that the directive should be applied as often as possible:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Ruby".unpack("C*")
# =&amp;gt; [82, 117, 98, 121]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Every character that is not a directive, a digit or &lt;code&gt;*&lt;/code&gt; will be ignored. This is useful to make a pack template more readable, by separating directives with spaces.&lt;/p&gt;

&lt;p&gt;What follows is a list of all directives and how to use them.&lt;/p&gt;

&lt;h2 id="integer-directives"&gt;Integer Directives&lt;/h2&gt;

&lt;p&gt;These will all unpack the bytes of a string to an array of integers. One of these integers represents one or more bytes. You have different modes that differ in the number of bytes each integer represents:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Directive&lt;/th&gt;
      &lt;th&gt;Size&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;C&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;char&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;I!&lt;/code&gt; or &lt;code&gt;I_&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;int&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;S!&lt;/code&gt; or &lt;code&gt;S_&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;short&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;L!&lt;/code&gt; or &lt;code&gt;L_&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;long&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;Q!&lt;/code&gt; or &lt;code&gt;Q_&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;long long&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;J!&lt;/code&gt; or &lt;code&gt;J_&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;pointer width&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Except for &lt;em&gt;char&lt;/em&gt; (which is always one byte), it depends on your operating system, how many bytes each of this modes actually reads. So if your operating system defines &lt;em&gt;short&lt;/em&gt; as 2 bytes, you will get an array that represents every group of two bytes as an integer value:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"\x01\x00\x02\x00".unpack("S!*") #=&amp;gt; [1, 2]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or the other way around:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[1, 2].pack("S!*") # =&amp;gt; "\x01\x00\x02\x00"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you do not want to depend on what byte sizes you operating system defines, you can omit the &lt;code&gt;!&lt;/code&gt; and it will use a fixed byte size (the exceptions being &lt;em&gt;int&lt;/em&gt; and &lt;em&gt;pointer width&lt;/em&gt;, which will always use their native size).&lt;/p&gt;

&lt;h3 id="c--an-unsigned-integer-per-byte"&gt;C | An Unsigned &lt;code&gt;Integer&lt;/code&gt; per Byte&lt;/h3&gt;

&lt;p&gt;Range: 0 to 255&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncrätic".unpack("C*")
# =&amp;gt; [73, 100, 105, 111, 115, 121, 110, 99, 114, 195, 164, 116, 105, 99]

[73, 100, 105, 111, 115, 121, 110, 99, 114, 195, 164, 116, 105, 99].pack("C*")
# =&amp;gt; "Idiosyncr\xC3\xA4tic"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that &lt;code&gt;Array#pack&lt;/code&gt; will not set the string's encoding for you, because it has no way to know.&lt;/p&gt;

&lt;h3 id="c--a-signed-integer-per-byte"&gt;c | A Signed &lt;code&gt;Integer&lt;/code&gt; per Byte&lt;/h3&gt;

&lt;p&gt;Range: -128 to 127&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncrätic".unpack("c*")
# =&amp;gt; [73, 100, 105, 111, 115, 121, 110, 99, 114, -61, -92, 116, 105, 99]

[73, 100, 105, 111, 115, 121, 110, 99, 114, -61, -92, 116, 105, 99].pack('c*')
# =&amp;gt; "Idiosyncr\xC3\xA4tic"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="s--an-unsigned-integer-per-2-bytes"&gt;S | An Unsigned &lt;code&gt;Integer&lt;/code&gt; per 2 Bytes&lt;/h3&gt;

&lt;p&gt;Range: 0 to 65535&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncrätic".unpack("S*")
# =&amp;gt; [25673, 28521, 31091, 25454, 50034, 29860, 25449]

[25673, 28521, 31091, 25454, 50034, 29860, 25449].pack("S*")
# =&amp;gt; "Idiosyncr\xC3\xA4tic"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="s--a-signed-integer-per-2-bytes"&gt;s | A Signed &lt;code&gt;Integer&lt;/code&gt; per 2 Bytes&lt;/h3&gt;

&lt;p&gt;Range: -32768 to 32767&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncrätic".unpack("s*")
# =&amp;gt; [25673, 28521, 31091, 25454, -15502, 29860, 25449]

[25673, 28521, 31091, 25454, -15502, 29860, 25449].pack("s*")
# =&amp;gt; "Idiosyncr\xC3\xA4tic"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="l--an-unsigned-integer-per-4-bytes"&gt;L | An Unsigned &lt;code&gt;Integer&lt;/code&gt; per 4 Bytes&lt;/h3&gt;

&lt;p&gt;Range: 0 to 4294967296&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncrätic".unpack("L*")
# =&amp;gt; [1869177929, 1668184435, 1956954994]

[1869177929, 1668184435, 1956954994].pack("L*")
# =&amp;gt; "Idiosyncr\xC3\xA4t"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: The byte size in this example is 14, which is not dividable by 4, so it will ignore the last 2 bytes. If you need them, you could use a different template like: &lt;code&gt;"L* C*"&lt;/code&gt;&lt;/p&gt;

&lt;h3 id="l--a-signed-integer-per-4-bytes"&gt;l | A Signed &lt;code&gt;Integer&lt;/code&gt; per 4 Bytes&lt;/h3&gt;

&lt;p&gt;Range: -2147483648 to 2147483647&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncrätic".unpack("l*")
# =&amp;gt; [1869177929, 1668184435, 1956954994]

[1869177929, 1668184435, 1956954994].pack("l*")
# =&amp;gt; "Idiosyncr\xC3\xA4t"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="q--an-unsigned-integer-per-8-bytes"&gt;Q | An Unsigned &lt;code&gt;Integer&lt;/code&gt; per 8 Bytes&lt;/h3&gt;

&lt;p&gt;Range: 0 to 18446744073709551616&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncrätic".unpack("Q*")
# =&amp;gt; [7164797593890415689]

[7164797593890415689].pack("Q*")
# =&amp;gt; "Idiosync"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="q--a-signed-integer-per-8-bytes"&gt;q | A Signed &lt;code&gt;Integer&lt;/code&gt; per 8 Bytes&lt;/h3&gt;

&lt;p&gt;Range: -9223372036854775808 to 9223372036854775807&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncrätic".unpack("q*")
# =&amp;gt; [7164797593890415689]

[7164797593890415689].pack("q*")
# =&amp;gt; "Idiosync"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="a-note-on-byte-order-big-endian-vs-little-endian"&gt;A Note on Byte Order (Big-Endian vs. Little-Endian)&lt;/h3&gt;

&lt;p&gt;All the previous examples used the native byte order, which means, that the operating system defines, if the more significant bytes come first (little-endian) or last (big-endian). You will find more information about &lt;a href="http://en.wikipedia.org/wiki/Endianness"&gt;"endianess" on wikipedia&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you don't want to rely on your operating system to define byte order, you can add &lt;code&gt;&amp;gt;&lt;/code&gt; for big-endianess or &lt;code&gt;&amp;lt;&lt;/code&gt; for little-endianess to your template's directives:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"\x01\x00\x02\x00".unpack("S&amp;lt;*") #=&amp;gt; [1, 2]
"\x01\x00\x02\x00".unpack("S&amp;gt;*") #=&amp;gt; [256, 512]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="integer-shortcut-directives"&gt;Integer Shortcut Directives&lt;/h2&gt;

&lt;h3 id="n--an-unsigned-integer-per-2-bytes-big-endian-similar-to-s"&gt;n | An Unsigned &lt;code&gt;Integer&lt;/code&gt; per 2 Bytes, Big-Endian (Similar to &lt;code&gt;S&amp;gt;&lt;/code&gt;)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncrätic".unpack("n*")
# =&amp;gt; [18788, 26991, 29561, 28259, 29379, 42100, 26979]

[18788, 26991, 29561, 28259, 29379, 42100, 26979].pack("n*")
# =&amp;gt; "Idiosyncr\xC3\xA4tic"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="n--a-signed-integer-per-4-bytes-big-endian-similar-to-l"&gt;N | A Signed &lt;code&gt;Integer&lt;/code&gt; per 4 Bytes, Big-Endian (Similar to &lt;code&gt;L&amp;gt;&lt;/code&gt;)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncrätic".unpack("N*")
# =&amp;gt; [1231317359, 1937337955, 1925424244]

[1231317359, 1937337955, 1925424244].pack("N*")
# =&amp;gt; "Idiosyncr\xC3\xA4t"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="v--an-unsigned-integer-per-2-bytes-little-endian-similar-to-s"&gt;v | An Unsigned &lt;code&gt;Integer&lt;/code&gt; per 2 Bytes, Little-Endian (Similar to &lt;code&gt;S&amp;lt;&lt;/code&gt;)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncrätic".unpack("v*")
# =&amp;gt; [25673, 28521, 31091, 25454, 50034, 29860, 25449]

[25673, 28521, 31091, 25454, 50034, 29860, 25449].pack("v*")
# =&amp;gt; "Idiosyncr\xC3\xA4tic"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="v--a-signed-integer-per-4-bytes-little-endian-similar-to-l"&gt;V | A Signed &lt;code&gt;Integer&lt;/code&gt; per 4 Bytes, Little-Endian (Similar to &lt;code&gt;L&amp;lt;&lt;/code&gt;)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncrätic".unpack("V*")
# =&amp;gt; [1869177929, 1668184435, 1956954994]

[1869177929, 1668184435, 1956954994].pack("V*")
# =&amp;gt; "Idiosyncr\xC3\xA4t"
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="integer-encoding-directives"&gt;Integer Encoding Directives&lt;/h2&gt;

&lt;h3 id="u--utf-8-characters"&gt;U | UTF-8 Characters&lt;/h3&gt;

&lt;p&gt;This will convert the string to &lt;a href="http://en.wikipedia.org/wiki/Code_point"&gt;unicode code points.&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"ɔıʇɐɹɔuʎsoıpı".unpack("U*")
# =&amp;gt; [596, 305, 647, 592, 633, 596, 117, 654, 115, 111, 305, 112, 305]

[596, 305, 647, 592, 633, 596, 117, 654, 115, 111, 305, 112, 305].pack("U*")
# =&amp;gt; "ɔıʇɐɹɔuʎsoıpı"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="w--ber-compression"&gt;w | BER Compression&lt;/h3&gt;

&lt;p&gt;See &lt;a href="http://en.wikipedia.org/wiki/X.690#BER_encoding"&gt;wikipedia on X.690&lt;/a&gt; for an explanation.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncrätic".unpack("w*")
# =&amp;gt; [73, 100, 105, 111, 115, 121, 110, 99, 114, 1102452, 105, 99]

[73, 100, 105, 111, 115, 121, 110, 99, 114, 1102452, 105, 99].pack("w*")
# =&amp;gt; "Idiosyncr\xC3\xA4tic"
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="float-directives"&gt;Float Directives&lt;/h2&gt;

&lt;p&gt;The following directives will interpret bytes as &lt;a href="http://en.wikipedia.org/wiki/IEEE_floating_point"&gt;Floats.&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="d-d--a-float-double-precision-native-endian"&gt;D, d | A &lt;code&gt;Float&lt;/code&gt; (Double Precision, Native-Endian)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[1.2, 3.4].pack("D*")
# =&amp;gt; "333333\xF3?333333\v@"

"333333\xF3?333333\v@".unpack("D*")
#=&amp;gt; [1.2, 3.4]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="f--a-float-single-precision-native-endian"&gt;F | A &lt;code&gt;Float&lt;/code&gt; (Single Precision, Native-Endian)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[1.2, 3.4].pack("F*")
# =&amp;gt; "\x9A\x99\x99?\x9A\x99Y@"

"\x9A\x99\x99?\x9A\x99Y@".unpack("F*")
# =&amp;gt; [1.2000000476837158, 3.4000000953674316]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="e--a-float-double-precision-little-endian"&gt;E | A &lt;code&gt;Float&lt;/code&gt; (Double Precision, Little-Endian)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[1.2, 3.4].pack("E*")
# =&amp;gt; "333333\xF3?333333\v@"

"333333\xF3?333333\v@".unpack("E*")
#=&amp;gt; [1.2, 3.4]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="e--a-float-single-precision-little-endian"&gt;e | A &lt;code&gt;Float&lt;/code&gt; (Single Precision, Little-Endian)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[1.2, 3.4].pack("e*")
# =&amp;gt; "\x9A\x99\x99?\x9A\x99Y@"

"\x9A\x99\x99?\x9A\x99Y@".unpack("e*")
# =&amp;gt; [1.2000000476837158, 3.4000000953674316]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="g--a-float-double-precision-big-endian"&gt;G | A &lt;code&gt;Float&lt;/code&gt; (Double Precision, Big-Endian)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[1.2, 3.4].pack("G*")
# =&amp;gt; "?\xF3333333@\v333333"

"?\xF3333333@\v333333".unpack("G*")
#=&amp;gt; [1.2, 3.4]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="g--a-float-single-precision-big-endian"&gt;g | A &lt;code&gt;Float&lt;/code&gt; (Single Precision, Big-Endian)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[1.2, 3.4].pack("g*")
# =&amp;gt; "?\x99\x99\x9A@Y\x99\x9A"

"\x9A\x99\x99?\x9A\x99Y@".unpack("g*")
# =&amp;gt; [1.2000000476837158, 3.4000000953674316]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="string-directives"&gt;String Directives&lt;/h2&gt;

&lt;p&gt;String directives are more confusing in the regard that input and output of a &lt;code&gt;pack&lt;/code&gt; or &lt;code&gt;unpack&lt;/code&gt; operation are both strings, one of them being wrapped as a single argument in an array. The rule to remember here is that the string representation is something encoded (which might be saved or sent over the wire), while the string-in-an-array format represents the data in a readable format.&lt;/p&gt;

&lt;h3 id="a--arbitrary-string"&gt;a | Arbitrary String&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncrätic".unpack("a20")
# =&amp;gt; ["Idiosyncr\xC3\xA4tic"]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fills with null bytes when packing:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;["Idiosyncrätic"].pack("a20")
# =&amp;gt; "Idiosyncr\xC3\xA4tic\x00\x00\x00\x00\x00\x00"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="a--arbitrary-string-clean-null-bytes"&gt;A | Arbitrary String (Clean Null Bytes)&lt;/h3&gt;

&lt;p&gt;Like &lt;strong&gt;a&lt;/strong&gt;, but removes spaces and null bytes when unpacking:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncrätic    \0 ".unpack("A20")
# =&amp;gt; ["Idiosyncr\xC3\xA4tic"]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Like &lt;strong&gt;a&lt;/strong&gt;, but replaces null bytes with spaces when packing:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;["Idiosyncrätic"].pack("A20")
# =&amp;gt; "Idiosyncr\xC3\xA4tic      "
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="z--null-terminated-string"&gt;Z | Null-Terminated String&lt;/h3&gt;

&lt;p&gt;Like &lt;strong&gt;a&lt;/strong&gt;, but unpacking will not read further than null bytes:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncrätic\0R".unpack("Z20")
# =&amp;gt; ["Idiosyncr\xC3\xA4tic"]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Like &lt;strong&gt;a&lt;/strong&gt;, but packing will add a null byte to the end, if used with &lt;code&gt;*&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;["Idiosyncrätic"].pack("Z*")
# =&amp;gt; "Idiosyncr\xC3\xA4tic\x00"
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="string-base-conversion-directives"&gt;String Base Conversion Directives&lt;/h2&gt;

&lt;h3 id="b--bit-string-big-endian"&gt;B | Bit String (Big-Endian)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;"abc".unpack("B*")
# =&amp;gt; ["011000010110001001100011"]

["011000010110001001100011"].pack("B*")
# =&amp;gt; "abc"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="b--bit-string-little-endian"&gt;b | Bit String (Little-Endian)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;"abc".unpack("b*")
# =&amp;gt; ["100001100100011011000110"]

["100001100100011011000110"].pack("b*")
# =&amp;gt; "abc"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="h--hex-string-big-endian"&gt;H | Hex String (Big-Endian)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;"xyz".unpack("H*")
# =&amp;gt; ["78797a"]

["78797a"].pack("H*")
# =&amp;gt; "xyz"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="h--hex-string-little-endian"&gt;h | Hex String (Little-Endian)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;"xyz".unpack("h*")
# =&amp;gt; ["8797a7"]

["8797a7"].pack("h*")
# =&amp;gt; "xyz"
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="string-encoding-directives"&gt;String Encoding Directives&lt;/h2&gt;

&lt;p&gt;Pack supports a few encoding conversion directives. Note that they are idiosyncratic, since they don't take a count option.&lt;/p&gt;

&lt;h3 id="u--uu-encoding"&gt;u | UU-Encoding&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Uuencoding"&gt;Unix-to-Unix Encoding.&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;["Idiosyncrätic"].pack("u")
# =&amp;gt; ".261I;W-Y;F-RPZ1T:6,`\n"

".261I;W-Y;F-RPZ1T:6,`\n".unpack("u")
# =&amp;gt; ["Idiosyncr\xC3\xA4tic"]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="m--quoted-printable--mime-encoding-rfc2045"&gt;M | Quoted-Printable / MIME Encoding (RFC2045)&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Quoted-printable"&gt;Quoted-Printable.&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;["Idiosyncrätic"].pack("M")
# =&amp;gt; "Idiosyncr=C3=A4tic=\n"

"Idiosyncr=C3=A4tic=\n".unpack("M")
# =&amp;gt; ["Idiosyncr\xC3\xA4tic"]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="m--base64-encoding-rfc-2045"&gt;m | Base64 Encoding (RFC 2045)&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Base64"&gt;Base64.&lt;/a&gt; Ruby's standard library also contains a &lt;a href="https://github.com/ruby/ruby/blob/trunk/lib/base64.rb#L23"&gt;Base64 wrapper.&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;["Idiosyncrätic"].pack("m")
# =&amp;gt; "SWRpb3N5bmNyw6R0aWM=\n"

"SWRpb3N5bmNyw6R0aWM=\n".unpack("m")
# =&amp;gt; ["Idiosyncr\xC3\xA4tic"]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="m0--base64-encoding-rfc-4648"&gt;m0 | Base64 Encoding (RFC 4648)&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Base64#RFC_4648"&gt;Base64.&lt;/a&gt; This will not add a new-line at the end.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;["Idiosyncrätic"].pack("m0")
# =&amp;gt; "SWRpb3N5bmNyw6R0aWM="

"SWRpb3N5bmNyw6R0aWM=".unpack("m0")
# =&amp;gt; ["Idiosyncr\xC3\xA4tic"]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="pointer-directives"&gt;Pointer Directives&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Pointer_%28computer_programming%29"&gt;Pointer&lt;/a&gt; inspection. If you want to understand how to use these, you should read &lt;a href="https://github.com/ruby/ruby/blob/trunk/pack.c"&gt;pack's source.&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="p--pointer-to-fixed-length-string"&gt;P | Pointer to Fixed-Length String&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;["Idiosyncrätic"].pack('P*')
# =&amp;gt; "\xC0\xDA\x04,.\x7F\x00\x00"

["Idiosyncrätic"].pack('P*').unpack("P*")
# =&amp;gt; ["Idiosync"]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="p--pointer-to-null-terminated-string"&gt;p | Pointer to Null-Terminated String&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;["Idiosyncrätic"].pack('p*')
# =&amp;gt; "\xB8\xF8\x03\x1C.\x7F\x00\x00"

["Idiosyncrätic"].pack('p*').unpack("p*")
# =&amp;gt; ["Idiosyncrätic"]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="positional-directives"&gt;Positional Directives&lt;/h2&gt;

&lt;p&gt;You can jump around the current byte position while processing the data. This enables you to read data twice or ignore some data in the middle.&lt;/p&gt;

&lt;h3 id="go-to-position"&gt;@ | Go to Position&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;"abc".unpack("H* @0B*")
#=&amp;gt; ["616263", "011000010110001001100011"]

["ffffff", "011000010110001001100011"].pack("H* @0B*")
# =&amp;gt; "abc"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="x--move-a-byte-back"&gt;X | Move a Byte Back&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;"Idiosyncrä".unpack("C* X c*")
# =&amp;gt; [73, 100, 105, 111, 115, 121, 110, 99, 114, 195, 164, -92]

[73, 100, 105, 111, 115, 121, 110, 99, 114, 195, 164, -92].pack("C* X c*")
# =&amp;gt; "Idiosyncr\xC3\xA4"
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="x--skip-byte-fill-with-null-byte-when-packing"&gt;x | Skip Byte (Fill with Null Byte when Packing)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;"abc".unpack("C x C")
# =&amp;gt; [97, 99]

[97, 99].pack("C x C")
# =&amp;gt; "a\x00c"
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/String.html#method-i-unpack"&gt;RDoc: String#unpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://ruby-doc.org/core-2.3.0/Array.html#method-i-pack"&gt;RDoc: Array#pack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/ruby/ruby/blob/trunk/pack.c"&gt;Source: pack.c&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.perlmonks.org/?node_id=224666"&gt;unpack in Perl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Ruby, Can You Speak Louder?</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/3-ruby-can-you-speak-louder.html"/>
    <id>http://idiosyncratic-ruby.com/3-ruby-can-you-speak-louder.html</id>
    <published>2015-05-03T02:00:00+02:00</published>
    <updated>2015-05-03T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;Ruby has some ways to turn on &lt;em&gt;debug mode&lt;/em&gt;, which library authors can use to print out extra information for interested users. But unfortunately, there are multiple &lt;em&gt;debug modes&lt;/em&gt; in Ruby. When to use which one?&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Consider you have this code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def production_method
  puts "I am doing the right thing part 1"
  # @a is really intereting here
  puts "I am doing the right thing part 2"
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We could query the global &lt;code&gt;$DEBUG&lt;/code&gt; variable, which can be toggled when starting the Ruby interpreter:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def production_method
  puts "I am doing the right thing part 1"
  $stderr.puts "@a is now: #{@a}" if $DEBUG
  puts "I am doing the right thing part 2"
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But is this the best way? It also could have been:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$stderr.puts "@a is now: #{@a}" if $VERBOSE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$stderr.puts "@a is now: #{@a}" if Library.debug_mode?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And what about:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;warn "@a is now: #{@a}"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ruby is a little idiosyncratic here. There is no standard way to signalize "I want to have more information". Ruby has two global debug modes: &lt;em&gt;debug mode&lt;/em&gt; and &lt;em&gt;verbosity mode&lt;/em&gt; and both behave differently. Within Ruby, the current debug mode state can be queried from two global variables:&lt;/p&gt;

&lt;h2 id="global-debug-state"&gt;Global Debug State&lt;/h2&gt;

&lt;p&gt;This table shows the different modes both of them can have:&lt;/p&gt;

&lt;table class="table-15-15-30-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Variable&lt;/th&gt;
      &lt;th&gt;Value&lt;/th&gt;
      &lt;th&gt;CLI-Variable Mirrors¹&lt;/th&gt;
      &lt;th&gt;Meaning&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;$DEBUG&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;$-d == true&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Debug mode active&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;$DEBUG&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;false&lt;/code&gt;²&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;$-d == false&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Debug mode inactive&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;$VERBOSE&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;$-v == true&lt;/code&gt;&lt;br /&gt;&lt;code&gt;$-w == true&lt;/code&gt;&lt;br /&gt;&lt;code&gt;$-W == 2&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Verbosity mode active&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;$VERBOSE&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;false&lt;/code&gt;²&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;$-v == false&lt;/code&gt;&lt;br /&gt;&lt;code&gt;$-w == false&lt;/code&gt;&lt;br /&gt;&lt;code&gt;$-W == 1&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Medium verbosity mode&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;$VERBOSE&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;nil&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;$-v == nil&lt;/code&gt;&lt;br /&gt;&lt;code&gt;$-w == nil&lt;/code&gt;&lt;br /&gt;&lt;code&gt;$-W == 0&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Silent verbosity mode&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;¹ Will be set automatically&lt;br /&gt;
² Default&lt;/p&gt;

&lt;p&gt;Note that the Verbosity mode is different for &lt;code&gt;$VERBOSE == false&lt;/code&gt; and &lt;code&gt;$VERBOSE == nil&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Another side note: While it is possible to change &lt;code&gt;$DEBUG&lt;/code&gt; to an arbitrary value, this is not true for &lt;code&gt;$VERBOSE&lt;/code&gt; - If you assign it a truish value, it will just be set to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What follows is a list of command line options that have an effects on the debug modes:&lt;/p&gt;

&lt;h2 id="command-line-options-for-debug-modes"&gt;Command Line Options for Debug Modes&lt;/h2&gt;

&lt;table class="table-20-20-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option&lt;/th&gt;
      &lt;th&gt;Alias&lt;/th&gt;
      &lt;th&gt;Effects&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;-W2&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;-W&lt;/code&gt;, &lt;code&gt;-w&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Sets &lt;code&gt;$VERBOSE&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;-W1&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Nothing (&lt;code&gt;$VERBOSE&lt;/code&gt; remains &lt;code&gt;false&lt;/code&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;-W0&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Sets &lt;code&gt;$VERBOSE&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;--verbose&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Sets &lt;code&gt;$VERBOSE&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;&lt;br /&gt;Also quits Ruby if no arguments given&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;-v&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Sets &lt;code&gt;$VERBOSE&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;&lt;br /&gt;Also Prints Ruby version&lt;br /&gt;Also quits Ruby if no arguments given&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;--debug&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Sets &lt;code&gt;$DEBUG&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;&lt;br /&gt;Sets &lt;code&gt;$VERBOSE&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;A funny thing to note is that &lt;code&gt;-v&lt;/code&gt; is a shortcut for &lt;code&gt;--version&lt;/code&gt; as well as it is one for &lt;code&gt;--verbose&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id="verbosity"&gt;Verbosity&lt;/h2&gt;

&lt;p&gt;The only thing that actually changes the behavior of the interpreter is the value of &lt;code&gt;VERBOSE&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;code&gt;$VERBOSE&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;Effect&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code&gt;Kernel#warn&lt;/code&gt; will output to &lt;code&gt;STDERR&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Interpreter warnings will be printed&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id="what-to-use"&gt;What to Use?&lt;/h2&gt;

&lt;p&gt;Use neither &lt;code&gt;$VERBOSE&lt;/code&gt;, nor &lt;code&gt;$DEBUG&lt;/code&gt;, but to use an instance variable in your library. Or use standard library's logger or some other logging gem. It is easier to understand than relying on the global debug modes.&lt;/p&gt;

&lt;p&gt;Use &lt;code&gt;$VERBOSE = true&lt;/code&gt; if you are interested in interpreter warnings.&lt;/p&gt;

&lt;h2 id="further-reading"&gt;Further Reading&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://mislav.uniqpath.com/2011/06/ruby-verbose-mode/"&gt;Verbose mode and warnings&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://api.rubyonrails.org/classes/Kernel.html#method-i-silence_warnings"&gt;Rails' verbosity silencer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.ruby-toolbox.com/categories/Logging"&gt;Ruby Loggers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Ruby String Magic</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/2-ruby-string-magic.html"/>
    <id>http://idiosyncratic-ruby.com/2-ruby-string-magic.html</id>
    <published>2015-05-02T02:00:00+02:00</published>
    <updated>2015-05-02T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;Ruby strings are powerful. You could say, Ruby is build around manipulating strings. There are tons of ways how to work with strings and as of Ruby 2.2.2, &lt;code&gt;String&lt;/code&gt; offers 116 instance methods. Knowing them well can save you a lot of time.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;What follows is a list of 10 lesser known things about strings: Some of them useful, some of them idiosyncratic, some both.&lt;/p&gt;

&lt;h2 id="named-format-strings"&gt;Named Format Strings&lt;/h2&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;Btw, Ruby&amp;#39;s format strings can be used with hashes:&amp;#10;&amp;quot;%&amp;lt;language&amp;gt;s: %&amp;lt;author&amp;gt;s&amp;quot; % { language: &amp;quot;Ruby&amp;quot;, author: &amp;quot;matz&amp;quot; } #=&amp;gt; &amp;quot;Ruby: matz&amp;quot;&lt;/p&gt;&amp;mdash; Ruby String Magic (@RubyStrings) &lt;a href="https://twitter.com/RubyStrings/status/527152031782674432"&gt;October 28, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;h2 id="string-concatenation"&gt;String Concatenation&lt;/h2&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;There is a lesser-known syntax for concatenating string literals: &amp;quot;just&amp;quot; &amp;quot;put&amp;quot; &amp;quot;them&amp;quot; &amp;quot;directly&amp;quot;&amp;quot;after&amp;quot; &amp;quot;each&amp;quot; &amp;quot;other&amp;quot;&lt;/p&gt;&amp;mdash; Ruby String Magic (@RubyStrings) &lt;a href="https://twitter.com/RubyStrings/status/510013718076600320"&gt;September 11, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;h2 id="strings--empty-ranges"&gt;Strings + Empty Ranges&lt;/h2&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;Ruby is strange. How can an *empty* range have an effect when applied to a string?&amp;#10;r = 0..-3&amp;#10;r.to_a.empty? #=&amp;gt; true&amp;#10;&amp;quot;Ruby&amp;quot;[r] #=&amp;gt; &amp;quot;Ru&amp;quot;&lt;/p&gt;&amp;mdash; Ruby String Magic (@RubyStrings) &lt;a href="https://twitter.com/RubyStrings/status/519066888014659584"&gt;October 6, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;h2 id="whitespace-matching"&gt;Whitespace Matching&lt;/h2&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;Unicode is full of whitespaces. This is how you match them:&amp;#10;a=&amp;quot;    　&amp;quot; #=&amp;gt; &amp;quot;    　&amp;quot;&amp;#10;a.scan(/\s/).size #=&amp;gt; 1&amp;#10;a.scan(/[[:space:]]/).size #=&amp;gt; 5&lt;/p&gt;&amp;mdash; Ruby String Magic (@RubyStrings) &lt;a href="https://twitter.com/RubyStrings/status/539440415498579969"&gt;December 1, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;h2 id="stringsucc"&gt;&lt;code&gt;String#succ&lt;/code&gt;&lt;/h2&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;Ruby&amp;#39;s weird calculation of string successors:&amp;#10;&amp;quot;9z&amp;quot;.succ #=&amp;gt; &amp;quot;10a&amp;quot;&amp;#10;&amp;quot;z9&amp;quot;.succ #=&amp;gt; &amp;quot;aa0&amp;quot;&lt;/p&gt;&amp;mdash; Ruby String Magic (@RubyStrings) &lt;a href="https://twitter.com/RubyStrings/status/520230545465548801"&gt;October 9, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;h2 id="stdlib-string-compression"&gt;Stdlib String Compression&lt;/h2&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;Simple stdlib string compression:&amp;#10;require &amp;#39;zlib&amp;#39;&amp;#10;s = &amp;quot;Ruby&amp;quot;*99&amp;#10;s.size #=&amp;gt; 396&amp;#10;c = Zlib.deflate(s)&amp;#10;c.size #=&amp;gt; 17&amp;#10;Zlib.inflate(c) == s #=&amp;gt;true&lt;/p&gt;&amp;mdash; Ruby String Magic (@RubyStrings) &lt;a href="https://twitter.com/RubyStrings/status/511902948805599233"&gt;September 16, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;h2 id="using-regex-groups-in-string"&gt;Using Regex Groups in &lt;code&gt;String#[]&lt;/code&gt;&lt;/h2&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;You can use regex incl. captured groups when accessing substrings via the [] method: &amp;quot;#42&amp;quot;[/.(\d+)/, 1] #=&amp;gt; &amp;quot;42&amp;quot;&lt;/p&gt;&amp;mdash; Ruby String Magic (@RubyStrings) &lt;a href="https://twitter.com/RubyStrings/status/508605294059192320"&gt;September 7, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;h2 id="rexepunion"&gt;&lt;code&gt;Rexep.union&lt;/code&gt;&lt;/h2&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;If you have an array of strings, you can automatically generate a regex that matches any the strings: regex = Regexp.union(array_of_strings)&lt;/p&gt;&amp;mdash; Ruby String Magic (@RubyStrings) &lt;a href="https://twitter.com/RubyStrings/status/510441137254195200"&gt;September 12, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;h2 id="convert-a-string-from-snakecase-to-camelcase"&gt;Convert a String from &lt;em&gt;snake_case&lt;/em&gt; to &lt;em&gt;CamelCase&lt;/em&gt;&lt;/h2&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;You can camelize a string (some_string =&amp;gt; SomeString) with:&amp;#10;&amp;quot;some_string&amp;quot;.gsub(/(?:^|_)([a-z])/) do $1.upcase end&lt;/p&gt;&amp;mdash; Ruby String Magic (@RubyStrings) &lt;a href="https://twitter.com/RubyStrings/status/509330964246720512"&gt;September 9, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;h2 id="convert-a-string-from-camelcase-to-snakecase"&gt;Convert a String from &lt;em&gt;CamelCase&lt;/em&gt; to &lt;em&gt;snake_case&lt;/em&gt;&lt;/h2&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;You can snakify a string (SomeString =&amp;gt; some_string) with: &amp;#10;&amp;quot;SomeString&amp;quot;.gsub(/(?&amp;lt;!^)[A-Z]/) do &amp;quot;_#$&amp;amp;&amp;quot; end.downcase&lt;/p&gt;&amp;mdash; Ruby String Magic (@RubyStrings) &lt;a href="https://twitter.com/RubyStrings/status/508995693277904896"&gt;September 8, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.ruby-doc.org/core-2.3.0/String.html"&gt;RDoc: String&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/ruby/ruby/blob/trunk/string.c"&gt;Source: String&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/rubinius/rubinius/blob/master/kernel/common/string.rb"&gt;Rubinus Source: String&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Test Highlights</title>
    <link rel="alternate" href="http://idiosyncratic-ruby.com/1-test-highlights.html"/>
    <id>http://idiosyncratic-ruby.com/1-test-highlights.html</id>
    <published>2015-05-01T02:00:00+02:00</published>
    <updated>2015-05-01T02:00:00+02:00</updated>
    <author>
      <name>Jan Lelis</name>
    </author>
    <content type="html">&lt;p&gt;Compared to other languages, Ruby does not have very good tool support for development. This might not be a problem for many of us: In the end, humans create the code, and not the tools.&lt;/p&gt;

&lt;p&gt;Nevertheless, it would be great to have better tools. Or at least valid syntax highlighting!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;The following table shows popular options for code highlighting, but none of them can manage to properly highlight more advanced Ruby features. Here is the:&lt;/p&gt;

&lt;h2 id="syntax-highlighter-comparison"&gt;Syntax Highlighter Comparison&lt;/h2&gt;

&lt;table class="table-35-30-X"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Editor or Syntax Highlighter&lt;/th&gt;
      &lt;th&gt;Version&lt;/th&gt;
      &lt;th&gt;Highlights Ruby Correctly?¹&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://github.com/rubychan/coderay"&gt;coderay&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;1.1.0&lt;/td&gt;
      &lt;td&gt;no. score: 4/5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://www.jetbrains.com/ruby/"&gt;ruby mine&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;7.1 RM-141.664&lt;/td&gt;
      &lt;td&gt;no. score: 4/5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://github.com/jneen/rouge"&gt;rouge&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;1.8.0&lt;/td&gt;
      &lt;td&gt;no. score: 3/5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://www.gnu.org/software/emacs/"&gt;emacs&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;24.3.1&lt;/td&gt;
      &lt;td&gt;no. score: 2/5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://pygments.org/"&gt;pygments&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;1.6&lt;/td&gt;
      &lt;td&gt;no. score: 2/5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://wiki.gnome.org/Apps/Gedit"&gt;gedit&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;3.10.4&lt;/td&gt;
      &lt;td&gt;no. score: 1/5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://github.com/PrismJS/prism"&gt;prism.js&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;0.0.1&lt;/td&gt;
      &lt;td&gt;no. score: 1/5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://github.com/ccampbell/rainbow"&gt;rainbow.js&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;1.1.9&lt;/td&gt;
      &lt;td&gt;no. score: 1/5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://www.gnu.org/software/src-highlite/"&gt;src-highlight&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;3.1.6 (library: 4:0:0)&lt;/td&gt;
      &lt;td&gt;no. score: 1/5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://github.com/syntaxhighlighter/syntaxhighlighter"&gt;syntaxhighlighter.js&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;3.0.83&lt;/td&gt;
      &lt;td&gt;no. score: 1/5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="http://www.vim.org/"&gt;vim&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;7.4.52&lt;/td&gt;
      &lt;td&gt;no. score: 1/5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://atom.io/"&gt;atom&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;0.192.0&lt;/td&gt;
      &lt;td&gt;no. score: 0/5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://github.com/isagalaev/highlight.js"&gt;highlight.js&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;8.5&lt;/td&gt;
      &lt;td&gt;no. score: 0/5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href="https://www.sublimetext.com/"&gt;sublime text&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;3 Build 3083&lt;/td&gt;
      &lt;td&gt;no. score: 0/5&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;¹ Obviously, passing the test does not necessarily mean that a tool highlights Ruby correctly - but it is an indication.&lt;/p&gt;

&lt;h2 id="the-idiosyncratic-ruby-syntax-highlight-test"&gt;The Idiosyncratic Ruby Syntax Highlight Test&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;# # #
# For Reference
42
"String with #{ :interpolation }"
/regex$/
$/

# # #
# TEST CASE 1: Question Marks
# SHOULD BE HIGHLIGHTED AS: Array of Strings - Operator - String - Operator - String

[?', ?(] ?'a':'b'

# # #
# TEST CASE 2: Percent Format
# SHOULD BE HIGHLIGHTED AS: String - Operator - Array of Numbers

"%d %d %d"%[1,2,3]

# # #
# TEST CASE 3: Space-delimited String
# SHOULD BE HIGHLIGHTED AS: String Delimiter - String

% 5 #

# # #
# TEST CASE 4: Multi-line Regex with Global Variable Interpolation
# SHOULD BE HIGHLIGHTED AS: Regex Delimiter - Regex -
#                           Interpolation Character (Optional) -
#                           Global Variable -
#                           Regex Delimiter - Regex Options

/
$$#$/
/omix

# # #
# TEST CASE 5: Nested Heredoc
# SHOULD BE HIGHLIGHTED AS: Method - String Delimiter - Operator -
#                           String Delimiter - String - String Delimiter
#                           String - String Delimiter

puts &amp;lt;&amp;lt;HERE&amp;lt;&amp;lt;&amp;lt;&amp;lt;THERE
foo 42
HERE
bla 43
THERE
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
</feed>
